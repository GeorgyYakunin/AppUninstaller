# compiler: R8
# compiler_version: 1.5.69
# min_api: 19
# pg_map_id: 5a376f5
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    20:22:void <init>() -> <init>
    40:40:android.os.IBinder asBinder() -> asBinder
    29:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    44:69:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    101:103:void <init>(android.os.IBinder) -> <init>
    106:106:android.os.IBinder asBinder() -> asBinder
    141:150:void cancel(java.lang.String,int,java.lang.String) -> cancel
    158:165:void cancelAll(java.lang.String) -> cancelAll
    110:110:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    117:133:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:17:void <init>() -> <init>
    35:35:android.os.IBinder asBinder() -> asBinder
    24:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    39:60:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    72:74:void <init>(android.os.IBinder) -> <init>
    77:77:android.os.IBinder asBinder() -> asBinder
    81:81:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    85:99:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    83:86:void <init>(android.os.Handler) -> <init>
    138:142:void <init>(android.os.Parcel) -> <init>
    125:125:int describeContents() -> describeContents
    121:121:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    96:111:void send(int,android.os.Bundle) -> send
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:75:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:64:void run() -> run
androidx.activity.Cancellable -> a.a.a:
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> g
    int mContentLayoutId -> h
    androidx.lifecycle.ViewModelStore mViewModelStore -> f
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> d
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> e
    84:88:void <init>() -> <init>
    137:139:void <init>(int) -> <init>
    50:50:void access$001(androidx.activity.ComponentActivity) -> a
    297:297:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> a
    220:222:java.lang.Object getLastCustomNonConfigurationInstance() -> d
    208:208:java.lang.Object onRetainCustomNonConfigurationInstance() -> e
    241:241:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    303:303:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    257:258:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    286:287:void onBackPressed() -> onBackPressed
    149:155:void onCreate(android.os.Bundle) -> onCreate
    176:196:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    160:166:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
    androidx.activity.ComponentActivity this$0 -> b
    69:69:void <init>(androidx.activity.ComponentActivity) -> <init>
    72:73:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    androidx.activity.ComponentActivity this$0 -> a
    94:94:void <init>(androidx.activity.ComponentActivity) -> <init>
    98:105:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    108:108:void <init>(androidx.activity.ComponentActivity) -> <init>
    112:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$b:
    androidx.lifecycle.ViewModelStore viewModelStore -> b
    java.lang.Object custom -> a
    56:56:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sNextServedViewField -> h
    java.lang.reflect.Field sHField -> f
    java.lang.reflect.Field sServedViewField -> g
    int INIT_FAILED -> d
    int sReflectedFieldsInitialized -> e
    int NOT_INITIALIAZED -> b
    android.app.Activity mActivity -> a
    int INIT_SUCCESS -> c
    38:38:void <clinit>() -> <clinit>
    45:47:void <init>(android.app.Activity) -> <init>
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    101:112:void initializeReflectiveFields() -> a
androidx.activity.OnBackPressedCallback -> a.a.b:
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    54:56:void <init>(boolean) -> <init>
    void handleOnBackPressed() -> a
    71:72:void setEnabled(boolean) -> a
    103:104:void addCancellable(androidx.activity.Cancellable) -> a
    82:82:boolean isEnabled() -> b
    107:108:void removeCancellable(androidx.activity.Cancellable) -> b
    91:94:void remove() -> c
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    65:66:void <init>() -> <init>
    75:77:void <init>(java.lang.Runnable) -> <init>
    95:96:void addCallback(androidx.activity.OnBackPressedCallback) -> a
    145:152:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> a
    162:169:boolean hasEnabledCallbacks() -> a
    112:115:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> b
    184:196:void onBackPressed() -> b
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    220:224:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    229:239:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    243:249:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
    androidx.activity.OnBackPressedDispatcher this$0 -> b
    200:202:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    206:208:void cancel() -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> a.a.c:
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> a
androidx.activity.R -> a.a.d:
    668:668:void <init>() -> <init>
androidx.activity.R$attr -> a.a.d$a:
    455:455:void <init>() -> <init>
androidx.activity.R$color -> a.a.d$b:
    471:471:void <init>() -> <init>
androidx.activity.R$dimen -> a.a.d$c:
    750:750:void <init>() -> <init>
androidx.activity.R$drawable -> a.a.d$d:
    806:806:void <init>() -> <init>
androidx.activity.R$id -> a.a.d$e:
    785:785:void <init>() -> <init>
androidx.activity.R$integer -> a.a.d$f:
    790:790:void <init>() -> <init>
androidx.activity.R$layout -> a.a.d$g:
    134:134:void <init>() -> <init>
androidx.activity.R$string -> a.a.d$h:
    871:871:void <init>() -> <init>
androidx.activity.R$style -> a.a.d$i:
    551:551:void <init>() -> <init>
androidx.activity.R$styleable -> a.a.d$j:
    287:272:void <clinit>() -> <clinit>
    126:126:void <init>() -> <init>
androidx.annotation.AnimRes -> a.b.a:
androidx.annotation.AnimatorRes -> a.b.b:
androidx.annotation.AnyRes -> a.b.c:
androidx.annotation.AnyThread -> a.b.d:
androidx.annotation.ArrayRes -> a.b.e:
androidx.annotation.AttrRes -> a.b.f:
androidx.annotation.BinderThread -> a.b.g:
androidx.annotation.BoolRes -> a.b.h:
androidx.annotation.CallSuper -> a.b.i:
androidx.annotation.CheckResult -> a.b.j:
androidx.annotation.ColorInt -> a.b.k:
androidx.annotation.ColorLong -> a.b.l:
androidx.annotation.ColorRes -> a.b.m:
androidx.annotation.ContentView -> a.b.n:
androidx.annotation.DimenRes -> a.b.o:
androidx.annotation.Dimension -> a.b.p:
    int PX -> b
    int SP -> c
    int DP -> a
androidx.annotation.DrawableRes -> a.b.q:
androidx.annotation.FloatRange -> a.b.r:
androidx.annotation.FontRes -> a.b.s:
androidx.annotation.FractionRes -> a.b.t:
androidx.annotation.GuardedBy -> a.b.u:
androidx.annotation.HalfFloat -> a.b.v:
androidx.annotation.IdRes -> a.b.w:
androidx.annotation.InspectableProperty -> a.b.x:
androidx.annotation.InspectableProperty$EnumEntry -> a.b.x$a:
androidx.annotation.InspectableProperty$FlagEntry -> a.b.x$b:
androidx.annotation.InspectableProperty$ValueType -> a.b.x$c:
    androidx.annotation.InspectableProperty$ValueType COLOR -> f
    androidx.annotation.InspectableProperty$ValueType INT_FLAG -> e
    androidx.annotation.InspectableProperty$ValueType RESOURCE_ID -> h
    androidx.annotation.InspectableProperty$ValueType GRAVITY -> g
    androidx.annotation.InspectableProperty$ValueType NONE -> b
    androidx.annotation.InspectableProperty$ValueType INT_ENUM -> d
    androidx.annotation.InspectableProperty$ValueType INFERRED -> c
    androidx.annotation.InspectableProperty$ValueType[] $VALUES -> i
    152:148:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    148:148:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.IntDef -> a.b.y:
androidx.annotation.IntRange -> a.b.z:
androidx.annotation.IntegerRes -> a.b.a0:
androidx.annotation.InterpolatorRes -> a.b.b0:
androidx.annotation.LayoutRes -> a.b.c0:
androidx.annotation.LongDef -> a.b.d0:
androidx.annotation.MainThread -> a.b.e0:
androidx.annotation.MenuRes -> a.b.f0:
androidx.annotation.NavigationRes -> a.b.g0:
androidx.annotation.NonNull -> a.b.h0:
androidx.annotation.Nullable -> a.b.i0:
androidx.annotation.PluralsRes -> a.b.j0:
androidx.annotation.Px -> a.b.k0:
androidx.annotation.RawRes -> a.b.l0:
androidx.annotation.RequiresApi -> a.b.m0:
androidx.annotation.RequiresFeature -> a.b.n0:
androidx.annotation.RequiresPermission -> a.b.o0:
androidx.annotation.RequiresPermission$Read -> a.b.o0$a:
androidx.annotation.RequiresPermission$Write -> a.b.o0$b:
androidx.annotation.RestrictTo -> a.b.p0:
androidx.annotation.RestrictTo$Scope -> a.b.p0$a:
    androidx.annotation.RestrictTo$Scope LIBRARY -> b
    androidx.annotation.RestrictTo$Scope LIBRARY_GROUP -> c
    androidx.annotation.RestrictTo$Scope LIBRARY_GROUP_PREFIX -> d
    androidx.annotation.RestrictTo$Scope GROUP_ID -> e
    androidx.annotation.RestrictTo$Scope TESTS -> f
    androidx.annotation.RestrictTo$Scope SUBCLASSES -> g
    androidx.annotation.RestrictTo$Scope[] $VALUES -> h
    63:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.annotation.Size -> a.b.q0:
androidx.annotation.StringDef -> a.b.r0:
androidx.annotation.StringRes -> a.b.s0:
androidx.annotation.StyleRes -> a.b.t0:
androidx.annotation.StyleableRes -> a.b.u0:
androidx.annotation.TransitionRes -> a.b.v0:
androidx.annotation.UiThread -> a.b.w0:
androidx.annotation.VisibleForTesting -> a.b.x0:
    int PROTECTED -> f
    int NONE -> g
    int PRIVATE -> d
    int PACKAGE_PRIVATE -> e
androidx.annotation.WorkerThread -> a.b.y0:
androidx.annotation.XmlRes -> a.b.z0:
androidx.appcompat.R -> a.c.a:
    668:668:void <init>() -> <init>
androidx.appcompat.R$anim -> a.c.a$a:
    455:455:void <init>() -> <init>
androidx.appcompat.R$attr -> a.c.a$b:
    863:863:void <init>() -> <init>
androidx.appcompat.R$bool -> a.c.a$c:
    460:460:void <init>() -> <init>
androidx.appcompat.R$color -> a.c.a$d:
    189:189:void <init>() -> <init>
androidx.appcompat.R$dimen -> a.c.a$e:
    607:607:void <init>() -> <init>
androidx.appcompat.R$drawable -> a.c.a$f:
    846:846:void <init>() -> <init>
androidx.appcompat.R$id -> a.c.a$g:
    306:306:void <init>() -> <init>
androidx.appcompat.R$integer -> a.c.a$h:
    192:192:void <init>() -> <init>
androidx.appcompat.R$interpolator -> a.c.a$i:
    339:339:void <init>() -> <init>
androidx.appcompat.R$layout -> a.c.a$j:
    344:344:void <init>() -> <init>
androidx.appcompat.R$string -> a.c.a$k:
    752:752:void <init>() -> <init>
androidx.appcompat.R$style -> a.c.a$l:
    1853:1853:void <init>() -> <init>
androidx.appcompat.R$styleable -> a.c.a$m:
    2264:3198:void <clinit>() -> <clinit>
    3372:3372:void <init>() -> <init>
androidx.appcompat.app.ActionBar -> a.c.b.a:
    int DISPLAY_SHOW_CUSTOM -> h
    int DISPLAY_HOME_AS_UP -> f
    int DISPLAY_SHOW_TITLE -> g
    int DISPLAY_USE_LOGO -> d
    int DISPLAY_SHOW_HOME -> e
    int NAVIGATION_MODE_LIST -> b
    int NAVIGATION_MODE_TABS -> c
    int NAVIGATION_MODE_STANDARD -> a
    92:92:void <init>() -> <init>
    1068:1068:boolean openOptionsMenu() -> A
    void removeAllTabs() -> B
    1114:1114:boolean requestFocus() -> C
    void show() -> D
    void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> a
    void addTab(androidx.appcompat.app.ActionBar$Tab) -> a
    void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> a
    void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> a
    void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setCustomView(android.view.View) -> a
    void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> a
    void setDisplayOptions(int,int) -> a
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> a
    930:930:void setHomeActionContentDescription(java.lang.CharSequence) -> a
    1021:1022:void setElevation(float) -> a
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> a
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> a
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> b
    void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> b
    void removeTab(androidx.appcompat.app.ActionBar$Tab) -> b
    void setSubtitle(java.lang.CharSequence) -> b
    890:890:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> b
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> b
    void removeTabAt(int) -> c
    void selectTab(androidx.appcompat.app.ActionBar$Tab) -> c
    void setIcon(android.graphics.drawable.Drawable) -> c
    void setTitle(java.lang.CharSequence) -> c
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    void setCustomView(int) -> d
    void setDisplayHomeAsUpEnabled(boolean) -> d
    void setLogo(android.graphics.drawable.Drawable) -> d
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> d
    void setDisplayOptions(int) -> e
    void setDisplayShowCustomEnabled(boolean) -> e
    540:540:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> e
    1074:1074:boolean closeOptionsMenu() -> e
    void setDisplayShowHomeEnabled(boolean) -> f
    530:530:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> f
    1006:1007:void setHideOffset(int) -> f
    1098:1098:boolean collapseActionView() -> f
    android.view.View getCustomView() -> g
    void setDisplayShowTitleEnabled(boolean) -> g
    950:950:void setHomeActionContentDescription(int) -> g
    int getDisplayOptions() -> h
    void setDisplayUseLogoEnabled(boolean) -> h
    911:911:void setHomeAsUpIndicator(int) -> h
    void setIcon(int) -> i
    966:967:void setHideOnContentScrollEnabled(boolean) -> i
    1036:1036:float getElevation() -> i
    int getHeight() -> j
    void setLogo(int) -> j
    847:847:void setHomeButtonEnabled(boolean) -> j
    void setNavigationMode(int) -> k
    993:993:int getHideOffset() -> k
    1047:1047:void setShowHideAnimationEnabled(boolean) -> k
    int getNavigationItemCount() -> l
    void setSelectedNavigationItem(int) -> l
    int getNavigationMode() -> m
    void setSubtitle(int) -> m
    int getSelectedNavigationIndex() -> n
    void setTitle(int) -> n
    androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> o
    java.lang.CharSequence getSubtitle() -> p
    int getTabCount() -> q
    859:859:android.content.Context getThemedContext() -> r
    java.lang.CharSequence getTitle() -> s
    void hide() -> t
    1080:1080:boolean invalidateOptionsMenu() -> u
    980:980:boolean isHideOnContentScrollEnabled() -> v
    boolean isShowing() -> w
    870:870:boolean isTitleTruncated() -> x
    androidx.appcompat.app.ActionBar$Tab newTab() -> y
    1121:1121:void onDestroy() -> z
androidx.appcompat.app.ActionBar$DisplayOptions -> a.c.b.a$a:
androidx.appcompat.app.ActionBar$LayoutParams -> a.c.b.a$b:
    int gravity -> a
    1377:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1387:void <init>(int,int) -> <init>
    1390:1392:void <init>(int,int,int) -> <init>
    1395:1396:void <init>(int) -> <init>
    1399:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$NavigationMode -> a.c.b.a$c:
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener -> a.c.b.a$d:
    void onMenuVisibilityChanged(boolean) -> a
androidx.appcompat.app.ActionBar$OnNavigationListener -> a.c.b.a$e:
    boolean onNavigationItemSelected(int,long) -> a
androidx.appcompat.app.ActionBar$Tab -> a.c.b.a$f:
    int INVALID_POSITION -> a
    1171:1171:void <init>() -> <init>
    java.lang.CharSequence getContentDescription() -> a
    androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> a
    androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> a
    androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> a
    androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> a
    androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> a
    androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> a
    android.view.View getCustomView() -> b
    androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> b
    androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> b
    android.graphics.drawable.Drawable getIcon() -> c
    androidx.appcompat.app.ActionBar$Tab setIcon(int) -> c
    int getPosition() -> d
    androidx.appcompat.app.ActionBar$Tab setText(int) -> d
    java.lang.Object getTag() -> e
    java.lang.CharSequence getText() -> f
    void select() -> g
androidx.appcompat.app.ActionBar$TabListener -> a.c.b.a$g:
    void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction) -> a
    void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction) -> b
    void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction) -> c
androidx.appcompat.app.ActionBarDrawerToggle -> a.c.b.b:
    androidx.drawerlayout.widget.DrawerLayout mDrawerLayout -> b
    android.view.View$OnClickListener mToolbarNavigationClickListener -> j
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> e
    androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl -> a
    int mOpenDrawerContentDescRes -> h
    boolean mWarnedForDisplayHomeAsUp -> k
    int mCloseDrawerContentDescRes -> i
    boolean mDrawerIndicatorEnabled -> f
    boolean mHasCustomUpIndicator -> g
    androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider -> c
    boolean mDrawerSlideAnimationEnabled -> d
    153:155:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int) -> <init>
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    195:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    258:262:void onConfigurationChanged(android.content.res.Configuration) -> a
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> a
    303:314:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> a
    354:364:void setDrawerIndicatorEnabled(boolean) -> a
    371:371:androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> a
    380:382:void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> a
    413:418:void onDrawerSlide(android.view.View,float) -> a
    429:433:void onDrawerOpened(android.view.View) -> a
    459:459:void onDrawerStateChanged(int) -> a
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> a
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    507:513:void setPosition(float) -> a
    390:394:void setDrawerSlideAnimationEnabled(boolean) -> b
    444:448:void onDrawerClosed(android.view.View) -> b
    499:500:void setActionBarDescription(int) -> b
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    328:333:void setHomeAsUpIndicator(int) -> c
    471:471:android.view.View$OnClickListener getToolbarNavigationClickListener() -> c
    340:340:boolean isDrawerIndicatorEnabled() -> d
    400:400:boolean isDrawerSlideAnimationEnabled() -> e
    236:246:void syncState() -> f
    282:289:void toggle() -> g
androidx.appcompat.app.ActionBarDrawerToggle$1 -> a.c.b.b$a:
    androidx.appcompat.app.ActionBarDrawerToggle this$0 -> b
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$Delegate -> a.c.b.b$b:
    android.content.Context getActionBarThemedContext() -> a
    void setActionBarDescription(int) -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    boolean isNavigationVisible() -> b
    android.graphics.drawable.Drawable getThemeUpIndicator() -> c
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider -> a.c.b.b$c:
    androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> c
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> a.c.b.b$d:
    androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo mSetIndicatorInfo -> b
    android.app.Activity mActivity -> a
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> a
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    570:579:void setActionBarDescription(int) -> a
    547:548:boolean isNavigationVisible() -> b
    525:533:android.graphics.drawable.Drawable getThemeUpIndicator() -> c
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> a.c.b.b$e:
    java.lang.CharSequence mDefaultContentDescription -> c
    androidx.appcompat.widget.Toolbar mToolbar -> a
    android.graphics.drawable.Drawable mDefaultUpIndicator -> b
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    605:610:void setActionBarDescription(int) -> a
    619:619:android.content.Context getActionBarThemedContext() -> a
    624:624:boolean isNavigationVisible() -> b
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> c
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> a.c.b.c:
    int[] THEME_ATTRS -> b
    java.lang.String TAG -> a
    45:45:void <clinit>() -> <clinit>
    138:139:void <init>() -> <init>
    51:65:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    70:86:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> a
    90:93:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> a.c.b.c$a:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
    101:135:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    android.content.Context mContext -> a
    int mListItemLayout -> O
    int mViewSpacingRight -> l
    android.widget.Button mButtonNeutral -> w
    int mMultiChoiceItemLayout -> M
    boolean mShowTitle -> P
    int mViewSpacingLeft -> j
    int mButtonPanelSideLayout -> K
    android.os.Handler mHandler -> R
    int mCheckedItem -> I
    int mButtonIconDimen -> d
    java.lang.CharSequence mMessage -> f
    android.widget.Button mButtonPositive -> o
    android.widget.ImageView mIconView -> D
    android.widget.ListAdapter mAdapter -> H
    android.widget.Button mButtonNegative -> s
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.TextView mTitleView -> E
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    android.view.View$OnClickListener mButtonHandler -> S
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.graphics.drawable.Drawable mIcon -> C
    int mSingleChoiceItemLayout -> N
    boolean mViewSpacingSpecified -> n
    int mListLayout -> L
    int mViewSpacingBottom -> m
    android.os.Message mButtonPositiveMessage -> q
    androidx.core.widget.NestedScrollView mScrollView -> A
    int mAlertDialogLayout -> J
    int mViewSpacingTop -> k
    int mViewLayoutResId -> i
    java.lang.CharSequence mTitle -> e
    android.os.Message mButtonNeutralMessage -> y
    int mIconId -> B
    android.os.Message mButtonNegativeMessage -> u
    android.view.Window mWindow -> c
    android.view.View mView -> h
    android.widget.ListView mListView -> g
    java.lang.CharSequence mButtonPositiveText -> p
    java.lang.CharSequence mButtonNegativeText -> t
    androidx.appcompat.app.AppCompatDialog mDialog -> b
    android.widget.TextView mMessageView -> F
    java.lang.CharSequence mButtonNeutralText -> x
    android.view.View mCustomTitleView -> G
    int mButtonPanelLayoutHint -> Q
    182:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> a
    257:258:void setCustomTitle(android.view.View) -> a
    261:265:void setMessage(java.lang.CharSequence) -> a
    290:297:void setView(android.view.View,int,int,int,int) -> a
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> a
    378:389:void setIcon(android.graphics.drawable.Drawable) -> a
    404:404:android.widget.ListView getListView() -> a
    408:414:android.widget.Button getButton(int) -> a
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> a
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> a
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> a
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> a
    759:826:void setupButtons(android.view.ViewGroup) -> a
    829:833:void centerButton(android.widget.Button) -> a
    231:234:void installContent() -> b
    247:251:void setTitle(java.lang.CharSequence) -> b
    280:283:void setView(android.view.View) -> b
    398:400:int getIconAttributeResId(int) -> b
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> b
    719:745:void setupContent(android.view.ViewGroup) -> b
    209:227:boolean canTextInput(android.view.View) -> c
    237:243:int selectContentView() -> c
    303:304:void setButtonPanelLayoutHint(int) -> c
    640:670:void setupCustomContent(android.view.ViewGroup) -> c
    359:370:void setIcon(int) -> d
    467:555:void setupView() -> d
    673:716:void setupTitle(android.view.ViewGroup) -> d
    271:274:void setView(int) -> e
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$a:
    androidx.appcompat.app.AlertController this$0 -> b
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$b:
    androidx.appcompat.app.AlertController this$0 -> c
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> a
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$c:
    android.view.View val$bottom -> c
    android.view.View val$top -> b
    androidx.appcompat.app.AlertController this$0 -> d
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$d:
    androidx.appcompat.app.AlertController this$0 -> c
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$e:
    android.view.View val$bottom -> c
    android.view.View val$top -> b
    androidx.appcompat.app.AlertController this$0 -> d
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$f:
    android.content.Context mContext -> a
    boolean mForceInverseBackground -> N
    android.view.View mView -> z
    android.view.LayoutInflater mInflater -> b
    java.lang.String mIsCheckedColumn -> M
    int mCheckedItem -> I
    android.content.DialogInterface$OnClickListener mOnClickListener -> x
    java.lang.CharSequence mTitle -> f
    android.database.Cursor mCursor -> K
    java.lang.CharSequence mMessage -> h
    int mViewSpacingRight -> C
    int mViewSpacingLeft -> A
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> O
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> q
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> u
    java.lang.CharSequence mNeutralButtonText -> o
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> J
    int mViewLayoutResId -> y
    boolean mViewSpacingSpecified -> E
    boolean mIsMultiChoice -> G
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> k
    android.widget.ListAdapter mAdapter -> w
    android.graphics.drawable.Drawable mNeutralButtonIcon -> p
    android.view.View mCustomTitleView -> g
    android.graphics.drawable.Drawable mIcon -> d
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> t
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> s
    java.lang.CharSequence[] mItems -> v
    android.graphics.drawable.Drawable mPositiveButtonIcon -> j
    java.lang.String mLabelColumn -> L
    int mViewSpacingBottom -> D
    androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener -> P
    int mIconAttrId -> e
    int mViewSpacingTop -> B
    boolean mRecycleOnMeasure -> Q
    int mIconId -> c
    java.lang.CharSequence mPositiveButtonText -> i
    boolean mCancelable -> r
    java.lang.CharSequence mNegativeButtonText -> l
    boolean[] mCheckedItems -> F
    android.graphics.drawable.Drawable mNegativeButtonIcon -> m
    boolean mIsSingleChoice -> H
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> n
    924:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> a
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> b
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$f$a:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> b
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$f$b:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> f
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> d
    int mLabelIndex -> b
    int mIsCheckedIndex -> c
    androidx.appcompat.app.AlertController val$dialog -> e
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$f$c:
    androidx.appcompat.app.AlertController val$dialog -> b
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$f$d:
    androidx.appcompat.app.AlertController val$dialog -> c
    androidx.appcompat.app.AlertController$AlertParams this$0 -> d
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> b
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener -> androidx.appcompat.app.AlertController$f$e:
    void onPrepareListView(android.widget.ListView) -> a
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$g:
    java.lang.ref.WeakReference mDialog -> a
    int MSG_DISMISS_DIALOG -> b
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$h:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    int mPaddingTopNoTitle -> b
    int mPaddingBottomNoButtons -> c
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> a
androidx.appcompat.app.AlertDialog -> a.c.b.d:
    androidx.appcompat.app.AlertController mAlert -> b
    int LAYOUT_HINT_SIDE -> d
    int LAYOUT_HINT_NONE -> c
    88:89:void <init>(android.content.Context) -> <init>
    98:100:void <init>(android.content.Context,int) -> <init>
    104:107:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    111:116:int resolveDialogTheme(android.content.Context,int) -> a
    131:131:android.widget.Button getButton(int) -> a
    140:140:android.widget.ListView getListView() -> a
    155:156:void setCustomTitle(android.view.View) -> a
    164:165:void setMessage(java.lang.CharSequence) -> a
    187:188:void setView(android.view.View,int,int,int,int) -> a
    211:212:void setButton(int,java.lang.CharSequence,android.os.Message) -> a
    226:227:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    244:245:void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener) -> a
    262:263:void setIcon(android.graphics.drawable.Drawable) -> a
    172:173:void setView(android.view.View) -> b
    196:197:void setButtonPanelLayoutHint(int) -> b
    253:254:void setIcon(int) -> c
    271:274:void setIconAttribute(int) -> d
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> a.c.b.d$a:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    678:681:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    430:431:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    957:958:androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    631:633:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    643:645:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    704:708:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    758:763:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    533:534:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    545:547:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    569:570:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    600:601:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    868:869:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    497:498:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    966:967:androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    783:787:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    808:813:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:884:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    935:942:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    1008:1010:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    androidx.appcompat.app.AppCompatDelegate mDelegate -> y
    android.content.res.Resources mResources -> z
    77:78:void <init>() -> <init>
    92:93:void <init>(int) -> <init>
    150:151:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> a
    316:316:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    338:338:void setSupportProgressBarIndeterminate(boolean) -> a
    371:372:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> a
    487:488:void supportNavigateUpTo(android.content.Intent) -> a
    575:587:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> a
    176:177:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:99:void attachBaseContext(android.content.Context) -> attachBaseContext
    331:331:void setSupportProgressBarIndeterminateVisibility(boolean) -> b
    390:390:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> b
    454:454:android.content.Intent getSupportParentActivityIntent() -> b
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> b
    324:324:void setSupportProgressBarVisibility(boolean) -> c
    506:506:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> c
    623:623:void onNightModeChanged(int) -> c
    609:614:void closeOptionsMenu() -> closeOptionsMenu
    345:345:void setSupportProgress(int) -> d
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    258:258:boolean supportRequestWindowFeature(int) -> e
    214:214:android.view.View findViewById(int) -> findViewById
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    268:269:void invalidateOptionsMenu() -> invalidateOptionsMenu
    263:264:void supportInvalidateOptionsMenu() -> j
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> m
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> n
    501:501:void onSupportContentChanged() -> o
    181:191:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:494:void onContentChanged() -> onContentChanged
    103:107:void onCreate(android.os.Bundle) -> onCreate
    233:235:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:228:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    528:529:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:119:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:197:void onPostResume() -> onPostResume
    533:535:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:203:void onStart() -> onStart
    207:209:void onStop() -> onStop
    291:291:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    280:280:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    239:241:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    305:305:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    600:605:void openOptionsMenu() -> openOptionsMenu
    416:439:boolean onSupportNavigateUp() -> p
    161:162:void setContentView(int) -> setContentView
    166:167:void setContentView(android.view.View) -> setContentView
    171:172:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    111:113:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatCallback -> a.c.b.e:
androidx.appcompat.app.AppCompatDelegate -> a.c.b.f:
    int FEATURE_SUPPORT_ACTION_BAR_OVERLAY -> n
    int FEATURE_ACTION_MODE_OVERLAY -> o
    int FEATURE_SUPPORT_ACTION_BAR -> m
    int sDefaultNightMode -> j
    int MODE_NIGHT_AUTO_BATTERY -> h
    int MODE_NIGHT_UNSPECIFIED -> i
    int MODE_NIGHT_NO -> f
    int MODE_NIGHT_YES -> g
    int MODE_NIGHT_AUTO_TIME -> d
    int MODE_NIGHT_AUTO -> e
    int MODE_NIGHT_FOLLOW_SYSTEM -> c
    java.lang.Object sActiveDelegatesLock -> l
    androidx.collection.ArraySet sActiveDelegates -> k
    java.lang.String TAG -> b
    163:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    boolean applyDayNight() -> a
    android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.view.View findViewById(int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onCreate(android.os.Bundle) -> a
    void setContentView(android.view.View) -> a
    void setHandleNativeActionModesEnabled(boolean) -> a
    void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> a
    void setTitle(java.lang.CharSequence) -> a
    androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> a
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> a
    244:244:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> a
    256:256:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> a
    377:377:void attachBaseContext(android.content.Context) -> a
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> a
    androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> b
    boolean hasWindowFeature(int) -> b
    void onPostCreate(android.os.Bundle) -> b
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    608:609:void setCompatVectorFromResourcesEnabled(boolean) -> b
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> b
    void onSaveInstanceState(android.os.Bundle) -> c
    boolean requestWindowFeature(int) -> c
    526:526:int getLocalNightMode() -> c
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> c
    android.view.MenuInflater getMenuInflater() -> d
    void setContentView(int) -> d
    androidx.appcompat.app.ActionBar getSupportActionBar() -> e
    void setLocalNightMode(int) -> e
    void installViewFactory() -> f
    339:339:void setTheme(int) -> f
    void invalidateOptionsMenu() -> g
    547:562:void setDefaultNightMode(int) -> g
    boolean isHandleNativeActionModesEnabled() -> h
    void onDestroy() -> i
    void onPostResume() -> j
    void onStart() -> k
    void onStop() -> l
    653:660:void applyDayNightToActiveDelegates() -> m
    571:571:int getDefaultNightMode() -> n
    618:618:boolean isCompatVectorFromResourcesEnabled() -> o
androidx.appcompat.app.AppCompatDelegate$NightMode -> a.c.b.f$a:
androidx.appcompat.app.AppCompatDelegateImpl -> a.c.b.g:
    boolean mInvalidatePanelMenuPosted -> f0
    boolean mIsFloating -> P
    androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> z
    boolean mActivityHandlesUiMode -> b0
    boolean mFeatureIndeterminateProgress -> L
    android.graphics.Rect mTempRect2 -> k0
    boolean mStarted -> X
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim -> E
    android.view.Window mWindow -> r
    android.content.Context mContext -> q
    android.view.View mStatusGuard -> J
    java.util.Map sLocalNightModes -> m0
    boolean mSubDecorInstalled -> G
    android.widget.TextView mTitleView -> I
    android.view.MenuInflater mMenuInflater -> v
    boolean mHasActionBar -> M
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager -> d0
    boolean mLongPressBackDown -> U
    int[] sWindowBackgroundStyleable -> p0
    boolean mWindowNoTitle -> Q
    androidx.appcompat.widget.ActionBarContextView mActionModeView -> B
    boolean mIsDestroyed -> Y
    androidx.appcompat.widget.DecorContentParent mDecorContentParent -> x
    boolean sAlwaysOverrideConfiguration -> r0
    androidx.appcompat.app.ActionBar mActionBar -> u
    androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> y
    boolean DEBUG -> n0
    boolean mOverlayActionBar -> N
    boolean mActivityHandlesUiModeChecked -> c0
    android.graphics.Rect mTempRect1 -> j0
    boolean mBaseContextAttached -> V
    java.lang.Object mHost -> p
    androidx.appcompat.view.ActionMode mActionMode -> A
    boolean mClosingActionMenu -> R
    java.lang.Runnable mShowActionModePopup -> D
    int mLocalNightMode -> Z
    java.lang.Runnable mInvalidatePanelMenuRunnable -> h0
    android.widget.PopupWindow mActionModePopup -> C
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> S
    java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX -> s0
    java.lang.CharSequence mTitle -> w
    androidx.appcompat.app.AppCompatCallback mAppCompatCallback -> t
    boolean mOverlayActionMode -> O
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager -> e0
    int mThemeResId -> a0
    int mInvalidatePanelMenuFeatures -> g0
    boolean mFeatureProgress -> K
    androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback -> s
    boolean mCreated -> W
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> T
    boolean sInstalledExceptionHandler -> q0
    android.view.ViewGroup mSubDecor -> H
    androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater -> l0
    boolean mHandleNativeActionModes -> F
    boolean IS_PRE_LOLLIPOP -> o0
    boolean mEnableDefaultActionBarUp -> i0
    130:185:void <clinit>() -> <clinit>
    278:279:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    282:283:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    286:287:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    290:291:void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    294:329:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    2232:2232:int calculateNightMode() -> A
    606:612:void cleanupAutoManagers() -> B
    692:696:android.view.ViewGroup createSubDecor() -> C
    658:689:void ensureSubDecor() -> D
    622:626:void ensureWindow() -> E
    2398:2401:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> F
    396:399:void initWindowDecorActionBar() -> G
    2405:2427:boolean isActivityManifestHandlingUiMode() -> H
    2108:2109:void throwFeatureRequestIfSubDecorInstalled() -> I
    1470:1481:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> J
    334:336:void attachBaseContext(android.content.Context) -> a
    342:371:void onCreate(android.os.Bundle) -> a
    414:421:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> a
    479:480:android.view.View findViewById(int) -> a
    487:502:void onConfigurationChanged(android.content.res.Configuration) -> a
    543:548:void setContentView(android.view.View) -> a
    570:574:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    631:632:void attachToWindow(android.view.Window) -> a
    870:870:void onSubDecorInstalled(android.view.ViewGroup) -> a
    979:988:void setTitle(java.lang.CharSequence) -> a
    1043:1044:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    1237:1238:void setHandleNativeActionModesEnabled(boolean) -> a
    1307:1325:boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    1356:1369:boolean onKeyDown(int,android.view.KeyEvent) -> a
    1375:1407:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    1415:1433:boolean shouldInheritContext(android.view.ViewParent) -> a
    1486:1487:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> a
    1588:1629:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    1675:1692:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> a
    1800:1811:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    1818:1847:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> a
    1915:1939:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> a
    1942:1950:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> a
    1955:1967:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> a
    1972:1992:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> a
    2159:2159:boolean applyDayNight() -> a
    376:377:void onPostCreate(android.os.Bundle) -> b
    561:566:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    953:974:boolean hasWindowFeature(int) -> b
    1078:1226:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> b
    1270:1301:boolean onKeyShortcut(int,android.view.KeyEvent) -> b
    1581:1584:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> b
    1696:1796:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> b
    2245:2334:boolean updateForNightMode(int,boolean) -> b
    3061:3061:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> b
    578:582:void onSaveInstanceState(android.os.Bundle) -> c
    911:945:boolean requestWindowFeature(int) -> c
    1329:1352:boolean onKeyUp(int,android.view.KeyEvent) -> c
    1632:1671:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> c
    2163:2185:boolean applyDayNight(boolean) -> c
    2198:2198:int getLocalNightMode() -> c
    2341:2382:void updateResourcesConfigurationForNightMode(int,boolean) -> c
    467:472:android.view.MenuInflater getMenuInflater() -> d
    552:557:void setContentView(int) -> d
    1850:1857:boolean onKeyDownPanel(int,android.view.KeyEvent) -> d
    383:384:androidx.appcompat.app.ActionBar getSupportActionBar() -> e
    1861:1910:boolean onKeyUpPanel(int,android.view.KeyEvent) -> e
    2190:2194:void setLocalNightMode(int) -> e
    616:617:void setTheme(int) -> f
    1441:1450:void installViewFactory() -> f
    1071:1075:void invalidateOptionsMenu() -> g
    1242:1242:boolean isHandleNativeActionModesEnabled() -> h
    1814:1815:void closePanel(int) -> h
    587:602:void onDestroy() -> i
    2005:2029:void doInvalidatePanelMenu(int) -> i
    535:539:void onPostResume() -> j
    2203:2223:int mapNightMode(int) -> j
    506:513:void onStart() -> k
    1016:1022:void onMenuOpened(int) -> k
    517:531:void onStop() -> l
    1000:1013:void onPanelClosed(int) -> l
    2038:2104:int updateStatusGuard(int) -> m
    1996:2002:void invalidatePanelMenu(int) -> n
    2115:2125:int sanitizeWindowFeatureId(int) -> o
    1457:1457:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1465:1465:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1026:1033:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1038:1039:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    2133:2155:void dismissPopups() -> p
    1246:1249:void endOnGoingFadeAnimation() -> q
    450:461:android.content.Context getActionBarThemedContext() -> r
    2390:2394:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> s
    2129:2129:android.view.ViewGroup getSubDecor() -> t
    992:996:java.lang.CharSequence getTitle() -> u
    392:392:android.view.Window$Callback getWindowCallback() -> v
    1253:1265:boolean onBackPressed() -> w
    388:388:androidx.appcompat.app.ActionBar peekSupportActionBar() -> x
    1232:1232:boolean shouldAnimateActionModeView() -> y
    873:907:void applyFixedSizeWindow() -> z
androidx.appcompat.app.AppCompatDelegateImpl$1 -> a.c.b.g$a:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> a
    158:158:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    174:179:boolean shouldWrapException(java.lang.Throwable) -> a
    161:171:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> a.c.b.g$b:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    256:256:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    259:267:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> a.c.b.g$c:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    780:780:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    784:796:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> a.c.b.g$d:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    802:802:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    805:806:void onFitSystemWindows(android.graphics.Rect) -> a
androidx.appcompat.app.AppCompatDelegateImpl$5 -> a.c.b.g$e:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    857:857:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    859:859:void onAttachedFromWindow() -> a
    863:864:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> a.c.b.g$f:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    1133:1133:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1136:1161:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> a.c.b.g$f$a:
    androidx.appcompat.app.AppCompatDelegateImpl$6 this$1 -> a
    1144:1144:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1152:1155:void onAnimationEnd(android.view.View) -> a
    1147:1148:void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$7 -> a.c.b.g$g:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1187:1187:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1200:1203:void onAnimationEnd(android.view.View) -> a
    1190:1196:void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> a.c.b.g$h:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    3065:3066:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3079:3079:android.content.Context getActionBarThemedContext() -> a
    3090:3095:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    3099:3103:void setActionBarDescription(int) -> a
    3084:3085:boolean isNavigationVisible() -> b
    3070:3074:android.graphics.drawable.Drawable getThemeUpIndicator() -> c
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> a.c.b.g$i:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    2521:2522:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2526:2530:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    2535:2536:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> a.c.b.g$j:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    androidx.appcompat.view.ActionMode$Callback mWrapped -> a
    2436:2438:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2447:2447:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    2452:2452:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    2457:2484:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    2442:2442:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> a.c.b.g$j$a:
    androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
    2465:2465:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2468:2477:void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> a.c.b.g$k:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> c
    2807:2809:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2901:2912:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
    2813:2813:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2819:2819:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2837:2837:void onContentChanged() -> onContentChanged
    2825:2830:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2868:2870:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2875:2877:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2841:2863:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2934:2943:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2882:2891:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2919:2927:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> a.c.b.g$l:
    android.os.PowerManager mPowerManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    3030:3032:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3050:3055:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    3037:3040:int getApplyableNightMode() -> c
    3045:3046:void onChange() -> e
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> a.c.b.g$m:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    android.content.BroadcastReceiver mReceiver -> a
    2951:2951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2983:2992:void cleanup() -> a
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    2995:2995:boolean isListening() -> d
    void onChange() -> e
    2960:2965:void setup() -> f
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> a.c.b.g$m$a:
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
    2969:2969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2972:2973:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> a.c.b.g$n:
    androidx.appcompat.app.TwilightManager mTwilightManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    3002:3004:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3019:3023:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    3009:3009:int getApplyableNightMode() -> c
    3014:3015:void onChange() -> e
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> a.c.b.g$o:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> j
    2771:2773:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2801:2801:boolean isOutOfBounds(int,int) -> a
    2777:2777:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2783:2792:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2797:2798:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> a.c.b.g$p:
    boolean isPrepared -> m
    boolean isHandled -> n
    androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter -> k
    boolean isOpen -> o
    boolean qwertyMode -> p
    int windowAnimations -> f
    int x -> d
    int y -> e
    int background -> b
    boolean refreshDecorView -> q
    int gravity -> c
    boolean refreshMenuContent -> r
    boolean wasLastOpen -> s
    int featureId -> a
    android.view.View createdPanelView -> i
    android.view.View shownPanelView -> h
    android.content.Context listPresenterContext -> l
    android.os.Bundle frozenActionViewState -> u
    android.view.ViewGroup decorView -> g
    android.os.Bundle frozenMenuState -> t
    androidx.appcompat.view.menu.MenuBuilder menu -> j
    2604:2608:void <init>(int) -> <init>
    2628:2657:void setStyle(android.content.Context) -> a
    2660:2669:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    2672:2683:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    2700:2707:void onRestoreInstanceState(android.os.Parcelable) -> a
    2710:2714:void applyFrozenState() -> a
    2621:2625:void clearMenuPresenters() -> b
    2611:2614:boolean hasPanelItems() -> c
    2687:2696:android.os.Parcelable onSaveInstanceState() -> d
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> a.c.b.g$p$a:
    android.os.Bundle menuState -> d
    int featureId -> b
    boolean isOpen -> c
    2751:2751:void <clinit>() -> <clinit>
    2721:2722:void <init>() -> <init>
    2740:2748:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    2726:2726:int describeContents() -> describeContents
    2731:2737:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> a.c.b.g$p$a$a:
    2751:2751:void <init>() -> <init>
    2751:2751:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2751:2751:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2754:2754:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2759:2759:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2751:2751:java.lang.Object[] newArray(int) -> newArray
    2764:2764:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> a.c.b.g$q:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    2488:2489:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2510:2516:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    2493:2506:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
androidx.appcompat.app.AppCompatDialog -> a.c.b.h:
    53:54:void <init>(android.content.Context) -> <init>
    57:68:void <init>(android.content.Context,int) -> <init>
    72:73:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    90:90:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    176:182:int getThemeResId(android.content.Context,int) -> getThemeResId
    162:163:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    191:191:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    187:187:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    196:196:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    153:153:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> a.c.b.h$a:
    androidx.appcompat.app.AppCompatDialog this$0 -> b
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
androidx.appcompat.app.AppCompatDialogFragment -> a.c.b.i:
    38:38:void <init>() -> <init>
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:67:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    301:308:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    83:177:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    261:261:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    321:339:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    265:287:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    348:371:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    253:254:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$a:
    java.lang.reflect.Method mResolvedMethod -> d
    android.view.View mHostView -> b
    java.lang.String mMethodName -> c
    android.content.Context mResolvedContext -> e
    385:388:void <init>(android.view.View,java.lang.String) -> <init>
    409:436:void resolveMethod(android.content.Context,java.lang.String) -> a
    392:399:void onClick(android.view.View) -> onClick
androidx.appcompat.app.NavItemSelectedListener -> a.c.b.j:
    androidx.appcompat.app.ActionBar$OnNavigationListener mListener -> b
    30:32:void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener) -> <init>
    36:39:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    44:44:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.app.ResourcesFlusher -> a.c.b.k:
    java.lang.reflect.Field sResourcesImplField -> h
    boolean sResourcesImplFieldFetched -> i
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> f
    boolean sThemedResourceCacheClazzFetched -> e
    java.lang.String TAG -> a
    java.lang.reflect.Field sDrawableCacheField -> b
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> g
    boolean sDrawableCacheFieldFetched -> c
    java.lang.Class sThemedResourceCacheClazz -> d
    209:210:void <init>() -> <init>
    46:56:void flush(android.content.res.Resources) -> a
    166:207:void flushThemedResourcesCache(java.lang.Object) -> a
    60:80:void flushLollipops(android.content.res.Resources) -> b
    84:109:void flushMarshmallows(android.content.res.Resources) -> c
    113:162:void flushNougats(android.content.res.Resources) -> d
androidx.appcompat.app.ToolbarActionBar -> a.c.b.l:
    boolean mLastMenuVisibility -> m
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> p
    java.util.ArrayList mMenuVisibilityListeners -> n
    android.view.Window$Callback mWindowCallback -> k
    boolean mToolbarMenuPrepared -> j
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> i
    boolean mMenuCallbackSet -> l
    java.lang.Runnable mMenuInvalidator -> o
    68:74:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    423:423:boolean openOptionsMenu() -> A
    370:370:void removeAllTabs() -> B
    233:238:boolean requestFocus() -> C
    406:407:void show() -> D
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> E
    448:463:void populateOptionsMenu() -> F
    543:548:android.view.Menu getMenu() -> G
    82:83:void setCustomView(android.view.View) -> a
    87:91:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> a
    136:137:void setElevation(float) -> a
    166:167:void setHomeActionContentDescription(java.lang.CharSequence) -> a
    186:187:void onConfigurationChanged(android.content.res.Configuration) -> a
    191:192:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> a
    259:261:void setDisplayOptions(int,int) -> a
    290:291:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    334:334:void addTab(androidx.appcompat.app.ActionBar$Tab) -> a
    340:340:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    346:346:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> a
    352:352:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> a
    468:471:boolean onMenuKeyEvent(android.view.KeyEvent) -> a
    476:483:boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    494:495:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> a
    156:157:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> b
    243:244:void setSubtitle(java.lang.CharSequence) -> b
    358:358:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> b
    388:388:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> b
    499:500:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> b
    504:513:void dispatchMenuVisibilityChanged(boolean) -> b
    106:107:void setIcon(android.graphics.drawable.Drawable) -> c
    172:172:void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    218:219:void setTitle(java.lang.CharSequence) -> c
    364:364:void removeTabAt(int) -> c
    376:376:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> c
    95:97:void setCustomView(int) -> d
    116:117:void setLogo(android.graphics.drawable.Drawable) -> d
    228:229:void setWindowTitle(java.lang.CharSequence) -> d
    275:276:void setDisplayHomeAsUpEnabled(boolean) -> d
    127:127:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> e
    254:255:void setDisplayOptions(int) -> e
    285:286:void setDisplayShowCustomEnabled(boolean) -> e
    428:428:boolean closeOptionsMenu() -> e
    122:122:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> f
    270:271:void setDisplayShowHomeEnabled(boolean) -> f
    440:444:boolean collapseActionView() -> f
    176:177:void setHomeActionContentDescription(int) -> g
    280:281:void setDisplayShowTitleEnabled(boolean) -> g
    295:295:android.view.View getCustomView() -> g
    161:162:void setHomeAsUpIndicator(int) -> h
    265:266:void setDisplayUseLogoEnabled(boolean) -> h
    323:323:int getDisplayOptions() -> h
    101:102:void setIcon(int) -> i
    141:141:float getElevation() -> i
    111:112:void setLogo(int) -> j
    132:132:void setHomeButtonEnabled(boolean) -> j
    399:399:int getHeight() -> j
    182:182:void setShowHideAnimationEnabled(boolean) -> k
    315:316:void setNavigationMode(int) -> k
    196:201:void setSelectedNavigationItem(int) -> l
    213:213:int getNavigationItemCount() -> l
    248:249:void setSubtitle(int) -> m
    310:310:int getNavigationMode() -> m
    208:208:int getSelectedNavigationIndex() -> n
    223:224:void setTitle(int) -> n
    382:382:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> o
    305:305:java.lang.CharSequence getSubtitle() -> p
    394:394:int getTabCount() -> q
    146:146:android.content.Context getThemedContext() -> r
    300:300:java.lang.CharSequence getTitle() -> s
    413:414:void hide() -> t
    433:435:boolean invalidateOptionsMenu() -> u
    418:418:boolean isShowing() -> w
    151:151:boolean isTitleTruncated() -> x
    328:328:androidx.appcompat.app.ActionBar$Tab newTab() -> y
    489:490:void onDestroy() -> z
androidx.appcompat.app.ToolbarActionBar$1 -> a.c.b.l$a:
    androidx.appcompat.app.ToolbarActionBar this$0 -> b
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:57:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> a.c.b.l$b:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> a.c.b.l$c:
    androidx.appcompat.app.ToolbarActionBar this$0 -> c
    boolean mClosingActionMenu -> b
    554:555:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    559:563:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    568:578:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> a.c.b.l$d:
    androidx.appcompat.app.ToolbarActionBar this$0 -> b
    583:584:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    588:588:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    593:601:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> a.c.b.l$e:
    androidx.appcompat.app.ToolbarActionBar this$0 -> c
    516:518:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    532:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:527:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> a.c.b.m:
    float C3 -> l
    float C2 -> k
    float C1 -> j
    float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT -> i
    float J0 -> h
    float DEGREES_TO_RADIANS -> g
    int NIGHT -> f
    long sunrise -> b
    long sunset -> a
    androidx.appcompat.app.TwilightCalculator sInstance -> d
    int DAY -> e
    int state -> c
    long UTC_2000 -> n
    float OBLIQUITY -> m
    26:26:void <init>() -> <init>
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> a
    89:138:void calculateTwilight(long,double,double) -> a
androidx.appcompat.app.TwilightManager -> a.c.b.n:
    android.content.Context mContext -> a
    androidx.appcompat.app.TwilightManager sInstance -> g
    androidx.appcompat.app.TwilightManager$TwilightState mTwilightState -> c
    int SUNSET -> f
    int SUNRISE -> e
    java.lang.String TAG -> d
    android.location.LocationManager mLocationManager -> b
    69:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> a
    60:61:void setInstance(androidx.appcompat.app.TwilightManager) -> a
    80:102:boolean isNight() -> a
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> a
    148:192:void updateState(android.location.Location) -> a
    107:127:android.location.Location getLastKnownLocation() -> b
    144:144:boolean isStateValid() -> c
androidx.appcompat.app.TwilightManager$TwilightState -> a.c.b.n$a:
    long nextUpdate -> f
    long tomorrowSunrise -> e
    long yesterdaySunset -> b
    long todaySunset -> d
    long todaySunrise -> c
    boolean isNight -> a
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> a.c.b.o:
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> I
    boolean mShowHideAnimationEnabled -> J
    java.lang.String TAG -> O
    android.content.Context mContext -> i
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode -> w
    int mCurWindowVisibility -> C
    android.view.animation.Interpolator sShowInterpolator -> Q
    boolean mHiddenByApp -> E
    long FADE_IN_DURATION_MS -> T
    boolean mShowingForMode -> G
    int mSavedTabPosition -> u
    int INVALID_POSITION -> R
    java.util.ArrayList mTabs -> s
    androidx.appcompat.widget.ActionBarContextView mContextView -> p
    androidx.core.view.ViewPropertyAnimatorListener mHideListener -> L
    androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> N
    androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab -> t
    boolean mHideOnContentScroll -> K
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode -> x
    boolean $assertionsDisabled -> U
    android.view.View mContentView -> q
    boolean mDisplayHomeAsUpSet -> v
    android.content.Context mThemedContext -> j
    java.util.ArrayList mMenuVisibilityListeners -> A
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> o
    androidx.core.view.ViewPropertyAnimatorListener mShowListener -> M
    android.view.animation.Interpolator sHideInterpolator -> P
    boolean mLastMenuVisibility -> z
    android.app.Activity mActivity -> k
    android.app.Dialog mDialog -> l
    androidx.appcompat.widget.ActionBarContainer mContainerView -> n
    boolean mHiddenBySystem -> F
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout -> m
    long FADE_OUT_DURATION_MS -> S
    boolean mNowShowing -> H
    androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView -> r
    boolean mHasEmbeddedTabs -> B
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback -> y
    boolean mContentAnimations -> D
    79:85:void <clinit>() -> <clinit>
    169:177:void <init>(android.app.Activity,boolean) -> <init>
    179:182:void <init>(android.app.Dialog) -> <init>
    189:192:void <init>(android.view.View) -> <init>
    425:426:void removeAllTabs() -> B
    451:456:boolean requestFocus() -> C
    679:683:void show() -> D
    312:317:void completeDeferredDestroyActionMode() -> E
    1376:1376:boolean hasIcon() -> F
    1390:1390:boolean hasLogo() -> G
    429:437:void cleanupTabs() -> H
    288:309:void ensureTabsExist() -> I
    712:719:void hideForActionMode() -> J
    916:916:boolean shouldAnimateContextView() -> K
    686:693:void showForActionMode() -> L
    249:250:void setElevation(float) -> a
    259:260:void onConfigurationChanged(android.content.res.Configuration) -> a
    321:322:void onWindowVisibilityChanged(int) -> a
    341:342:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> a
    474:479:void setDisplayOptions(int,int) -> a
    483:484:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    523:540:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    562:563:void addTab(androidx.appcompat.app.ActionBar$Tab) -> a
    567:568:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> a
    572:578:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    582:588:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> a
    674:675:void enableContentAnimations(boolean) -> a
    697:701:void showForSystem() -> a
    760:763:boolean checkShowingFlags(boolean,boolean,boolean) -> a
    953:954:void setHomeActionContentDescription(java.lang.CharSequence) -> a
    1286:1287:void setCustomView(android.view.View) -> a
    1291:1293:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> a
    1297:1298:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> a
    1402:1412:boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> b
    346:347:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> b
    351:360:void dispatchMenuVisibilityChanged(boolean) -> b
    461:462:void setSubtitle(java.lang.CharSequence) -> b
    544:548:void configureTab(androidx.appcompat.app.ActionBar$Tab,int) -> b
    597:598:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> b
    943:944:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> b
    963:967:void onContentScrollStarted() -> b
    1361:1361:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> b
    195:206:void init(android.view.View) -> c
    441:442:void setTitle(java.lang.CharSequence) -> c
    602:623:void removeTabAt(int) -> c
    627:660:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> c
    723:727:void hideForSystem() -> c
    1372:1373:void setIcon(android.graphics.drawable.Drawable) -> c
    1395:1398:void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    364:366:void setCustomView(int) -> d
    380:381:void setDisplayHomeAsUpEnabled(boolean) -> d
    446:447:void setWindowTitle(java.lang.CharSequence) -> d
    971:971:void onContentScrollStopped() -> d
    1386:1387:void setLogo(android.graphics.drawable.Drawable) -> d
    390:391:void setDisplayShowCustomEnabled(boolean) -> e
    466:470:void setDisplayOptions(int) -> e
    494:494:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> e
    375:376:void setDisplayShowHomeEnabled(boolean) -> f
    488:489:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> f
    751:756:void setHideOffset(int) -> f
    975:979:boolean collapseActionView() -> f
    385:386:void setDisplayShowTitleEnabled(boolean) -> g
    498:498:android.view.View getCustomView() -> g
    958:959:void setHomeActionContentDescription(int) -> g
    370:371:void setDisplayUseLogoEnabled(boolean) -> h
    518:518:int getDisplayOptions() -> h
    948:949:void setHomeAsUpIndicator(int) -> h
    254:254:float getElevation() -> i
    731:737:void setHideOnContentScrollEnabled(boolean) -> i
    1367:1368:void setIcon(int) -> i
    395:396:void setHomeButtonEnabled(boolean) -> j
    669:669:int getHeight() -> j
    1381:1382:void setLogo(int) -> j
    333:337:void setShowHideAnimationEnabled(boolean) -> k
    746:746:int getHideOffset() -> k
    1331:1357:void setNavigationMode(int) -> k
    410:421:void setSelectedNavigationItem(int) -> l
    875:911:void animateToMode(boolean) -> l
    1314:1318:int getNavigationItemCount() -> l
    405:406:void setSubtitle(int) -> m
    513:513:int getNavigationMode() -> m
    837:865:void doHide(boolean) -> m
    400:401:void setTitle(int) -> n
    788:834:void doShow(boolean) -> n
    1302:1306:int getSelectedNavigationIndex() -> n
    263:285:void setHasEmbeddedTabs(boolean) -> o
    664:664:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> o
    508:508:java.lang.CharSequence getSubtitle() -> p
    771:785:void updateVisibility(boolean) -> p
    1326:1326:int getTabCount() -> q
    921:933:android.content.Context getThemedContext() -> r
    503:503:java.lang.CharSequence getTitle() -> s
    705:709:void hide() -> t
    741:741:boolean isHideOnContentScrollEnabled() -> v
    869:871:boolean isShowing() -> w
    938:938:boolean isTitleTruncated() -> x
    592:592:androidx.appcompat.app.ActionBar$Tab newTab() -> y
androidx.appcompat.app.WindowDecorActionBar$1 -> a.c.b.o$a:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$2 -> a.c.b.o$b:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$3 -> a.c.b.o$c:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> a.c.b.o$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> e
    androidx.appcompat.view.ActionMode$Callback mCallback -> f
    java.lang.ref.WeakReference mCustomView -> g
    androidx.appcompat.app.WindowDecorActionBar this$0 -> h
    android.content.Context mActionModeContext -> d
    993:999:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1013:1040:void finish() -> a
    1070:1072:void setCustomView(android.view.View) -> a
    1076:1077:void setSubtitle(java.lang.CharSequence) -> a
    1091:1092:void setSubtitle(int) -> a
    1106:1108:void setTitleOptionalHint(boolean) -> a
    1130:1130:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    1146:1146:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    1081:1082:void setTitle(java.lang.CharSequence) -> b
    1086:1087:void setTitle(int) -> b
    1117:1117:android.view.View getCustomView() -> b
    1133:1142:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> b
    1008:1008:android.view.Menu getMenu() -> c
    1003:1003:android.view.MenuInflater getMenuInflater() -> d
    1101:1101:java.lang.CharSequence getSubtitle() -> e
    1096:1096:java.lang.CharSequence getTitle() -> g
    1044:1056:void invalidate() -> i
    1112:1112:boolean isTitleOptional() -> j
    1060:1065:boolean dispatchOnCreate() -> l
    1122:1125:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1155:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> a.c.b.o$e:
    android.graphics.drawable.Drawable mIcon -> d
    android.view.View mCustomView -> h
    java.lang.Object mTag -> c
    java.lang.CharSequence mText -> e
    int mPosition -> g
    java.lang.CharSequence mContentDesc -> f
    androidx.appcompat.app.ActionBar$TabListener mCallback -> b
    androidx.appcompat.app.WindowDecorActionBar this$0 -> i
    1162:1168:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    1178:1179:androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> a
    1188:1189:androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> a
    1199:1203:androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> a
    1233:1237:androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> a
    1266:1266:androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> a
    1271:1275:androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> a
    1280:1280:java.lang.CharSequence getContentDescription() -> a
    1194:1194:android.view.View getCustomView() -> b
    1208:1208:androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> b
    1247:1251:androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> b
    1214:1214:android.graphics.drawable.Drawable getIcon() -> c
    1242:1242:androidx.appcompat.app.ActionBar$Tab setIcon(int) -> c
    1219:1219:int getPosition() -> d
    1256:1256:androidx.appcompat.app.ActionBar$Tab setText(int) -> d
    1173:1173:java.lang.Object getTag() -> e
    1223:1224:void setPosition(int) -> e
    1228:1228:java.lang.CharSequence getText() -> f
    1261:1262:void select() -> g
    1183:1183:androidx.appcompat.app.ActionBar$TabListener getCallback() -> h
androidx.appcompat.content.res.AppCompatResources -> a.c.c.a.a:
    java.lang.ThreadLocal TL_TYPED_VALUE -> b
    java.lang.Object sColorStateCacheLock -> d
    java.lang.String LOG_TAG -> a
    java.util.WeakHashMap sColorStateCaches -> c
    50:55:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> a
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> a
    173:178:android.util.TypedValue getTypedValue() -> a
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> b
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> c
    112:124:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> d
    162:167:boolean isColorInt(android.content.Context,int) -> e
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> a.c.c.a.a$a:
    android.content.res.Configuration configuration -> b
    android.content.res.ColorStateList value -> a
    186:189:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> a.c.d.a.a:
    java.lang.String ITEM_MISSING_DRAWABLE_ERROR -> F
    boolean mMutated -> z
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState -> v
    int mTransitionToIndex -> x
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition -> w
    int mTransitionFromIndex -> y
    java.lang.String LOGTAG -> A
    java.lang.String ELEMENT_ITEM -> C
    java.lang.String ELEMENT_TRANSITION -> B
    java.lang.String TRANSITION_MISSING_FROM_TO_ID -> E
    java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR -> D
    92:92:void <clinit>() -> <clinit>
    111:112:void <init>() -> <init>
    116:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void addState(int[],android.graphics.drawable.Drawable) -> a
    138:156:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme) -> a
    201:210:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    234:235:void addState(int[],android.graphics.drawable.Drawable,int) -> a
    251:252:void addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> a
    449:469:void updateStateFromTypedArray(android.content.res.TypedArray) -> a
    619:621:void clearMutated() -> a
    718:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> b
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> b
    171:174:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> b
    89:89:void setEnterFadeDuration(int) -> c
    483:500:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> c
    89:89:boolean canApplyTheme() -> canApplyTheme
    89:89:void setExitFadeDuration(int) -> d
    564:598:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> d
    89:89:void draw(android.graphics.Canvas) -> draw
    510:548:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> e
    472:473:void init() -> f
    293:321:boolean selectTransition(int) -> g
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    259:259:boolean isStateful() -> isStateful
    264:272:void jumpToCurrentState() -> jumpToCurrentState
    605:609:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:288:boolean onStateChange(int[]) -> onStateChange
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:223:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1 -> a.c.d.a.a$a:
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> a.c.d.a.a$b:
    android.graphics.drawable.Animatable mA -> a
    370:372:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:377:void start() -> c
    381:382:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> a.c.d.a.a$c:
    androidx.collection.LongSparseArray mTransitions -> K
    long REVERSIBLE_FLAG_BIT -> N
    long REVERSED_BIT -> M
    androidx.collection.SparseArrayCompat mStateIds -> L
    634:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    652:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> a
    667:669:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> a
    673:677:int indexOfKeyframe(int[]) -> b
    685:686:int indexOfTransition(int,int) -> c
    681:681:int getKeyframeIdAt(int) -> d
    690:691:boolean isTransitionReversed(int,int) -> d
    695:696:boolean transitionHasReversibleFlag(int,int) -> e
    712:712:long generateTransitionKey(int,int) -> f
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    647:649:void mutate() -> q
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> a.c.d.a.a$d:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd -> a
    433:435:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:440:void start() -> c
    444:445:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> a.c.d.a.a$e:
    android.animation.ObjectAnimator mAnim -> a
    boolean mHasReversibleFlag -> b
    392:407:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> a
    421:422:void reverse() -> b
    416:417:void start() -> c
    426:427:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> a.c.d.a.a$f:
    int[] mFrameTimes -> a
    int mFrames -> b
    int mTotalDuration -> c
    732:734:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    737:750:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> a
    754:754:int getTotalDuration() -> a
    759:776:float getInterpolation(float) -> getInterpolation
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> a.c.d.a.a$g:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    363:363:boolean canReverse() -> a
    360:360:void reverse() -> b
    void start() -> c
    void stop() -> d
androidx.appcompat.graphics.drawable.DrawableContainer -> a.c.d.a.b:
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> b
    android.graphics.drawable.Drawable mCurrDrawable -> d
    boolean DEBUG -> o
    android.graphics.drawable.Drawable mLastDrawable -> e
    long mEnterAnimationEnd -> l
    boolean mMutated -> j
    int mCurIndex -> h
    int mLastIndex -> i
    int mAlpha -> f
    java.lang.String TAG -> p
    boolean DEFAULT_DITHER -> q
    android.graphics.Rect mHotspotBounds -> c
    androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback -> n
    boolean mHasAlpha -> g
    java.lang.Runnable mAnimationRunnable -> k
    long mExitAnimationEnd -> m
    53:75:void <init>() -> <init>
    427:482:boolean selectDrawable(int) -> a
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> a
    535:573:void animate(boolean) -> a
    589:590:void updateDensity(android.content.res.Resources) -> a
    636:638:void clearMutated() -> a
    1152:1164:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    1204:1205:int resolveDensity(android.content.res.Resources,int) -> a
    595:596:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    410:411:void setCurrentIndex(int) -> b
    632:632:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> b
    203:204:void setEnterFadeDuration(int) -> c
    414:414:int getCurrentIndex() -> c
    601:601:boolean canApplyTheme() -> canApplyTheme
    102:102:boolean needsMirroring() -> d
    213:214:void setExitFadeDuration(int) -> d
    87:93:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    97:97:int getChangingConfigurations() -> getChangingConfigurations
    606:610:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    578:578:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    296:301:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    342:345:int getIntrinsicHeight() -> getIntrinsicHeight
    334:337:int getIntrinsicWidth() -> getIntrinsicWidth
    358:361:int getMinimumHeight() -> getMinimumHeight
    350:353:int getMinimumWidth() -> getMinimumWidth
    405:405:int getOpacity() -> getOpacity
    132:135:void getOutline(android.graphics.Outline) -> getOutline
    108:126:boolean getPadding(android.graphics.Rect) -> getPadding
    369:375:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    228:228:boolean isStateful() -> isStateful
    249:273:void jumpToCurrentState() -> jumpToCurrentState
    616:622:android.graphics.drawable.Drawable mutate() -> mutate
    218:224:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    329:329:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    316:322:boolean onLevelChange(int) -> onLevelChange
    305:311:boolean onStateChange(int[]) -> onStateChange
    379:382:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    139:150:void setAlpha(int) -> setAlpha
    233:240:void setAutoMirrored(boolean) -> setAutoMirrored
    169:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    159:165:void setDither(boolean) -> setDither
    277:280:void setHotspot(float,float) -> setHotspot
    284:292:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:185:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:194:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    393:400:boolean setVisible(boolean,boolean) -> setVisible
    386:389:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> a.c.d.a.b$a:
    androidx.appcompat.graphics.drawable.DrawableContainer this$0 -> b
    468:468:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    471:473:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> a.c.d.a.b$b:
    android.graphics.drawable.Drawable$Callback mCallback -> b
    1169:1169:void <init>() -> <init>
    1173:1174:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> a
    1178:1180:android.graphics.drawable.Drawable$Callback unwrap() -> a
    1186:1186:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1190:1193:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1197:1200:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> a.c.d.a.b$c:
    boolean mCheckedConstantSize -> m
    int mConstantWidth -> n
    boolean mVariablePadding -> i
    int mNumChildren -> h
    boolean mStateful -> u
    int mChangingConfigurations -> d
    boolean mCanConstantState -> w
    int mEnterFadeDuration -> A
    androidx.appcompat.graphics.drawable.DrawableContainer mOwner -> a
    boolean mMutated -> y
    android.content.res.ColorStateList mTintList -> F
    boolean mHasColorFilter -> E
    android.util.SparseArray mDrawableFutures -> f
    android.content.res.Resources mSourceRes -> b
    int mOpacity -> s
    boolean mAutoMirrored -> C
    int mConstantMinimumHeight -> q
    int mConstantHeight -> o
    android.graphics.ColorFilter mColorFilter -> D
    boolean mHasTintMode -> I
    boolean mCheckedPadding -> j
    boolean mConstantSize -> l
    boolean mCheckedConstantState -> v
    int mChildrenChangingConfigurations -> e
    android.graphics.drawable.Drawable[] mDrawables -> g
    boolean mDither -> x
    int mExitFadeDuration -> B
    int mDensity -> c
    boolean mCheckedOpacity -> r
    boolean mCheckedStateful -> t
    android.graphics.Rect mConstantPadding -> k
    int mLayoutDirection -> z
    android.graphics.PorterDuff$Mode mTintMode -> G
    boolean mHasTintList -> H
    int mConstantMinimumWidth -> p
    684:757:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:786:int addChild(android.graphics.drawable.Drawable) -> a
    830:848:android.graphics.drawable.Drawable getChild(int) -> a
    879:891:void updateDensity(android.content.res.Resources) -> a
    895:908:void applyTheme(android.content.res.Resources$Theme) -> a
    993:994:void setConstantSize(boolean) -> a
    1124:1127:void growArray(int,int) -> a
    1133:1132:boolean canConstantState() -> a
    814:819:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> b
    852:869:boolean setLayoutDirection(int,int) -> b
    952:953:void clearMutated() -> b
    961:962:void setVariablePadding(boolean) -> b
    1064:1065:void setEnterFadeDuration(int) -> b
    1044:1061:void computeConstantSize() -> c
    1072:1073:void setExitFadeDuration(int) -> c
    913:928:boolean canApplyTheme() -> canApplyTheme
    798:798:int getCapacity() -> d
    823:823:int getChildCount() -> e
    1017:1020:int getConstantHeight() -> f
    1037:1040:int getConstantMinimumHeight() -> g
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    1027:1030:int getConstantMinimumWidth() -> h
    968:972:android.graphics.Rect getConstantPadding() -> i
    1007:1010:int getConstantWidth() -> j
    1068:1068:int getEnterFadeDuration() -> k
    1076:1076:int getExitFadeDuration() -> l
    1083:1095:int getOpacity() -> m
    793:795:void invalidateCache() -> n
    1000:1000:boolean isConstantSize() -> o
    1102:1117:boolean isStateful() -> p
    934:942:void mutate() -> q
    802:811:void createAllFutures() -> r
androidx.appcompat.graphics.drawable.DrawableWrapper -> a.c.d.a.c:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> a.c.d.a.d:
    int ARROW_DIRECTION_RIGHT -> n
    int ARROW_DIRECTION_START -> o
    float mMaxCutForBarSize -> k
    float mProgress -> j
    int mDirection -> l
    int ARROW_DIRECTION_LEFT -> m
    boolean mVerticalMirror -> i
    int mSize -> h
    float mBarGap -> e
    float mArrowShaftLength -> d
    float mBarLength -> c
    float mArrowHeadLength -> b
    android.graphics.Path mPath -> g
    android.graphics.Paint mPaint -> a
    boolean mSpin -> f
    float ARROW_HEAD_ANGLE -> q
    int ARROW_DIRECTION_END -> p
    100:100:void <clinit>() -> <clinit>
    128:152:void <init>(android.content.Context) -> <init>
    160:164:void setArrowHeadLength(float) -> a
    171:171:float getArrowHeadLength() -> a
    216:220:void setColor(int) -> a
    300:304:void setSpinEnabled(boolean) -> a
    465:465:float lerp(float,float,float) -> a
    180:184:void setArrowShaftLength(float) -> b
    190:190:float getArrowShaftLength() -> b
    277:281:void setDirection(int) -> b
    318:322:void setVerticalMirror(boolean) -> b
    197:197:float getBarLength() -> c
    206:210:void setBarLength(float) -> c
    236:241:void setBarThickness(float) -> d
    247:247:float getBarThickness() -> d
    326:401:void draw(android.graphics.Canvas) -> draw
    227:227:int getColor() -> e
    267:271:void setGapSize(float) -> e
    311:311:int getDirection() -> f
    448:452:void setProgress(float) -> f
    256:256:float getGapSize() -> g
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    458:458:android.graphics.Paint getPaint() -> h
    437:437:float getProgress() -> i
    289:289:boolean isSpinEnabled() -> j
    405:409:void setAlpha(int) -> setAlpha
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection -> a.c.d.a.d$a:
androidx.appcompat.graphics.drawable.StateListDrawable -> a.c.d.a.e:
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState -> r
    boolean DEBUG -> u
    boolean mMutated -> s
    java.lang.String TAG -> t
    88:89:void <init>() -> <init>
    403:408:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:418:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    99:104:void addState(int[],android.graphics.drawable.Drawable) -> a
    143:150:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    156:171:void updateStateFromTypedArray(android.content.res.TypedArray) -> a
    234:253:int[] extractStateSet(android.util.AttributeSet) -> a
    304:304:int getStateDrawableIndex(int[]) -> a
    324:326:void clearMutated() -> a
    397:401:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    391:393:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> b
    179:225:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> b
    268:268:int getStateCount() -> d
    257:257:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState() -> e
    292:292:android.graphics.drawable.Drawable getStateDrawable(int) -> e
    280:280:int[] getStateSet(int) -> f
    108:108:boolean isStateful() -> isStateful
    310:314:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> a.c.d.a.e$a:
    int[][] mStateSets -> J
    332:339:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:353:int addStateSet(int[],android.graphics.drawable.Drawable) -> a
    357:364:int indexOfStateSet(int[]) -> a
    381:385:void growArray(int,int) -> a
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    343:348:void mutate() -> q
androidx.appcompat.resources.R -> a.c.e.a:
    668:668:void <init>() -> <init>
androidx.appcompat.resources.R$attr -> a.c.e.a$a:
    455:455:void <init>() -> <init>
androidx.appcompat.resources.R$color -> a.c.e.a$b:
    471:471:void <init>() -> <init>
androidx.appcompat.resources.R$dimen -> a.c.e.a$c:
    750:750:void <init>() -> <init>
androidx.appcompat.resources.R$drawable -> a.c.e.a$d:
    806:806:void <init>() -> <init>
androidx.appcompat.resources.R$id -> a.c.e.a$e:
    797:797:void <init>() -> <init>
androidx.appcompat.resources.R$integer -> a.c.e.a$f:
    787:787:void <init>() -> <init>
androidx.appcompat.resources.R$layout -> a.c.e.a$g:
    199:199:void <init>() -> <init>
androidx.appcompat.resources.R$string -> a.c.e.a$h:
    634:634:void <init>() -> <init>
androidx.appcompat.resources.R$style -> a.c.e.a$i:
    18:18:void <init>() -> <init>
androidx.appcompat.resources.R$styleable -> a.c.e.a$j:
    429:558:void <clinit>() -> <clinit>
    166:166:void <init>() -> <init>
androidx.appcompat.text.AllCapsTransformationMethod -> a.c.f.a:
    java.util.Locale mLocale -> b
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> a.c.g.a:
    android.content.Context mContext -> a
    46:48:void <init>(android.content.Context) -> <init>
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> a
    110:110:boolean enableHomeButtonByDefault() -> a
    86:86:int getEmbeddedMenuWidthLimit() -> b
    56:64:int getMaxActionButtons() -> c
    115:115:int getStackedTabMaxWidth() -> d
    94:104:int getTabContainerHeight() -> e
    90:90:boolean hasEmbeddedTabs() -> f
    78:81:boolean showsOverflowMenuButton() -> g
androidx.appcompat.view.ActionMode -> a.c.g.b:
    java.lang.Object mTag -> b
    boolean mTitleOptionalHint -> c
    41:41:void <init>() -> <init>
    void finish() -> a
    void setCustomView(android.view.View) -> a
    void setSubtitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    57:58:void setTag(java.lang.Object) -> a
    134:135:void setTitleOptionalHint(boolean) -> a
    android.view.View getCustomView() -> b
    void setTitle(int) -> b
    void setTitle(java.lang.CharSequence) -> b
    android.view.Menu getMenu() -> c
    android.view.MenuInflater getMenuInflater() -> d
    java.lang.CharSequence getSubtitle() -> e
    71:71:java.lang.Object getTag() -> f
    java.lang.CharSequence getTitle() -> g
    145:145:boolean getTitleOptionalHint() -> h
    void invalidate() -> i
    153:153:boolean isTitleOptional() -> j
    225:225:boolean isUiFocusable() -> k
androidx.appcompat.view.ActionMode$Callback -> a.c.g.b$a:
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.view.CollapsibleActionView -> a.c.g.c:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
androidx.appcompat.view.ContextThemeWrapper -> a.c.g.d:
    android.content.res.Resources$Theme mTheme -> b
    android.content.res.Configuration mOverrideConfiguration -> d
    android.content.res.Resources mResources -> e
    android.view.LayoutInflater mInflater -> c
    int mThemeResource -> a
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:98:void applyOverrideConfiguration(android.content.res.Configuration) -> a
    137:137:int getThemeResId() -> a
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> a
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    113:121:android.content.res.Resources getResourcesInternal() -> b
    181:190:void initializeTheme() -> c
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    126:130:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> a.c.g.e:
    androidx.appcompat.view.ActionMode$Callback mCallback -> f
    androidx.appcompat.widget.ActionBarContextView mContextView -> e
    boolean mFocusable -> i
    java.lang.ref.WeakReference mCustomView -> g
    boolean mFinished -> h
    android.content.Context mContext -> d
    androidx.appcompat.view.menu.MenuBuilder mMenu -> j
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    68:69:void setSubtitle(java.lang.CharSequence) -> a
    78:79:void setSubtitle(int) -> a
    83:85:void setTitleOptionalHint(boolean) -> a
    94:96:void setCustomView(android.view.View) -> a
    105:112:void finish() -> a
    145:145:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    157:157:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    63:64:void setTitle(java.lang.CharSequence) -> b
    73:74:void setTitle(int) -> b
    131:131:android.view.View getCustomView() -> b
    148:153:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> b
    116:116:android.view.Menu getMenu() -> c
    136:136:android.view.MenuInflater getMenuInflater() -> d
    126:126:java.lang.CharSequence getSubtitle() -> e
    121:121:java.lang.CharSequence getTitle() -> g
    100:101:void invalidate() -> i
    89:89:boolean isTitleOptional() -> j
    167:167:boolean isUiFocusable() -> k
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.view.SupportActionModeWrapper -> a.c.g.f:
    android.content.Context mContext -> a
    androidx.appcompat.view.ActionMode mWrappedObject -> b
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> a.c.g.f$a:
    android.content.Context mContext -> b
    androidx.collection.SimpleArrayMap mMenus -> d
    android.view.ActionMode$Callback mWrappedCallback -> a
    java.util.ArrayList mActionModes -> c
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    165:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> a
    159:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> b
androidx.appcompat.view.SupportMenuInflater -> a.c.g.g:
    java.lang.String XML_GROUP -> g
    java.lang.String XML_MENU -> f
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.String XML_ITEM -> h
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object mRealOwner -> d
    int NO_ID -> i
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> k
    java.lang.String LOG_TAG -> e
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> j
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    224:227:java.lang.Object getRealOwner() -> a
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> a
    119:136:void inflate(int,android.view.Menu) -> inflate
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> a.c.g.g$a:
    java.lang.Class[] PARAM_TYPES -> c
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> a.c.g.g$b:
    boolean defaultItemEnabled -> N
    int itemCategoryOrder -> j
    int defaultItemCheckable -> K
    char itemAlphabeticShortcut -> n
    int defaultItemCategory -> I
    boolean defaultItemChecked -> L
    java.lang.CharSequence itemTooltipText -> C
    char itemNumericShortcut -> p
    boolean itemEnabled -> u
    int defaultGroupId -> G
    int groupOrder -> d
    int groupId -> b
    boolean itemChecked -> s
    java.lang.String itemActionViewClassName -> x
    android.content.res.ColorStateList itemIconTintList -> D
    java.lang.String itemListenerMethodName -> z
    android.view.Menu menu -> a
    boolean groupVisible -> f
    int itemActionViewLayout -> w
    androidx.appcompat.view.SupportMenuInflater this$0 -> F
    boolean itemAdded -> h
    androidx.core.view.ActionProvider itemActionProvider -> A
    int itemNumericModifiers -> q
    boolean defaultItemVisible -> M
    int itemAlphabeticModifiers -> o
    int itemIconResId -> m
    int defaultItemOrder -> J
    int defaultItemId -> H
    java.lang.CharSequence itemContentDescription -> B
    int itemId -> i
    int groupCheckable -> e
    int groupCategory -> c
    java.lang.CharSequence itemTitle -> k
    boolean itemVisible -> t
    java.lang.CharSequence itemTitleCondensed -> l
    java.lang.String itemActionProviderClassName -> y
    android.graphics.PorterDuff$Mode itemIconTintMode -> E
    int itemShowAsAction -> v
    boolean groupEnabled -> g
    int itemCheckable -> r
    349:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    368:380:void readGroup(android.util.AttributeSet) -> a
    459:462:char getShortcut(java.lang.String) -> a
    467:528:void setItem(android.view.MenuItem) -> a
    531:533:void addItem() -> a
    550:557:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    386:456:void readItem(android.util.AttributeSet) -> b
    536:539:android.view.SubMenu addSubMenuItem() -> b
    543:543:boolean hasAddedItem() -> c
    356:362:void resetGroup() -> d
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> a.c.g.h:
    android.view.animation.Interpolator mInterpolator -> c
    androidx.core.view.ViewPropertyAnimatorListener mListener -> d
    long mDuration -> b
    boolean mIsStarted -> e
    androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    java.util.ArrayList mAnimators -> a
    48:50:void <init>() -> <init>
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> a
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> a
    90:97:void cancel() -> a
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> a
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> a
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> a
    86:87:void onAnimationsEnded() -> b
    68:83:void start() -> c
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> a.c.g.h$a:
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0 -> c
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    137:140:void onEnd() -> a
    144:150:void onAnimationEnd(android.view.View) -> a
    127:134:void onAnimationStart(android.view.View) -> b
androidx.appcompat.view.WindowCallbackWrapper -> a.c.g.i:
    android.view.Window$Callback mWrapped -> b
    50:52:void <init>(android.view.Window$Callback) -> <init>
    188:188:android.view.Window$Callback getWrapped() -> a
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> a.c.g.j.a:
    int mCategoryOrder -> n
    int mId -> l
    int ENABLED -> M
    android.content.Intent mIntent -> r
    int EXCLUSIVE -> K
    java.lang.CharSequence mContentDescription -> A
    int CHECKABLE -> I
    int mFlags -> G
    java.lang.CharSequence mTitleCondensed -> q
    android.content.Context mContext -> y
    boolean mHasIconTint -> E
    int mOrdering -> o
    int HIDDEN -> L
    int mGroup -> m
    int CHECKED -> J
    int NO_ICON -> H
    java.lang.CharSequence mTooltipText -> B
    android.graphics.PorterDuff$Mode mIconTintMode -> D
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> z
    char mShortcutNumericChar -> s
    char mShortcutAlphabeticChar -> u
    java.lang.CharSequence mTitle -> p
    android.graphics.drawable.Drawable mIconDrawable -> w
    android.content.res.ColorStateList mIconTintList -> C
    int mIconResId -> x
    int mShortcutAlphabeticModifiers -> v
    boolean mHasIconTintMode -> F
    int mShortcutNumericModifiers -> t
    83:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    202:203:androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> a
    327:327:boolean requiresOverflow() -> a
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
    357:357:androidx.core.view.ActionProvider getSupportActionProvider() -> b
    322:322:boolean requiresActionButton() -> c
    378:378:boolean collapseActionView() -> collapseActionView
    303:312:boolean invoke() -> d
    444:456:void applyIconTint() -> e
    373:373:boolean expandActionView() -> expandActionView
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    337:337:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    383:383:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:394:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    415:420:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:435:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:368:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:405:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    int MAX_ICON_SIZE -> n
    android.graphics.drawable.Drawable mIcon -> d
    int mMaxIconSize -> l
    boolean mExpandedFormat -> i
    int mMinWidth -> j
    int mSavedPaddingLeft -> k
    java.lang.String TAG -> m
    java.lang.CharSequence mTitle -> c
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> f
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> e
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> b
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> g
    boolean mAllowTextWithIcon -> h
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    264:264:boolean needsDividerAfter() -> a
    259:259:boolean needsDividerBefore() -> b
    237:237:boolean hasText() -> c
    103:107:boolean shouldAllowTextWithIcon() -> d
    188:211:void updateTextButtonVisibility() -> e
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    243:243:void setShortcut(boolean,char) -> setShortcut
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    254:254:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$a:
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> k
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    314:318:boolean onForwardingStarted() -> b
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$b:
    336:336:void <init>() -> <init>
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
androidx.appcompat.view.menu.BaseMenuPresenter -> a.c.g.j.b:
    android.view.LayoutInflater mInflater -> f
    androidx.appcompat.view.menu.MenuView mMenuView -> j
    android.content.Context mContext -> c
    android.content.Context mSystemContext -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    android.view.LayoutInflater mSystemInflater -> e
    int mId -> k
    int mMenuLayoutRes -> h
    int mItemLayoutRes -> i
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> g
    61:66:void <init>(android.content.Context,int,int) -> <init>
    void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> a
    134:139:void addItemView(android.view.View,int) -> a
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> a
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> a
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    208:208:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> a
    247:248:void setId(int) -> a
    238:238:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    233:233:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    228:228:boolean flagActionItems() -> flagActionItems
    243:243:int getId() -> getId
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:223:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> a.c.g.j.c:
    java.util.Map mMenuItems -> m
    android.content.Context mContext -> l
    java.util.Map mSubMenus -> n
    37:39:void <init>(android.content.Context) -> <init>
    42:61:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    65:81:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    95:108:void internalRemoveGroup(int) -> a
    111:125:void internalRemoveItem(int) -> b
    86:92:void internalClear() -> d
androidx.appcompat.view.menu.CascadingMenuPopup -> a.c.g.j.d:
    int mRawDropDownGravity -> n
    android.content.Context mContext -> c
    int mPopupStyleRes -> f
    android.view.View mAnchorView -> p
    int mMenuMaxWidth -> d
    boolean mForceShowIcon -> w
    int HORIZ_POSITION_RIGHT -> E
    int ITEM_LAYOUT -> C
    boolean mHasXOffset -> s
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> m
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    java.util.List mShowingMenus -> j
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    int mXOffset -> u
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> y
    int mDropDownGravity -> o
    int SUBMENU_TIMEOUT_MS -> F
    android.view.View mShownAnchorView -> q
    int HORIZ_POSITION_LEFT -> D
    int mPopupStyleAttr -> e
    boolean mShowTitle -> x
    boolean mHasYOffset -> t
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> A
    android.view.ViewTreeObserver mTreeObserver -> z
    int mYOffset -> v
    java.util.List mPendingMenus -> i
    boolean mOverflowOnly -> g
    int mLastPosition -> r
    boolean mShouldCloseImmediately -> B
    android.os.Handler mSubMenuHoverHandler -> h
    66:66:void <clinit>() -> <clinit>
    222:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    241:242:void setForceShowIcon(boolean) -> a
    354:361:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    516:523:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> a
    537:577:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> a
    588:588:boolean isShowing() -> a
    740:745:void setGravity(int) -> a
    749:756:void setAnchorView(android.view.View) -> a
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    772:774:void setHorizontalOffset(int) -> b
    784:785:void setShowTitle(boolean) -> b
    791:791:boolean closeMenuOnSubMenuOpened() -> b
    655:662:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
    778:780:void setVerticalOffset(int) -> c
    245:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> d
    329:348:int getNextMenuPosition(int) -> d
    369:503:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> d
    287:298:void dismiss() -> dismiss
    315:316:int getInitialMenuPosition() -> e
    726:726:boolean flagActionItems() -> flagActionItems
    765:765:android.widget.ListView getListView() -> g
    667:722:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    736:736:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    731:731:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    629:645:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    623:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    259:279:void show() -> show
    616:619:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> a.c.g.j.d$a:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> a.c.g.j.d$b:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> a.c.g.j.d$c:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> a.c.g.j.d$c$a:
    androidx.appcompat.view.menu.MenuBuilder val$menu -> d
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> e
    android.view.MenuItem val$item -> c
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> b
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> a.c.g.j.d$d:
    androidx.appcompat.view.menu.MenuBuilder menu -> b
    int position -> c
    androidx.appcompat.widget.MenuPopupWindow window -> a
    800:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> a
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition -> a.c.g.j.d$e:
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int[] TINT_ATTRS -> d
    int mAnimations -> c
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    boolean mPreserveIconSpacing -> n
    int mTextAppearance -> l
    boolean mHasListDivider -> p
    android.widget.LinearLayout mContent -> j
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> b
    boolean mForceShowIcon -> s
    java.lang.String TAG -> t
    android.widget.ImageView mIconView -> c
    android.widget.ImageView mSubMenuArrowView -> h
    android.widget.ImageView mGroupDivider -> i
    android.widget.CheckBox mCheckBox -> f
    android.widget.RadioButton mRadioButton -> d
    android.content.Context mTextAppearanceContext -> m
    android.view.LayoutInflater mInflater -> r
    android.widget.TextView mTitleView -> e
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> k
    android.graphics.drawable.Drawable mSubMenuArrow -> o
    int mMenuType -> q
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:142:void addContentView(android.view.View) -> a
    145:150:void addContentView(android.view.View,int) -> a
    312:317:void insertCheckBox() -> a
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    297:301:void insertIconView() -> b
    304:309:void insertRadioButton() -> c
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:138:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    321:321:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:255:void setShortcut(boolean,char) -> setShortcut
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
    326:326:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ListMenuPresenter -> a.c.g.j.e:
    androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> j
    android.content.Context mContext -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    android.view.LayoutInflater mInflater -> c
    int mId -> k
    java.lang.String VIEWS_TAG -> m
    int mItemLayoutRes -> h
    java.lang.String TAG -> l
    int mItemIndexOffset -> f
    int mThemeRes -> g
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> i
    androidx.appcompat.view.menu.ExpandedMenuView mMenuView -> e
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    125:128:android.widget.ListAdapter getAdapter() -> a
    200:204:void restoreHierarchyState(android.os.Bundle) -> a
    207:208:void setId(int) -> a
    161:161:int getItemIndexOffset() -> b
    165:169:void setItemIndexOffset(int) -> b
    192:197:void saveHierarchyState(android.os.Bundle) -> b
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    212:212:int getId() -> getId
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> a.c.g.j.e$a:
    androidx.appcompat.view.menu.ListMenuPresenter this$0 -> c
    int mExpandedIndex -> b
    234:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> a
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> a.c.g.j.f:
    android.view.LayoutInflater mInflater -> f
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> b
    boolean mOverflowOnly -> e
    int mItemLayoutRes -> g
    int mExpandedIndex -> c
    boolean mForceShowIcon -> d
    44:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    57:58:void setForceShowIcon(boolean) -> a
    114:127:void findExpandedIndex() -> a
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> b
    53:53:boolean getForceShowIcon() -> c
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuBuilder -> a.c.g.j.g:
    68:68:void <clinit>() -> <clinit>
    229:242:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:257:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:272:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:850:void changeMenuMode() -> changeMenuMode
    610:616:void clear() -> clear
    598:606:void clearAll() -> clearAll
    1219:1224:void clearHeader() -> clearHeader
    1036:1048:void close(boolean) -> close
    1052:1053:void close() -> close
    1379:1379:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:302:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    350:352:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    327:347:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    306:323:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1375:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:748:int findGroupIndex(int,int) -> findGroupIndex
    853:860:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:713:android.view.MenuItem findItem(int) -> findItem
    717:726:int findItemIndex(int) -> findItemIndex
    936:971:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1206:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    436:436:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    785:788:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1334:1334:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1120:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1109:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1076:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:988:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    594:595:void removeItemAt(int) -> removeItemAt
    586:586:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:287:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    406:433:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:376:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    379:403:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    371:372:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    440:441:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    1345:1346:void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    245:246:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1290:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1302:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1266:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1278:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1314:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1349:1350:void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    1410:1411:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    809:815:void setShortcutsVisible(boolean) -> setShortcutsVisible
    818:822:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1098:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1089:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuBuilder$Callback -> a.c.g.j.g$a:
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> a.c.g.j.g$b:
    boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
androidx.appcompat.view.menu.MenuDialogHelper -> a.c.g.j.h:
    androidx.appcompat.app.AlertDialog mDialog -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> e
    androidx.appcompat.view.menu.ListMenuPresenter mPresenter -> d
    42:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    53:90:void show(android.os.IBinder) -> a
    130:131:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    139:142:void dismiss() -> a
    161:164:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
    151:157:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
androidx.appcompat.view.menu.MenuHelper -> a.c.g.j.i:
    void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
androidx.appcompat.view.menu.MenuItemImpl -> a.c.g.j.j:
    int mCategoryOrder -> n
    int mId -> l
    android.content.Intent mIntent -> r
    int mShowAsAction -> K
    java.lang.CharSequence mContentDescription -> C
    java.lang.String TAG -> Q
    androidx.appcompat.view.menu.MenuBuilder mMenu -> y
    android.graphics.PorterDuff$Mode mIconTintMode -> F
    java.lang.CharSequence mTitleCondensed -> q
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> z
    android.view.View mActionView -> L
    int IS_ACTION -> X
    int HIDDEN -> V
    int CHECKED -> T
    boolean mHasIconTint -> G
    int SHOW_AS_ACTION_MASK -> R
    int mOrdering -> o
    boolean mIsActionViewExpanded -> O
    int mGroup -> m
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> B
    boolean mNeedToApplyIconTint -> I
    int mFlags -> J
    androidx.core.view.ActionProvider mActionProvider -> M
    java.lang.CharSequence mTooltipText -> D
    java.lang.Runnable mItemCallback -> A
    char mShortcutNumericChar -> s
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> P
    char mShortcutAlphabeticChar -> u
    java.lang.CharSequence mTitle -> p
    android.graphics.drawable.Drawable mIconDrawable -> w
    int mIconResId -> x
    int NO_ICON -> Y
    android.content.res.ColorStateList mIconTintList -> E
    int mShortcutAlphabeticModifiers -> v
    int ENABLED -> W
    int mShortcutNumericModifiers -> t
    int EXCLUSIVE -> U
    boolean mHasIconTintMode -> H
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> N
    int CHECKABLE -> S
    137:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    237:238:android.view.MenuItem setCallback(java.lang.Runnable) -> a
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> a
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    446:446:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> a
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> a
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    716:716:boolean requiresOverflow() -> a
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
    865:867:void setActionViewExpanded(boolean) -> a
    631:636:void setCheckedInt(boolean) -> b
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> b
    605:606:void setExclusiveCheckable(boolean) -> c
    711:711:boolean requiresActionButton() -> c
    838:848:boolean collapseActionView() -> collapseActionView
    691:692:void actionFormatChanged() -> d
    720:725:void setIsActionButton(boolean) -> d
    233:233:java.lang.Runnable getCallback() -> e
    655:657:boolean setVisibleInt(boolean) -> e
    824:830:boolean expandActionView() -> expandActionView
    218:218:int getOrdering() -> f
    342:342:char getShortcut() -> g
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    352:398:java.lang.String getShortcutLabel() -> h
    424:424:boolean hasSubMenu() -> hasSubMenu
    855:861:boolean hasCollapsibleActionView() -> i
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    640:643:boolean isVisible() -> isVisible
    154:180:boolean invoke() -> j
    702:702:boolean isActionButton() -> k
    609:609:boolean isExclusiveCheckable() -> l
    706:706:boolean requestsActionButton() -> m
    698:698:boolean shouldShowIcon() -> n
    414:414:boolean shouldShowShortcut() -> o
    728:728:boolean showsTextAsAction() -> p
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> a.c.g.j.j$a:
    androidx.appcompat.view.menu.MenuItemImpl this$0 -> a
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> a.c.g.j.k:
    androidx.core.internal.view.SupportMenuItem mWrappedObject -> o
    java.lang.String LOG_TAG -> q
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> p
    56:58:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    387:395:void setExclusiveCheckable(boolean) -> a
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> a.c.g.j.k$a:
    android.view.ActionProvider mInner -> e
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> f
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> a
    449:449:boolean hasSubMenu() -> b
    439:439:android.view.View onCreateActionView() -> d
    444:444:boolean onPerformDefaultAction() -> e
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> a.c.g.j.k$b:
    androidx.core.view.ActionProvider$VisibilityListener mListener -> g
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> h
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> a
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> a
    479:479:boolean isVisible() -> c
    474:474:boolean overridesItemVisibility() -> f
    484:485:void refreshVisibility() -> g
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> a.c.g.j.k$c:
    android.view.CollapsibleActionView mWrappedView -> b
    512:515:void <init>(android.view.View) -> <init>
    519:520:void onActionViewExpanded() -> a
    524:525:void onActionViewCollapsed() -> b
    528:528:android.view.View getWrappedView() -> c
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> a.c.g.j.k$d:
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.MenuItem$OnActionExpandListener mObject -> a
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> a.c.g.j.k$e:
    android.view.MenuItem$OnMenuItemClickListener mObject -> a
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> a.c.g.j.l:
    android.graphics.Rect mEpicenterBounds -> b
    39:39:void <init>() -> <init>
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    void setAnchorView(android.view.View) -> a
    void setForceShowIcon(boolean) -> a
    void setGravity(int) -> a
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    71:72:void setEpicenterBounds(android.graphics.Rect) -> a
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> a
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> a
    void setHorizontalOffset(int) -> b
    void setShowTitle(boolean) -> b
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> b
    217:217:boolean closeMenuOnSubMenuOpened() -> b
    void setVerticalOffset(int) -> c
    78:78:android.graphics.Rect getEpicenterBounds() -> c
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    118:118:int getId() -> getId
    103:103:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.MenuPopupHelper -> a.c.g.j.m:
    android.content.Context mContext -> a
    int TOUCH_EPICENTER_SIZE_DP -> m
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int mDropDownGravity -> g
    int mPopupStyleAttr -> d
    int mPopupStyleRes -> e
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    boolean mForceShowIcon -> h
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    boolean mOverflowOnly -> c
    android.view.View mAnchorView -> f
    68:69:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    73:74:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View) -> <init>
    79:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:91:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    105:106:void setAnchorView(android.view.View) -> a
    118:122:void setForceShowIcon(boolean) -> a
    132:133:void setGravity(int) -> a
    139:139:int getGravity() -> a
    149:150:void show(int,int) -> a
    263:291:void showPopup(int,int,boolean,boolean) -> a
    325:329:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    205:214:boolean tryShow(int,int) -> b
    345:345:android.widget.ListView getListView() -> b
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> c
    320:320:boolean isShowing() -> d
    298:301:void dismiss() -> dismiss
    312:317:void onDismiss() -> e
    143:144:void show() -> f
    169:178:boolean tryShow() -> g
    224:259:androidx.appcompat.view.menu.MenuPopup createPopup() -> h
androidx.appcompat.view.menu.MenuPopupHelper$1 -> a.c.g.j.m$a:
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> b
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuPresenter -> a.c.g.j.n:
androidx.appcompat.view.menu.MenuPresenter$Callback -> a.c.g.j.n$a:
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuView -> a.c.g.j.o:
androidx.appcompat.view.menu.MenuView$ItemView -> a.c.g.j.o$a:
androidx.appcompat.view.menu.MenuWrapperICS -> a.c.g.j.p:
    androidx.core.internal.view.SupportMenu mWrappedObject -> o
    41:43:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:85:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.ShowableListMenu -> a.c.g.j.q:
    boolean isShowing() -> a
    android.widget.ListView getListView() -> g
androidx.appcompat.view.menu.StandardMenuPopup -> a.c.g.j.r:
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> p
    android.content.Context mContext -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> m
    int mPopupStyleAttr -> h
    int mPopupStyleRes -> i
    android.view.ViewTreeObserver mTreeObserver -> q
    int mPopupMaxWidth -> g
    boolean mShowTitle -> v
    boolean mWasDismissed -> r
    boolean mHasContentWidth -> s
    androidx.appcompat.widget.MenuPopupWindow mPopup -> j
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    android.view.View mShownAnchorView -> o
    android.view.View mAnchorView -> n
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    int ITEM_LAYOUT -> w
    boolean mOverflowOnly -> f
    int mContentWidth -> t
    int mDropDownGravity -> u
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> e
    46:46:void <clinit>() -> <clinit>
    117:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    140:141:void setForceShowIcon(boolean) -> a
    145:146:void setGravity(int) -> a
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    227:227:boolean isShowing() -> a
    325:326:void setAnchorView(android.view.View) -> a
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    350:351:void setHorizontalOffset(int) -> b
    360:361:void setShowTitle(boolean) -> b
    355:356:void setVerticalOffset(int) -> c
    149:154:boolean tryShow() -> d
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> g
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    316:316:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    208:209:void show() -> show
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> a.c.g.j.r$a:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> b
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> a.c.g.j.r$b:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> b
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> a.c.g.j.s:
    42:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:89:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
    60:61:void setShortcutsVisible(boolean) -> setShortcutsVisible
androidx.appcompat.view.menu.SubMenuWrapperICS -> a.c.g.j.t:
    androidx.core.internal.view.SupportSubMenu mSubMenu -> p
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> a.c.h.a:
    androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> b
    android.content.Context mPopupContext -> c
    int FADE_DURATION -> j
    androidx.appcompat.widget.ActionMenuView mMenuView -> d
    boolean mEatingHover -> i
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> e
    int mContentHeight -> f
    androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim -> g
    boolean mEatingTouch -> h
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> a
    158:174:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    179:181:void animateToVisibility(int) -> a
    235:235:boolean canShowOverflowMenu() -> a
    246:252:int measureChildView(android.view.View,int,int,int) -> a
    256:256:int next(int,int,boolean) -> a
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> a
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> b
    239:242:void dismissPopupMenus() -> b
    210:213:boolean hideOverflowMenu() -> c
    224:227:boolean isOverflowMenuShowPending() -> d
    217:220:boolean isOverflowMenuShowing() -> e
    231:231:boolean isOverflowReserved() -> f
    201:207:void postShowOverflowMenu() -> g
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    194:197:boolean showOverflowMenu() -> h
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    139:141:void setContentHeight(int) -> setContentHeight
    185:191:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.AbsActionBarView$1 -> a.c.h.a$a:
    androidx.appcompat.widget.AbsActionBarView this$0 -> b
    201:201:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    204:205:void run() -> run
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> a.c.h.a$b:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.AbsActionBarView this$0 -> c
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    279:281:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> a
    292:296:void onAnimationEnd(android.view.View) -> a
    286:288:void onAnimationStart(android.view.View) -> b
    300:301:void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.ActionBarBackgroundDrawable -> a.c.h.b:
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    android.graphics.drawable.Drawable mBackground -> f
    android.graphics.drawable.Drawable mStackedBackground -> g
    boolean mIsSplit -> i
    android.graphics.drawable.Drawable mSplitBackground -> h
    boolean mIsStacked -> j
    int mHeight -> k
    android.view.View mTabContainer -> c
    android.view.View mContextView -> e
    boolean mIsTransitioning -> b
    android.view.View mActionBarView -> d
    55:56:void <init>(android.content.Context) -> <init>
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> a
    263:263:boolean isCollapsed(android.view.View) -> b
    168:178:void drawableStateChanged() -> drawableStateChanged
    243:243:android.view.View getTabContainer() -> getTabContainer
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:162:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    java.lang.CharSequence mSubtitle -> l
    java.lang.String TAG -> v
    android.widget.TextView mSubtitleView -> q
    android.widget.LinearLayout mTitleLayout -> o
    android.widget.TextView mTitleView -> p
    android.view.View mClose -> m
    android.view.View mCustomView -> n
    int mCloseItemLayout -> u
    int mTitleStyleRes -> r
    int mSubtitleStyleRes -> s
    java.lang.CharSequence mTitle -> k
    boolean mTitleOptional -> t
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:40:void animateToVisibility(int) -> a
    40:40:boolean canShowOverflowMenu() -> a
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    161:190:void initForMode(androidx.appcompat.view.ActionMode) -> a
    40:40:void dismissPopupMenus() -> b
    215:218:boolean hideOverflowMenu() -> c
    40:40:boolean isOverflowMenuShowPending() -> d
    223:226:boolean isOverflowMenuShowing() -> e
    40:40:boolean isOverflowReserved() -> f
    40:40:void postShowOverflowMenu() -> g
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    207:210:boolean showOverflowMenu() -> h
    193:197:void closeMode() -> i
    378:378:boolean isTitleOptional() -> j
    200:203:void killMode() -> k
    134:158:void initTitle() -> l
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$a:
    androidx.appcompat.widget.ActionBarContextView this$0 -> c
    androidx.appcompat.view.ActionMode val$mode -> b
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:174:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    int mLastSystemUiVisibility -> n
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> B
    android.graphics.drawable.Drawable mWindowContentOverlay -> g
    boolean mOverlayMode -> i
    boolean mHideOnContentScroll -> k
    androidx.appcompat.widget.ContentFrameLayout mContent -> d
    java.lang.Runnable mRemoveActionBarHideOffset -> z
    int mActionBarHeight -> b
    android.graphics.Rect mLastBaseContentInsets -> p
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> y
    int[] ATTRS -> E
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> f
    boolean mIgnoreWindowContentOverlay -> h
    android.graphics.Rect mInnerInsets -> t
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> e
    android.graphics.Rect mBaseInnerInsets -> r
    int mHideOnContentScrollReference -> m
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> x
    boolean mHasNonEmbeddedTabs -> j
    boolean mAnimatingForFling -> l
    int ACTION_BAR_ANIMATE_DELAY -> D
    java.lang.Runnable mAddActionBarHideOffset -> A
    int mWindowVisibility -> c
    android.graphics.Rect mBaseContentInsets -> o
    androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> v
    android.graphics.Rect mLastInnerInsets -> u
    android.widget.OverScroller mFlingEstimator -> w
    java.lang.String TAG -> C
    android.graphics.Rect mLastBaseInnerInsets -> s
    android.graphics.Rect mContentInsets -> q
    131:131:void <clinit>() -> <clinit>
    139:140:void <init>(android.content.Context) -> <init>
    143:147:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:160:void init(android.content.Context) -> a
    266:284:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> a
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    656:658:boolean shouldHideActionBarOnFling(float,float) -> a
    681:693:void initFeature(int) -> a
    744:745:boolean isOverflowMenuShowPending() -> a
    768:770:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    774:776:void saveToolbarHierarchyState(android.util.SparseArray) -> a
    738:739:boolean isOverflowMenuShowing() -> b
    780:782:void restoreToolbarHierarchyState(android.util.SparseArray) -> b
    756:757:boolean hideOverflowMenu() -> c
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    750:751:boolean showOverflowMenu() -> d
    453:462:void draw(android.graphics.Canvas) -> draw
    762:764:void setMenuPrepared() -> e
    702:703:boolean hasIcon() -> f
    289:317:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    708:709:boolean hasLogo() -> g
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    732:733:boolean canShowOverflowMenu() -> h
    786:788:void dismissPopups() -> i
    628:633:void haltActionBarHideOffsetAnimations() -> j
    613:613:boolean isHideOnContentScrollEnabled() -> k
    195:195:boolean isInOverlayMode() -> l
    584:589:void pullChildren() -> m
    651:653:void addActionBarHideOffset() -> n
    641:643:void postAddActionBarHideOffset() -> o
    225:228:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:166:void onDetachedFromWindow() -> onDetachedFromWindow
    427:449:void onLayout(boolean,int,int,int,int) -> onLayout
    342:423:void onMeasure(int,int) -> onMeasure
    556:557:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    575:575:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    508:511:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    571:571:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    474:475:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    501:504:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    536:538:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    486:489:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    525:531:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    517:518:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    493:496:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    542:552:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    232:253:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:262:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    636:638:void postRemoveActionBarHideOffset() -> p
    646:648:void removeActionBarHideOffset() -> q
    621:625:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:180:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:200:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:610:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:716:void setIcon(int) -> setIcon
    720:722:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:728:void setLogo(int) -> setLogo
    183:192:void setOverlayMode(boolean) -> setOverlayMode
    221:221:void setShowingForActionMode(boolean) -> setShowingForActionMode
    698:698:void setUiOptions(int) -> setUiOptions
    663:665:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:671:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    466:466:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$a:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:109:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:103:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$b:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> b
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:118:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$c:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> b
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:128:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$d:
    void enableContentAnimations(boolean) -> a
    void onWindowVisibilityChanged(int) -> a
    void showForSystem() -> a
    void onContentScrollStarted() -> b
    void hideForSystem() -> c
    void onContentScrollStopped() -> d
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$e:
    792:793:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:797:void <init>(int,int) -> <init>
    800:801:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    804:805:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> a.c.h.c:
    java.lang.String TAG -> F
    boolean mPendingOverflowIconSet -> n
    boolean mReserveOverflow -> o
    boolean mReserveOverflowSet -> p
    boolean mStrictWidthLimit -> u
    android.util.SparseBooleanArray mActionButtonGroups -> y
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> l
    boolean mWidthLimitSet -> v
    boolean mExpandedActionViewsExclusive -> w
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> D
    int mOpenSubMenuId -> E
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> z
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> C
    boolean mMaxItemsSet -> t
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> A
    int mMinCellSize -> x
    android.graphics.drawable.Drawable mPendingOverflowIcon -> m
    int mActionItemWidthLimit -> r
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> B
    int mMaxItems -> s
    int mWidthLimit -> q
    87:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> a
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> a
    142:145:void setWidthLimit(int,boolean) -> a
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> a
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> a
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> a
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> a
    581:587:void onSubUiVisibilityChanged(boolean) -> a
    590:592:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> a
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> b
    153:155:void setItemLimit(int) -> b
    158:159:void setExpandedActionViewsExclusive(boolean) -> b
    377:379:boolean dismissPopupMenus() -> b
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> c
    148:150:void setReserveOverflow(boolean) -> c
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> c
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> d
    358:369:boolean hideOverflowMenu() -> d
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> e
    388:392:boolean hideSubMenus() -> e
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> f
    403:403:boolean isOverflowMenuShowPending() -> f
    417:547:boolean flagActionItems() -> flagActionItems
    399:399:boolean isOverflowMenuShowing() -> g
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    410:410:boolean isOverflowReserved() -> h
    336:349:boolean showOverflowMenu() -> i
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    552:554:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    565:577:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    558:560:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> a.c.h.c$a:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> n
    738:748:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:756:void onDismiss() -> e
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> a.c.h.c$b:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
    805:806:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> a.c.h.c$c:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> b
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> c
    787:789:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:801:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> a.c.h.c$d:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> e
    float[] mTempPts -> d
    633:672:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    692:692:boolean needsDividerAfter() -> a
    687:687:boolean needsDividerBefore() -> b
    676:682:boolean performClick() -> performClick
    697:714:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> a.c.h.c$d$a:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> l
    androidx.appcompat.widget.ActionMenuPresenter val$this$0 -> k
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    655:656:boolean onForwardingStarted() -> b
    664:669:boolean onForwardingStopped() -> c
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> a.c.h.c$e:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> n
    720:724:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:734:void onDismiss() -> e
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> a.c.h.c$f:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
    760:761:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    765:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    774:781:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> a.c.h.c$g:
    int openSubMenuId -> b
    615:615:void <clinit>() -> <clinit>
    598:599:void <init>() -> <init>
    601:603:void <init>(android.os.Parcel) -> <init>
    607:607:int describeContents() -> describeContents
    612:613:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> a.c.h.c$g$a:
    616:616:void <init>() -> <init>
    616:616:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    619:619:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    616:616:java.lang.Object[] newArray(int) -> newArray
    624:624:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    int MIN_CELL_SIZE -> o
    android.content.Context mPopupContext -> c
    int mGeneratedItemPadding -> l
    boolean mFormatItems -> i
    int mFormatItemsWidth -> j
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> h
    int mMinCellSize -> k
    java.lang.String TAG -> n
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> g
    int mPopupTheme -> d
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> m
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> f
    boolean mReserveOverflow -> e
    int GENERATED_ITEM_PADDING -> p
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    178:387:void onMeasureExactFormat(int,int) -> a
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> a
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> a
    723:726:void dismissPopupMenus() -> c
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> d
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    700:700:boolean hideOverflowMenu() -> e
    716:716:boolean isOverflowMenuShowPending() -> f
    710:710:boolean isOverflowMenuShowing() -> g
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    572:572:boolean isOverflowReserved() -> h
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> i
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    691:691:boolean showOverflowMenu() -> j
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    141:142:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$a:
    boolean needsDividerAfter() -> a
    boolean needsDividerBefore() -> b
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$b:
    793:794:void <init>() -> <init>
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$c:
    boolean expandable -> f
    int cellsUsed -> d
    boolean preventEdgeOffset -> g
    int extraPixels -> e
    boolean expanded -> h
    boolean isOverflowButton -> c
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
    851:853:void <init>(int,int,boolean) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$d:
    androidx.appcompat.widget.ActionMenuView this$0 -> b
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$e:
androidx.appcompat.widget.ActivityChooserModel -> a.c.h.d:
    boolean mCanReadHistoricalData -> i
    androidx.appcompat.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> g
    int mHistoryMaxSize -> h
    boolean mHistoricalRecordsChanged -> k
    java.lang.String TAG_HISTORICAL_RECORDS -> p
    java.lang.String ATTRIBUTE_ACTIVITY -> r
    java.lang.String ATTRIBUTE_WEIGHT -> t
    java.util.List mActivities -> b
    java.util.Map sDataModelRegistry -> B
    int DEFAULT_ACTIVITY_INFLATION -> w
    java.lang.Object sRegistryLock -> A
    androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> m
    java.lang.String mHistoryFileName -> e
    boolean DEBUG -> n
    boolean mReadShareHistoryCalled -> j
    boolean mReloadActivities -> l
    java.lang.String LOG_TAG -> o
    java.lang.String TAG_HISTORICAL_RECORD -> q
    java.lang.String ATTRIBUTE_TIME -> s
    android.content.Context mContext -> d
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> u
    android.content.Intent mIntent -> f
    java.lang.String HISTORY_FILE_EXTENSION -> y
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> x
    int INVALID_INDEX -> z
    java.util.List mHistoricalRecords -> c
    int DEFAULT_HISTORY_MAX_LENGTH -> v
    java.lang.Object mInstanceLock -> a
    157:223:void <clinit>() -> <clinit>
    346:354:void <init>(android.content.Context,java.lang.String) -> <init>
    330:337:androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> a
    366:373:void setIntent(android.content.Intent) -> a
    395:398:int getActivityCount() -> a
    424:435:int getActivityIndex(android.content.pm.ResolveInfo) -> a
    457:488:android.content.Intent chooseActivity(int) -> a
    497:499:void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener) -> a
    587:595:void setActivitySorter(androidx.appcompat.widget.ActivityChooserModel$ActivitySorter) -> a
    727:735:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> a
    410:413:android.content.pm.ResolveInfo getActivity(int) -> b
    512:517:android.content.pm.ResolveInfo getDefaultActivity() -> b
    532:553:void setDefaultActivity(int) -> c
    630:632:int getHistoryMaxSize() -> c
    612:621:void setHistoryMaxSize(int) -> d
    641:644:int getHistorySize() -> d
    382:384:android.content.Intent getIntent() -> e
    654:661:void ensureConsistentState() -> f
    687:699:boolean loadActivitiesIfNeeded() -> g
    566:567:void persistHistoricalDataIfNeeded() -> h
    742:753:void pruneExcessiveHistoricalRecordsIfNeeded() -> i
    710:717:boolean readHistoricalDataIfNeeded() -> j
    964:971:void readHistoricalDataImpl() -> k
    671:677:boolean sortActivitiesIfNeeded() -> l
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient -> a.c.h.d$a:
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> a.c.h.d$b:
    android.content.pm.ResolveInfo resolveInfo -> b
    float weight -> c
    869:871:void <init>(android.content.pm.ResolveInfo) -> <init>
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    852:852:int compareTo(java.lang.Object) -> compareTo
    880:893:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter -> a.c.h.d$c:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter -> a.c.h.d$d:
    java.util.Map mPackageNameToActivityMap -> a
    float WEIGHT_DECAY_COEFFICIENT -> b
    921:922:void <init>() -> <init>
    927:960:void sort(android.content.Intent,java.util.List,java.util.List) -> a
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> a.c.h.d$e:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    783:784:void <init>(java.lang.String,long,float) -> <init>
    793:797:void <init>(android.content.ComponentName,long,float) -> <init>
    811:834:boolean equals(java.lang.Object) -> equals
    801:806:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener -> a.c.h.d$f:
    boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> a
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> a.c.h.d$g:
    androidx.appcompat.widget.ActivityChooserModel this$0 -> a
    1039:1040:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1054:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    boolean mIsSelectingDefaultActivity -> p
    int mListPopupMaxWidth -> j
    androidx.core.view.ActionProvider mProvider -> k
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> o
    android.database.DataSetObserver mModelDataSetObserver -> l
    boolean mIsAttachedToWindow -> r
    java.lang.String LOG_TAG -> t
    android.widget.ImageView mDefaultActivityButtonImage -> i
    androidx.appcompat.widget.ListPopupWindow mListPopupWindow -> n
    androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    androidx.appcompat.widget.ActivityChooserView$Callbacks mCallbacks -> c
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> m
    android.view.View mActivityChooserContent -> d
    int mDefaultActionButtonContentDescription -> s
    int mInitialActivityCount -> q
    201:202:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    222:297:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    370:371:void showPopupUnchecked(int) -> a
    415:422:boolean dismissPopup() -> a
    431:431:boolean isShowingPopup() -> b
    356:357:boolean showPopup() -> c
    544:572:void updateAppearance() -> d
    484:484:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    528:536:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    436:442:void onAttachedToWindow() -> onAttachedToWindow
    446:459:void onDetachedFromWindow() -> onDetachedFromWindow
    477:481:void onLayout(boolean,int,int,int,int) -> onLayout
    463:473:void onMeasure(int,int) -> onMeasure
    304:309:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    519:520:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    337:339:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    323:324:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    505:506:void setInitialActivityCount(int) -> setInitialActivityCount
    493:494:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    347:348:void setProvider(androidx.core.view.ActionProvider) -> setProvider
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$a:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    135:135:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    139:141:void onChanged() -> onChanged
    144:146:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$b:
    androidx.appcompat.widget.ActivityChooserView this$0 -> b
    149:149:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    152:162:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$c:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    255:255:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    258:260:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$d:
    androidx.appcompat.widget.ActivityChooserView this$0 -> k
    262:262:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    265:265:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    270:271:boolean onForwardingStarted() -> b
    276:277:boolean onForwardingStopped() -> c
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$e:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    286:286:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    289:291:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$f:
    int ITEM_VIEW_TYPE_COUNT -> l
    int ITEM_VIEW_TYPE_ACTIVITY -> j
    int ITEM_VIEW_TYPE_FOOTER -> k
    androidx.appcompat.widget.ActivityChooserView this$0 -> g
    int MAX_ACTIVITY_COUNT_UNLIMITED -> h
    int MAX_ACTIVITY_COUNT_DEFAULT -> i
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    int mMaxActivityCount -> c
    androidx.appcompat.widget.ActivityChooserModel mDataModel -> b
    boolean mShowDefaultActivity -> d
    690:691:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    694:703:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> a
    818:822:void setMaxActivityCount(int) -> a
    829:833:void setShowFooterView(boolean) -> a
    836:836:int getActivityCount() -> a
    849:855:void setShowDefaultActivity(boolean,boolean) -> a
    844:844:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> b
    825:825:android.content.pm.ResolveInfo getDefaultActivity() -> c
    840:840:int getHistorySize() -> d
    858:858:boolean getShowDefaultActivity() -> e
    796:814:int measureContentWidth() -> f
    721:730:int getCount() -> getCount
    735:743:java.lang.Object getItem(int) -> getItem
    751:751:long getItemId(int) -> getItemId
    707:710:int getItemViewType(int) -> getItemViewType
    756:787:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    716:716:int getViewTypeCount() -> getViewTypeCount
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$g:
    androidx.appcompat.widget.ActivityChooserView this$0 -> b
    580:581:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    659:662:void notifyOnDismissListener() -> a
    618:631:void onClick(android.view.View) -> onClick
    652:656:void onDismiss() -> onDismiss
    586:613:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    638:644:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> b
    869:869:void <clinit>() -> <clinit>
    874:878:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:206:boolean tryOnMeasure(int,int) -> a
    248:260:int resolveMinimumHeight(android.view.View) -> a
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> a.c.h.e:
    int[] TINT_ATTRS -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    58:58:void <clinit>() -> <clinit>
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> a.c.h.f:
    androidx.appcompat.widget.TintInfo mTmpInfo -> f
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> d
    androidx.appcompat.widget.TintInfo mBackgroundTint -> e
    android.view.View mView -> a
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> b
    int mBackgroundResId -> c
    41:44:void <init>(android.view.View) -> <init>
    47:71:void loadFromAttributes(android.util.AttributeSet,int) -> a
    75:81:void onSetBackgroundResource(int) -> a
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    118:135:void applySupportBackgroundTint() -> a
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> a
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> b
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> b
    173:192:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> b
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> c
    151:163:boolean shouldApplyFrameworkTintUsingColorFilter() -> d
androidx.appcompat.widget.AppCompatButton -> a.c.h.g:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:163:void drawableStateChanged() -> drawableStateChanged
    324:331:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    308:315:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    292:299:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    340:347:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    274:283:int getAutoSizeTextType() -> getAutoSizeTextType
    122:122:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    150:150:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    175:177:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    181:183:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    187:191:void onLayout(boolean,int,int,int,int) -> onLayout
    206:210:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    238:247:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    256:263:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    219:226:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    92:96:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    84:88:void setBackgroundResource(int) -> setBackgroundResource
    371:373:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    360:363:void setSupportAllCaps(boolean) -> setSupportAllCaps
    107:110:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    135:138:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    167:171:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    195:202:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> a.c.h.h:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:231:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:174:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:202:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:212:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:220:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    159:162:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:190:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> a.c.h.i:
    int[] TINT_ATTRS -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    40:40:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:86:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:70:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:102:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:78:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> a.c.h.j:
    android.content.res.ColorStateList mButtonTintList -> b
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    android.widget.CompoundButton mView -> a
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    52:54:void <init>(android.widget.CompoundButton) -> <init>
    57:94:void loadFromAttributes(android.util.AttributeSet,int) -> a
    98:102:void setSupportButtonTintList(android.content.res.ColorStateList) -> a
    109:113:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> a
    130:148:void applyButtonTint() -> a
    151:159:int getCompoundPaddingLeft(int) -> a
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> b
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> c
    120:127:void onSetButtonDrawable() -> d
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface -> a.c.h.j$a:
    void setButtonDrawable(android.graphics.drawable.Drawable) -> a
androidx.appcompat.widget.AppCompatDrawableManager -> a.c.h.k:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> d
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
    java.lang.String TAG -> b
    boolean DEBUG -> c
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> e
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> a
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    415:414:void onConfigurationChanged(android.content.Context) -> a
    420:420:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> a
    425:425:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    433:434:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    397:396:androidx.appcompat.widget.AppCompatDrawableManager get() -> b
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> b
    54:53:void preload() -> c
androidx.appcompat.widget.AppCompatDrawableManager$1 -> a.c.h.k$a:
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    57:126:void <init>() -> <init>
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> a
    232:240:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
    244:249:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> a
    291:296:boolean arrayContains(int[],int) -> a
    303:317:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> a
    333:376:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    381:387:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> a
    146:146:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> b
    152:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> b
    254:285:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> b
    134:134:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> c
    183:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> d
androidx.appcompat.widget.AppCompatEditText -> a.c.h.l:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:180:void drawableStateChanged() -> drawableStateChanged
    139:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:231:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:113:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:105:void setBackgroundResource(int) -> setBackgroundResource
    202:204:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:127:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:155:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:188:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:214:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> a.c.h.m:
    43:44:void <init>() -> <init>
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> a
androidx.appcompat.widget.AppCompatImageButton -> a.c.h.n:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:207:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:235:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> a.c.h.o:
    androidx.appcompat.widget.TintInfo mTmpInfo -> d
    android.widget.ImageView mView -> a
    androidx.appcompat.widget.TintInfo mInternalImageTint -> b
    androidx.appcompat.widget.TintInfo mImageTint -> c
    45:47:void <init>(android.widget.ImageView) -> <init>
    50:81:void loadFromAttributes(android.util.AttributeSet,int) -> a
    85:96:void setImageResource(int) -> a
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> a
    137:158:void applySupportImageTint() -> a
    161:171:void setInternalImageTint(android.content.res.ColorStateList) -> a
    196:215:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> a
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> b
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> b
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> c
    99:106:boolean hasOverlappingRendering() -> d
    174:186:boolean shouldApplyFrameworkTintUsingColorFilter() -> e
androidx.appcompat.widget.AppCompatImageView -> a.c.h.p:
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:162:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:190:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:218:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:246:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> a.c.h.q:
    int[] TINT_ATTRS -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    55:55:void <clinit>() -> <clinit>
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:133:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:161:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    90:91:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> a.c.h.r:
    boolean mOverlapAnchor -> a
    boolean COMPAT_OVERLAP_ANCHOR -> b
    34:34:void <clinit>() -> <clinit>
    40:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> a
    90:95:void setSupportOverlapAnchor(boolean) -> a
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> a.c.h.s:
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> a
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    145:145:android.graphics.Bitmap getSampleTile() -> a
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> b
androidx.appcompat.widget.AppCompatRadioButton -> a.c.h.t:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:232:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:213:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:221:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    160:163:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:191:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> a.c.h.u:
    androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> b
    40:41:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:55:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> a.c.h.v:
    androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> b
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:63:void drawableStateChanged() -> drawableStateChanged
    67:69:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:54:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> a.c.h.w:
    android.graphics.drawable.Drawable mTickMark -> e
    boolean mHasTickMarkTintMode -> i
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    android.widget.SeekBar mView -> d
    42:44:void <init>(android.widget.SeekBar) -> <init>
    48:74:void loadFromAttributes(android.util.AttributeSet,int) -> a
    77:93:void setTickMark(android.graphics.drawable.Drawable) -> a
    101:105:void setTickMarkTintList(android.content.res.ColorStateList) -> a
    113:117:void setTickMarkTintMode(android.graphics.PorterDuff$Mode) -> a
    162:182:void drawTickMarks(android.graphics.Canvas) -> a
    151:156:void drawableStateChanged() -> b
    97:97:android.graphics.drawable.Drawable getTickMark() -> c
    109:109:android.content.res.ColorStateList getTickMarkTintList() -> d
    121:121:android.graphics.PorterDuff$Mode getTickMarkTintMode() -> e
    145:148:void jumpDrawablesToCurrentState() -> f
    125:142:void applyTickMarkTint() -> g
androidx.appcompat.widget.AppCompatSpinner -> a.c.h.x:
    int MODE_DROPDOWN -> n
    int MODE_THEME -> o
    android.content.Context mPopupContext -> c
    int MODE_DIALOG -> m
    int MAX_ITEMS_MEASURED -> k
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    int mDropDownWidth -> h
    java.lang.String TAG -> l
    androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup -> g
    android.graphics.Rect mTempRect -> i
    boolean mPopupSet -> f
    int[] ATTRS_ANDROID_SPINNERMODE -> j
    android.widget.SpinnerAdapter mTempAdapter -> e
    78:78:void <clinit>() -> <clinit>
    114:115:void <init>(android.content.Context) -> <init>
    129:130:void <init>(android.content.Context,int) -> <init>
    140:141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:156:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:175:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    203:294:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    550:590:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    599:604:void showPopup() -> a
    543:547:void drawableStateChanged() -> drawableStateChanged
    365:370:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:344:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:389:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:325:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:508:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:537:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:416:void onDetachedFromWindow() -> onDetachedFromWindow
    428:437:void onMeasure(int,int) -> onMeasure
    617:643:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:612:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:407:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:481:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:473:void setBackgroundResource(int) -> setBackgroundResource
    349:355:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:335:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:380:void setDropDownWidth(int) -> setDropDownWidth
    306:311:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:316:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:460:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:496:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:525:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.AppCompatSpinner$1 -> a.c.h.x$a:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> l
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup -> k
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    265:268:boolean onForwardingStarted() -> b
androidx.appcompat.widget.AppCompatSpinner$2 -> a.c.h.x$b:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> b
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:638:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> a.c.h.x$c:
    android.widget.ListAdapter mListAdapter -> c
    androidx.appcompat.app.AlertDialog mPopup -> b
    java.lang.CharSequence mPrompt -> d
    androidx.appcompat.widget.AppCompatSpinner this$0 -> e
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    864:864:boolean isShowing() -> a
    869:870:void setAdapter(android.widget.ListAdapter) -> a
    874:875:void setPromptText(java.lang.CharSequence) -> a
    884:899:void show(int,int) -> a
    922:923:void setHorizontalOffset(int) -> a
    917:918:void setVerticalOffset(int) -> b
    937:937:int getHorizontalOffset() -> b
    932:932:int getVerticalOffset() -> c
    942:943:void setHorizontalOriginalOffset(int) -> c
    947:947:int getHorizontalOriginalOffset() -> d
    856:860:void dismiss() -> dismiss
    927:927:android.graphics.drawable.Drawable getBackground() -> e
    879:879:java.lang.CharSequence getHintText() -> f
    903:908:void onClick(android.content.DialogInterface,int) -> onClick
    912:913:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> a.c.h.x$d:
    android.widget.ListAdapter mListAdapter -> c
    android.widget.SpinnerAdapter mAdapter -> b
    693:715:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:772:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:739:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    792:792:int getItemViewType(int) -> getItemViewType
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    797:797:int getViewTypeCount() -> getViewTypeCount
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:786:boolean isEnabled(int) -> isEnabled
    750:753:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:760:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> a.c.h.x$e:
    int mOriginalHorizontalOffset -> Y
    androidx.appcompat.widget.AppCompatSpinner this$0 -> Z
    android.graphics.Rect mVisibleRect -> X
    java.lang.CharSequence mHintText -> V
    android.widget.ListAdapter mAdapter -> W
    958:976:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> a
    980:982:void setAdapter(android.widget.ListAdapter) -> a
    992:993:void setPromptText(java.lang.CharSequence) -> a
    1035:1086:void show(int,int) -> a
    1097:1098:void setHorizontalOriginalOffset(int) -> c
    1092:1092:boolean isVisibleToUser(android.view.View) -> d
    1102:1102:int getHorizontalOriginalOffset() -> d
    986:986:java.lang.CharSequence getHintText() -> f
    996:1031:void computeContentWidth() -> y
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> a.c.h.x$e$a:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> c
    androidx.appcompat.widget.AppCompatSpinner val$this$0 -> b
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:974:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> a.c.h.x$e$b:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1073:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> a.c.h.x$e$c:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> b
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> c
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1083:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> a.c.h.x$f:
    boolean mShowDropdown -> b
    663:663:void <clinit>() -> <clinit>
    649:650:void <init>(android.os.Parcelable) -> <init>
    653:655:void <init>(android.os.Parcel) -> <init>
    659:661:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> a.c.h.x$f$a:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> a.c.h.x$g:
    boolean isShowing() -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setHorizontalOffset(int) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show(int,int) -> a
    int getHorizontalOffset() -> b
    void setVerticalOffset(int) -> b
    int getVerticalOffset() -> c
    void setHorizontalOriginalOffset(int) -> c
    int getHorizontalOriginalOffset() -> d
    android.graphics.drawable.Drawable getBackground() -> e
    java.lang.CharSequence getHintText() -> f
androidx.appcompat.widget.AppCompatTextClassifierHelper -> a.c.h.y:
    android.widget.TextView mTextView -> a
    android.view.textclassifier.TextClassifier mTextClassifier -> b
    42:44:void <init>(android.widget.TextView) -> <init>
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> a
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> a
androidx.appcompat.widget.AppCompatTextHelper -> a.c.h.z:
    int TEXT_FONT_WEIGHT_UNSPECIFIED -> n
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
    boolean mAsyncFontPending -> m
    int SANS -> o
    int mStyle -> j
    int mFontWeight -> k
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
    android.graphics.Typeface mFontTypeface -> l
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
    int SERIF -> p
    int MONOSPACE -> q
    74:77:void <init>(android.widget.TextView) -> <init>
    81:331:void loadFromAttributes(android.util.AttributeSet,int) -> a
    337:341:void setTypefaceByCallback(android.graphics.Typeface) -> a
    347:348:void runOnUiThread(java.lang.Runnable) -> a
    407:461:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> a
    485:525:void onSetTextAppearance(android.content.Context,int) -> a
    528:529:void setAllCaps(boolean) -> a
    536:551:void applyCompoundDrawablesTints() -> a
    554:557:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> a
    561:568:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> a
    574:577:void onLayout(boolean,int,int,int,int) -> a
    582:587:void setTextSize(int,float) -> a
    606:607:void setAutoSizeTextTypeWithDefaults(int) -> a
    614:616:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> a
    620:621:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> a
    650:656:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> a
    664:670:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> a
    685:717:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    592:593:void autoSizeText() -> b
    602:603:void setTextSizeInternal(int,float) -> b
    637:637:int getAutoSizeMaxTextSize() -> c
    633:633:int getAutoSizeMinTextSize() -> d
    629:629:int getAutoSizeStepGranularity() -> e
    641:641:int[] getAutoSizeTextAvailableSizes() -> f
    625:625:int getAutoSizeTextType() -> g
    646:646:android.content.res.ColorStateList getCompoundDrawableTintList() -> h
    660:660:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> i
    598:598:boolean isAutoSizeEnabled() -> j
    532:533:void onSetCompoundDrawables() -> k
    673:679:void setCompoundTints() -> l
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> a.c.h.z$a:
    java.lang.ref.WeakReference mParent -> a
    int mFontWeight -> b
    int mStyle -> c
    379:383:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int) -> <init>
    403:403:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    387:398:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> a.c.h.z$a$a:
    android.graphics.Typeface mTypeface -> c
    java.lang.ref.WeakReference mParent -> b
    androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0 -> d
    359:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface) -> <init>
    366:371:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> a.c.h.a0:
    91:92:void <init>(android.content.Context) -> <init>
    95:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    99:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    482:491:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    193:200:void drawableStateChanged() -> drawableStateChanged
    365:372:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    346:353:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    327:334:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    384:391:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    306:315:int getAutoSizeTextType() -> getAutoSizeTextType
    422:422:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    427:427:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    151:151:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    179:179:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    634:634:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    677:677:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    495:496:java.lang.CharSequence getText() -> getText
    523:524:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    454:454:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    396:396:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    204:208:void onLayout(boolean,int,int,int,int) -> onLayout
    550:552:void onMeasure(int,int) -> onMeasure
    223:227:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    263:272:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    285:292:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    240:247:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    121:125:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    113:117:void setBackgroundResource(int) -> setBackgroundResource
    557:561:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    567:571:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    599:603:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    609:618:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:580:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    584:593:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    441:443:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    402:407:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    412:418:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    432:433:void setLineHeight(int) -> setLineHeight
    478:479:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    136:139:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    164:167:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    657:659:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    697:699:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    185:189:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    505:507:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    542:546:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    465:466:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    212:219:void setTextSize(int,float) -> setTextSize
    703:709:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> a.c.h.b0:
    int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP -> n
    int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX -> o
    int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP -> m
    java.lang.String TAG -> k
    java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache -> q
    float mAutoSizeMaxTextSizeInPx -> e
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeStepGranularityInPx -> c
    android.content.Context mContext -> j
    android.graphics.RectF TEMP_RECTF -> l
    int mAutoSizeTextType -> a
    int[] mAutoSizeTextSizesInPx -> f
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> p
    float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE -> r
    boolean mHasPresetAutoSizeValues -> g
    android.widget.TextView mTextView -> i
    int VERY_WIDE -> s
    boolean mNeedsAutoSizeText -> b
    android.text.TextPaint mTempTextPaint -> h
    63:76:void <clinit>() -> <clinit>
    105:108:void <init>(android.widget.TextView) -> <init>
    111:186:void loadFromAttributes(android.util.AttributeSet,int) -> a
    271:287:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> a
    314:344:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> a
    427:437:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> a
    453:477:int[] cleanupAutoSizePresetSizes(int[]) -> a
    491:492:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> a
    546:582:void autoSizeText() -> a
    596:601:void setTextSizeInternal(int,float) -> a
    604:635:void setRawTextSize(float) -> a
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> a
    667:674:void initTempTextPaint(int) -> a
    679:684:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> a
    689:717:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> a
    771:778:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> a
    811:819:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> a
    846:858:java.lang.reflect.Field getTextViewField(java.lang.String) -> a
    204:234:void setAutoSizeTextTypeWithDefaults(int) -> b
    410:410:int getAutoSizeMaxTextSize() -> b
    724:748:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> b
    754:760:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> b
    788:802:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> b
    826:839:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> b
    394:394:int getAutoSizeMinTextSize() -> c
    378:378:int getAutoSizeStepGranularity() -> d
    423:423:int[] getAutoSizeTextAvailableSizes() -> e
    364:364:int getAutoSizeTextType() -> f
    870:870:boolean isAutoSizeEnabled() -> g
    585:591:void clearAutoSizeConfiguration() -> h
    516:536:boolean setupAutoSizeText() -> i
    440:448:boolean setupAutoSizeUniformPresetSizesConfiguration() -> j
    879:879:boolean supportsAutoSizeText() -> k
androidx.appcompat.widget.AppCompatToggleButton -> a.c.h.c0:
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    38:39:void <init>(android.content.Context) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    int mMinimumHeight -> d
    int PEEK_BUTTON_DP -> e
    boolean mAllowStacking -> b
    int mLastWidthSize -> c
    51:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    144:149:int getNextVisibleChildIndex(int) -> a
    175:175:boolean isStacked() -> a
    154:154:int getMinimumHeight() -> getMinimumHeight
    72:141:void onMeasure(int,int) -> onMeasure
    61:68:void setAllowStacking(boolean) -> setAllowStacking
    158:172:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    android.util.TypedValue mFixedWidthMajor -> d
    android.util.TypedValue mMinWidthMinor -> c
    android.util.TypedValue mMinWidthMajor -> b
    android.graphics.Rect mDecorPadding -> h
    androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener -> i
    android.util.TypedValue mFixedHeightMinor -> g
    android.util.TypedValue mFixedHeightMajor -> f
    android.util.TypedValue mFixedWidthMinor -> e
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> a
    91:95:void setDecorPadding(int,int,int,int) -> a
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$a:
    void onAttachedFromWindow() -> a
androidx.appcompat.widget.DecorContentParent -> a.c.h.d0:
    void initFeature(int) -> a
    boolean isOverflowMenuShowPending() -> a
    void saveToolbarHierarchyState(android.util.SparseArray) -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    boolean isOverflowMenuShowing() -> b
    void restoreToolbarHierarchyState(android.util.SparseArray) -> b
    boolean hideOverflowMenu() -> c
    boolean showOverflowMenu() -> d
    void setMenuPrepared() -> e
    boolean hasIcon() -> f
    boolean hasLogo() -> g
    boolean canShowOverflowMenu() -> h
    void dismissPopups() -> i
androidx.appcompat.widget.DecorToolbar -> a.c.h.e0:
    boolean isOverflowMenuShowPending() -> a
    void saveHierarchyState(android.util.SparseArray) -> a
    void setCustomView(android.view.View) -> a
    void setDefaultNavigationContentDescription(int) -> a
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> a
    void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> a
    void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> a
    void setHomeButtonEnabled(boolean) -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    void setNavigationContentDescription(java.lang.CharSequence) -> a
    androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    boolean isOverflowMenuShowing() -> b
    void restoreHierarchyState(android.util.SparseArray) -> b
    void setCollapsible(boolean) -> b
    void setDropdownSelectedPosition(int) -> b
    void setLogo(android.graphics.drawable.Drawable) -> b
    void setSubtitle(java.lang.CharSequence) -> b
    boolean hideOverflowMenu() -> c
    void setNavigationContentDescription(int) -> c
    void setNavigationIcon(android.graphics.drawable.Drawable) -> c
    void animateToVisibility(int) -> d
    boolean showOverflowMenu() -> d
    void setMenuPrepared() -> e
    void setNavigationMode(int) -> e
    boolean hasIcon() -> f
    void setDisplayOptions(int) -> f
    boolean hasLogo() -> g
    void setNavigationIcon(int) -> g
    boolean canShowOverflowMenu() -> h
    void dismissPopupMenus() -> i
    android.view.View getCustomView() -> j
    int getDisplayOptions() -> k
    int getDropdownSelectedPosition() -> l
    android.view.Menu getMenu() -> m
    android.view.ViewGroup getViewGroup() -> n
    boolean hasEmbeddedTabs() -> o
    android.content.Context getContext() -> p
    int getNavigationMode() -> q
    int getVisibility() -> r
    void initProgress() -> s
    boolean hasExpandedActionView() -> t
    int getDropdownItemCount() -> u
    boolean isTitleTruncated() -> v
    void initIndeterminateProgress() -> w
    java.lang.CharSequence getSubtitle() -> x
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    40:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:49:void <init>(android.content.Context) -> <init>
    53:80:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> a.c.h.f0:
    java.lang.Class sInsetsClazz -> e
    java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME -> f
    int[] EMPTY_STATE_SET -> b
    int[] CHECKED_STATE_SET -> a
    java.lang.String TAG -> c
    android.graphics.Rect INSETS_NONE -> d
    45:64:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    142:176:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> a
    200:201:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
    131:135:void fixDrawable(android.graphics.drawable.Drawable) -> b
    184:194:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> c
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> d
androidx.appcompat.widget.DropDownListView -> a.c.h.g0:
    boolean mListSelectionHidden -> j
    androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation -> m
    boolean mHijackFocus -> k
    boolean mDrawsInPressedState -> l
    int mSelectionBottomPadding -> f
    int mMotionPosition -> g
    int mSelectionTopPadding -> d
    int mSelectionRightPadding -> e
    int mSelectionLeftPadding -> c
    android.graphics.Rect mSelectorRect -> b
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> n
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> o
    java.lang.reflect.Field mIsChildViewEnabled -> h
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> i
    int INVALID_POSITION -> p
    int NO_POSITION -> q
    118:128:void <init>(android.content.Context,boolean) -> <init>
    229:231:int lookForSelectablePosition(int,boolean) -> a
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    542:544:void clickPressedItem(android.view.View,int) -> a
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> a
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> a
    604:626:void positionSelectorCompat(int,android.view.View) -> a
    629:643:void clearPressedItem() -> a
    646:690:void setPressedItem(android.view.View,int,float,float) -> a
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> b
    693:693:boolean touchModeDrawsInPressedStateCompat() -> b
    558:562:void updateSelectorStateCompat() -> c
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> a.c.h.g0$a:
    boolean mEnabled -> b
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    387:388:void setEnabled(boolean) -> a
    400:403:void draw(android.graphics.Canvas) -> draw
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> a.c.h.g0$b:
    androidx.appcompat.widget.DropDownListView this$0 -> b
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> a
    716:717:void post() -> b
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsViewGroup -> a.c.h.h0:
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> a.c.h.h0$a:
    void onFitSystemWindows(android.graphics.Rect) -> a
androidx.appcompat.widget.ForwardingListener -> a.c.h.i0:
    java.lang.Runnable mTriggerLongPress -> g
    java.lang.Runnable mDisallowIntercept -> f
    int mActivePointerId -> i
    float mScaledTouchSlop -> b
    int mLongPressTimeout -> d
    boolean mForwarding -> h
    android.view.View mSrc -> e
    int[] mTmpLocation -> j
    int mTapTimeout -> c
    68:78:void <init>(android.view.View) -> <init>
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    259:262:boolean onTouchForwarded(android.view.MotionEvent) -> a
    288:288:boolean pointInView(android.view.View,float,float,float) -> a
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> a
    139:143:boolean onForwardingStarted() -> b
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> b
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> b
    156:160:boolean onForwardingStopped() -> c
    226:232:void onLongPress() -> d
    216:223:void clearCallbacks() -> e
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> a.c.h.i0$a:
    androidx.appcompat.widget.ForwardingListener this$0 -> b
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> a.c.h.i0$b:
    androidx.appcompat.widget.ForwardingListener this$0 -> b
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> a.c.h.j0:
    149:150:void <init>(android.content.Context) -> <init>
    153:154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    157:189:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    326:364:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    299:323:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    367:370:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    373:376:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1321:1340:void forceUniformHeight(int,int) -> forceUniformHeight
    899:918:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1743:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:432:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1351:1351:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    1393:1393:int getLocationOffset(android.view.View) -> getLocationOffset
    1405:1405:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    509:509:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    570:584:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    385:385:boolean isBaselineAligned() -> isBaselineAligned
    408:408:boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    1525:1646:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1430:1510:void layoutVertical(int,int,int,int) -> layoutVertical
    1381:1383:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    932:1315:void measureHorizontal(int,int) -> measureHorizontal
    1362:1362:int measureNullChild(int) -> measureNullChild
    599:895:void measureVertical(int,int) -> measureVertical
    287:296:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1762:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1768:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1415:void onLayout(boolean,int,int,int,int) -> onLayout
    554:559:void onMeasure(int,int) -> onMeasure
    396:397:void setBaselineAligned(boolean) -> setBaselineAligned
    492:494:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1649:1650:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    236:249:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:262:void setDividerPadding(int) -> setDividerPadding
    1683:1695:void setGravity(int) -> setGravity
    1708:1713:void setHorizontalGravity(int) -> setHorizontalGravity
    422:423:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1662:void setOrientation(int) -> setOrientation
    199:203:void setShowDividers(int) -> setShowDividers
    1716:1721:void setVerticalGravity(int) -> setVerticalGravity
    549:550:void setWeightSum(float) -> setWeightSum
    207:207:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$DividerMode -> a.c.h.j0$a:
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> a.c.h.j0$b:
    float weight -> a
    int gravity -> b
    1793:1801:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1807:1809:void <init>(int,int) -> <init>
    1822:1824:void <init>(int,int,float) -> <init>
    1830:1831:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1837:1838:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1847:1851:void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) -> <init>
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode -> a.c.h.j0$c:
androidx.appcompat.widget.ListPopupWindow -> a.c.h.k0:
    boolean mOverlapAnchorSet -> m
    int mDropDownGravity -> n
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> B
    int POSITION_PROMPT_ABOVE -> O
    java.lang.String TAG -> I
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> M
    boolean mDropDownAlwaysVisible -> o
    boolean DEBUG -> J
    int EXPAND_LIST_TIMEOUT -> K
    androidx.appcompat.widget.DropDownListView mDropDownList -> d
    int mDropDownVerticalOffset -> h
    boolean mIsAnimatedFromAnchor -> k
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> x
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> y
    int mDropDownWidth -> f
    android.view.View mPromptView -> r
    android.graphics.Rect mEpicenterBounds -> F
    android.graphics.drawable.Drawable mDropDownListHighlight -> v
    android.os.Handler mHandler -> D
    int INPUT_METHOD_NEEDED -> T
    boolean mModal -> G
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> A
    int WRAP_CONTENT -> R
    int mPromptPosition -> s
    int POSITION_PROMPT_BELOW -> P
    int mListItemExpandMaximum -> q
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> z
    java.lang.reflect.Method sSetClipToWindowEnabledMethod -> L
    android.database.DataSetObserver mObserver -> t
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> N
    android.content.Context mContext -> b
    boolean mForceIgnoreOutsideTouch -> p
    boolean mDropDownVerticalOffsetSet -> j
    int mDropDownWindowLayoutType -> i
    boolean mOverlapAnchor -> l
    int mDropDownHorizontalOffset -> g
    android.graphics.Rect mTempRect -> E
    int mDropDownHeight -> e
    android.view.View mDropDownAnchorView -> u
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> w
    android.widget.ListAdapter mAdapter -> c
    android.widget.PopupWindow mPopup -> H
    java.lang.Runnable mShowDropDownRunnable -> C
    int INPUT_METHOD_NOT_NEEDED -> U
    int INPUT_METHOD_FROM_FOCUSABLE -> S
    int MATCH_PARENT -> Q
    84:109:void <clinit>() -> <clinit>
    225:226:void <init>(android.content.Context) -> <init>
    236:237:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:250:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:279:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    288:301:void setAdapter(android.widget.ListAdapter) -> a
    374:375:void setDropDownAlwaysVisible(boolean) -> a
    417:418:void setListSelector(android.graphics.drawable.Drawable) -> a
    487:488:void setHorizontalOffset(int) -> a
    518:519:void setEpicenterBounds(android.graphics.Rect) -> a
    620:621:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    631:632:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> a
    786:787:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    861:861:boolean isShowing() -> a
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    977:1057:boolean onKeyDown(int,android.view.KeyEvent) -> a
    1141:1141:android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> a
    1446:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    358:359:void setForceIgnoreOutsideTouch(boolean) -> b
    471:472:void setAnchorView(android.view.View) -> b
    478:478:int getHorizontalOffset() -> b
    506:508:void setVerticalOffset(int) -> b
    1096:1117:boolean onKeyPreIme(int,android.view.KeyEvent) -> b
    336:338:void setModal(boolean) -> c
    494:497:int getVerticalOffset() -> c
    641:649:void setPromptView(android.view.View) -> c
    1072:1081:boolean onKeyUp(int,android.view.KeyEvent) -> c
    880:889:boolean performItemClick(int) -> d
    1339:1341:void setOverlapAnchor(boolean) -> d
    773:778:void dismiss() -> dismiss
    424:424:android.graphics.drawable.Drawable getBackground() -> e
    442:443:void setAnimationStyle(int) -> e
    1432:1443:void setPopupClipToScreenEnabled(boolean) -> e
    566:573:void setContentWidth(int) -> f
    539:540:void setDropDownGravity(int) -> g
    947:947:android.widget.ListView getListView() -> g
    591:597:void setHeight(int) -> h
    847:854:void clearListSelection() -> h
    461:461:android.view.View getAnchorView() -> i
    812:813:void setInputMethodMode(int) -> i
    452:452:int getAnimationStyle() -> j
    961:962:void setListItemExpandMax(int) -> j
    313:314:void setPromptPosition(int) -> k
    529:529:android.graphics.Rect getEpicenterBounds() -> k
    579:579:int getHeight() -> l
    831:840:void setSelection(int) -> l
    398:399:void setSoftInputMode(int) -> m
    821:821:int getInputMethodMode() -> m
    323:323:int getPromptPosition() -> n
    556:557:void setWidth(int) -> n
    609:610:void setWindowLayoutType(int) -> o
    896:899:java.lang.Object getSelectedItem() -> o
    922:925:long getSelectedItemId() -> p
    1428:1428:boolean isConfirmKey(int) -> p
    909:912:int getSelectedItemPosition() -> q
    935:938:android.view.View getSelectedView() -> r
    408:408:int getSoftInputMode() -> s
    433:434:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    664:766:void show() -> show
    546:546:int getWidth() -> t
    384:384:boolean isDropDownAlwaysVisible() -> u
    869:869:boolean isInputMethodNotNeeded() -> v
    346:346:boolean isModal() -> w
    655:656:void postShow() -> x
    1157:1298:int buildDropDown() -> y
    790:797:void removePromptView() -> z
androidx.appcompat.widget.ListPopupWindow$1 -> a.c.h.k0$a:
    androidx.appcompat.widget.ListPopupWindow this$0 -> k
    1141:1141:void <init>(androidx.appcompat.widget.ListPopupWindow,android.view.View) -> <init>
    1141:1141:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    1144:1144:androidx.appcompat.widget.ListPopupWindow getPopup() -> a
androidx.appcompat.widget.ListPopupWindow$2 -> a.c.h.k0$b:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1176:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> a.c.h.k0$c:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1192:1199:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1203:1203:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> a.c.h.k0$d:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1362:1363:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1368:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> a.c.h.k0$e:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1344:1345:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1353:void onChanged() -> onChanged
    1357:1358:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> a.c.h.k0$f:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1408:1409:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1415:1415:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1419:1424:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> a.c.h.k0$g:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1387:1388:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1403:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> a.c.h.k0$h:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1372:1373:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1383:void run() -> run
androidx.appcompat.widget.MenuItemHoverListener -> a.c.h.l0:
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.widget.MenuPopupWindow -> a.c.h.m0:
    java.lang.String TAG -> W
    java.lang.reflect.Method sSetTouchModalMethod -> X
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> V
    60:67:void <clinit>() -> <clinit>
    72:73:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    77:79:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    83:86:void setEnterTransition(java.lang.Object) -> a
    95:96:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> a
    119:122:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    89:92:void setExitTransition(java.lang.Object) -> b
    127:130:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
    103:114:void setTouchModal(boolean) -> e
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> a.c.h.m0$a:
    android.view.MenuItem mHoveredMenuItem -> u
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> t
    int mAdvanceKey -> r
    int mRetreatKey -> s
    144:156:void <init>(android.content.Context,boolean) -> <init>
    135:135:int lookForSelectablePosition(int,boolean) -> a
    135:135:int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    135:135:boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    163:164:void clearSelection() -> a
    135:135:boolean hasFocus() -> hasFocus
    135:135:boolean hasWindowFocus() -> hasWindowFocus
    135:135:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    190:231:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    168:184:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    135:135:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    159:160:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    135:135:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.PopupMenu -> a.c.h.n0:
    android.content.Context mContext -> a
    androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener -> e
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.view.menu.MenuPopupHelper mPopup -> d
    android.view.View mAnchor -> c
    android.view.View$OnTouchListener mDragListener -> g
    androidx.appcompat.widget.PopupMenu$OnDismissListener mOnDismissListener -> f
    68:69:void <init>(android.content.Context,android.view.View) -> <init>
    83:84:void <init>(android.content.Context,android.view.View,int) -> <init>
    104:133:void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    229:230:void inflate(int) -> a
    247:248:void dismiss() -> a
    257:258:void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener) -> a
    266:267:void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener) -> a
    145:146:void setGravity(int) -> b
    174:196:android.view.View$OnTouchListener getDragToOpenListener() -> b
    153:153:int getGravity() -> c
    209:209:android.view.Menu getMenu() -> d
    219:219:android.view.MenuInflater getMenuInflater() -> e
    306:309:android.widget.ListView getMenuListView() -> f
    238:239:void show() -> g
androidx.appcompat.widget.PopupMenu$1 -> a.c.h.n0$a:
    androidx.appcompat.widget.PopupMenu this$0 -> b
    109:109:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    112:115:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    120:120:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.PopupMenu$2 -> a.c.h.n0$b:
    androidx.appcompat.widget.PopupMenu this$0 -> b
    125:125:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    128:131:void onDismiss() -> onDismiss
androidx.appcompat.widget.PopupMenu$3 -> a.c.h.n0$c:
    androidx.appcompat.widget.PopupMenu this$0 -> k
    175:175:void <init>(androidx.appcompat.widget.PopupMenu,android.view.View) -> <init>
    191:191:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> a
    178:179:boolean onForwardingStarted() -> b
    184:185:boolean onForwardingStopped() -> c
androidx.appcompat.widget.PopupMenu$OnDismissListener -> a.c.h.n0$d:
    void onDismiss(androidx.appcompat.widget.PopupMenu) -> a
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener -> a.c.h.n0$e:
androidx.appcompat.widget.ResourceManagerInternal -> a.c.h.o0:
    java.lang.String TAG -> h
    boolean DEBUG -> i
    java.lang.String SKIP_DRAWABLE_TAG -> k
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
    java.lang.String PLATFORM_VD_CLAZZ -> l
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> m
    android.util.TypedValue mTypedValue -> e
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> j
    boolean mHasCheckedVectorDrawableSetup -> f
    java.util.WeakHashMap mDrawableCaches -> d
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> n
    java.util.WeakHashMap mTintLists -> a
    androidx.collection.ArrayMap mDelegates -> b
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    94:93:androidx.appcompat.widget.ResourceManagerInternal get() -> a
    105:110:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> a
    128:127:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> a
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    137:136:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    159:158:void onConfigurationChanged(android.content.Context) -> a
    167:167:long createCacheKey(android.util.TypedValue) -> a
    200:225:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> a
    315:314:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> a
    336:335:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> a
    351:350:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> a
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    367:371:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> a
    380:385:boolean arrayContains(int[],int) -> a
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> a
    417:426:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> a
    451:471:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    475:476:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> a
    485:484:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    513:513:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> a
    374:377:void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> b
    394:393:android.content.res.ColorStateList getTintList(android.content.Context,int) -> b
    497:507:void checkVectorDrawableSetup(android.content.Context) -> b
    172:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> c
    408:412:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> d
    229:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> e
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> a.c.h.o0$a:
    552:552:void <init>() -> <init>
    557:561:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> a.c.h.o0$b:
    535:536:void <init>() -> <init>
    542:546:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> a.c.h.o0$c:
    431:432:void <init>(int) -> <init>
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> a
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> a
    443:446:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> b
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> a.c.h.o0$d:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> a.c.h.o0$e:
    android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
    android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> a
    android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> a
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> b
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> a.c.h.o0$f:
    518:519:void <init>() -> <init>
    525:529:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourcesWrapper -> a.c.h.p0:
    android.content.res.Resources mResources -> a
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> a.c.h.q0:
    int UNDEFINED -> i
    int mExplicitRight -> f
    int mEnd -> d
    boolean mIsRtl -> g
    int mExplicitLeft -> e
    boolean mIsRelative -> h
    int mRight -> b
    int mStart -> c
    int mLeft -> a
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> a
    68:71:void setAbsolute(int,int) -> a
    74:90:void setDirection(boolean) -> a
    39:39:int getLeft() -> b
    55:65:void setRelative(int,int) -> b
    43:43:int getRight() -> c
    47:47:int getStart() -> d
androidx.appcompat.widget.ScrollingTabContainerView -> a.c.h.r0:
    int FADE_DURATION -> o
    androidx.appcompat.widget.LinearLayoutCompat mTabLayout -> d
    int mSelectedTabIndex -> j
    java.lang.String TAG -> m
    int mStackedTabMaxWidth -> h
    int mContentHeight -> i
    android.widget.Spinner mTabSpinner -> e
    int mMaxTabWidth -> g
    android.view.ViewPropertyAnimator mVisibilityAnim -> k
    androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> l
    android.view.animation.Interpolator sAlphaInterpolator -> n
    java.lang.Runnable mTabSelector -> b
    androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> c
    boolean mAllowCollapse -> f
    77:77:void <clinit>() -> <clinit>
    82:93:void <init>(android.content.Context) -> <init>
    260:273:void animateToTab(int) -> a
    310:322:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    325:337:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> a
    360:367:void removeAllTabs() -> a
    214:220:android.widget.Spinner createSpinner() -> b
    235:257:void animateToVisibility(int) -> b
    293:306:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> b
    204:210:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> c
    350:357:void removeTabAt(int) -> c
    146:146:boolean isCollapsed() -> d
    340:347:void updateTab(int) -> d
    154:170:void performCollapse() -> e
    173:179:boolean performExpand() -> f
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> a.c.h.r0$a:
    android.view.View val$tabView -> b
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> c
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> a.c.h.r0$b:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> b
    526:527:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    541:541:long getItemId(int) -> getItemId
    546:551:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> a.c.h.r0$c:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> b
    556:557:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:568:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> a.c.h.r0$d:
    java.lang.String ACCESSIBILITY_CLASS_NAME -> h
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> g
    int[] BG_ATTRS -> b
    android.widget.TextView mTextView -> d
    androidx.appcompat.app.ActionBar$Tab mTab -> c
    android.widget.ImageView mIconView -> e
    android.view.View mCustomView -> f
    394:410:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:415:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> a
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> a
    453:518:void update() -> b
    428:431:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:439:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:450:void onMeasure(int,int) -> onMeasure
    419:424:void setSelected(boolean) -> setSelected
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> a.c.h.r0$e:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> c
    571:572:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    577:579:androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> a
    598:599:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:594:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    584:586:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener -> x
    android.text.TextWatcher mTextWatcher -> b0
    java.lang.CharSequence mOldQueryText -> K
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> D
    java.lang.CharSequence mUserQuery -> L
    android.widget.ImageView mGoButton -> g
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> b
    android.graphics.Rect mSearchSrcTextViewBounds -> l
    int[] mTemp -> n
    android.view.View mSearchEditFrame -> c
    boolean mQueryRefinement -> G
    boolean mIconified -> C
    boolean mExpandedInActionView -> M
    android.content.Intent mVoiceAppSearchIntent -> u
    java.lang.Runnable mReleaseCursorRunnable -> R
    java.lang.String LOG_TAG -> d0
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> V
    java.lang.CharSequence mQueryHint -> F
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> a0
    android.widget.ImageView mSearchButton -> f
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> m
    android.view.View mDropDownAnchor -> j
    android.view.View$OnClickListener mOnClickListener -> T
    boolean mClearingFocus -> H
    int mSuggestionRowLayout -> r
    java.lang.Runnable mUpdateDrawableStateRunnable -> Q
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> k
    android.graphics.drawable.Drawable mSearchHintIcon -> q
    boolean mVoiceButtonEnabled -> J
    android.content.Intent mVoiceWebSearchIntent -> t
    androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> z
    boolean DBG -> c0
    int mMaxWidth -> I
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> W
    androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> f0
    android.widget.ImageView mVoiceButton -> i
    android.view.View$OnKeyListener mTextKeyListener -> U
    boolean mSubmitButtonEnabled -> E
    android.app.SearchableInfo mSearchable -> O
    android.view.View mSubmitArea -> e
    int mSuggestionCommitIconResId -> s
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> y
    int mCollapsedImeOptions -> N
    java.lang.String IME_OPTION_NO_MICROPHONE -> e0
    androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> w
    android.view.View$OnClickListener mOnSearchClickListener -> A
    java.util.WeakHashMap mOutsideDrawablesCache -> S
    android.widget.ImageView mCloseButton -> h
    android.os.Bundle mAppSearchData -> P
    android.widget.ImageView mCollapsedIcon -> p
    int[] mTemp2 -> o
    java.lang.CharSequence mDefaultQueryHint -> v
    android.view.View mSearchPlate -> d
    boolean mIconifiedByDefault -> B
    176:176:void <clinit>() -> <clinit>
    267:268:void <init>(android.content.Context) -> <init>
    271:272:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    275:387:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    571:581:void setQuery(java.lang.CharSequence,boolean) -> a
    851:856:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> a
    914:920:void updateSubmitButton(boolean) -> a
    973:974:void onQueryRefine(java.lang.CharSequence) -> a
    1043:1082:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    1291:1298:void onActionViewExpanded() -> a
    1388:1393:boolean onItemClicked(int,int,java.lang.String) -> a
    1399:1402:boolean onItemSelected(int) -> a
    1494:1504:void launchIntent(android.content.Intent) -> a
    1516:1519:void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    1537:1560:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    1582:1637:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    1656:1692:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    1706:1706:boolean isLandscapeMode(android.content.Context) -> a
    869:890:void updateViewsVisibility(boolean) -> b
    1174:1185:void onTextChanged(java.lang.CharSequence) -> b
    1279:1284:void onActionViewCollapsed() -> b
    1444:1464:void rewriteQueryFromSuggestion(int) -> b
    1477:1487:boolean launchSuggestion(int,int,java.lang.String) -> b
    1567:1571:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    1088:1089:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> c
    1153:1159:void updateVoiceButton(boolean) -> c
    1364:1385:void adjustDropDownSizeAndPosition() -> c
    497:502:void clearFocus() -> clearFocus
    1697:1703:void forceSuggestionQuery() -> d
    655:655:boolean isIconfiedByDefault() -> e
    683:683:boolean isIconified() -> f
    735:735:boolean isQueryRefinementEnabled() -> g
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:864:int getPreferredHeight() -> getPreferredHeight
    859:859:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:626:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    705:705:boolean isSubmitButtonEnabled() -> h
    1206:1223:void onCloseClicked() -> i
    1226:1232:void onSearchClicked() -> j
    1188:1199:void onSubmitQuery() -> k
    1258:1265:void onTextFocusChanged() -> l
    1236:1255:void onVoiceClicked() -> m
    949:960:void updateFocusedState() -> n
    1202:1203:void dismissSuggestions() -> o
    964:967:void onDetachedFromWindow() -> onDetachedFromWindow
    832:848:void onLayout(boolean,int,int,int,int) -> onLayout
    783:828:void onMeasure(int,int) -> onMeasure
    1353:1361:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1348:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1269:1272:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    893:906:boolean hasVoiceSearch() -> p
    910:910:boolean isSubmitAreaEnabled() -> q
    945:946:void postUpdateFocusedState() -> r
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    933:942:void updateCloseButton() -> s
    429:430:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    669:674:void setIconified(boolean) -> setIconified
    642:646:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:442:void setImeOptions(int) -> setImeOptions
    464:465:void setInputType(int) -> setInputType
    764:767:void setMaxWidth(int) -> setMaxWidth
    520:521:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:530:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    511:512:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:551:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    538:539:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    1510:1513:void setQuery(java.lang.CharSequence) -> setQuery
    594:596:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:728:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:420:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:697:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:748:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    1102:1104:void updateQueryHint() -> t
    1110:1144:void updateSearchAutoComplete() -> u
    923:930:void updateSubmitArea() -> v
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$b:
    androidx.appcompat.widget.SearchView this$0 -> b
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:182:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$a:
    androidx.appcompat.widget.SearchView this$0 -> b
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1725:1725:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1715:1715:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1720:1721:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$c:
    androidx.appcompat.widget.SearchView this$0 -> b
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:191:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$d:
    androidx.appcompat.widget.SearchView this$0 -> b
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:337:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$e:
    androidx.appcompat.widget.SearchView this$0 -> a
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:381:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$f:
    androidx.appcompat.widget.SearchView this$0 -> b
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:990:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$g:
    androidx.appcompat.widget.SearchView this$0 -> b
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1032:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$h:
    androidx.appcompat.widget.SearchView this$0 -> a
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1169:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$i:
    androidx.appcompat.widget.SearchView this$0 -> b
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1416:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$j:
    androidx.appcompat.widget.SearchView this$0 -> b
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1428:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1437:1437:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$k:
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    2029:2051:void <init>() -> <init>
    2063:2069:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> a
    2072:2078:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    2054:2060:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> b
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$l:
    boolean onClose() -> a
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$m:
    boolean onQueryTextChange(java.lang.String) -> a
    boolean onQueryTextSubmit(java.lang.String) -> b
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$n:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$o:
    boolean isIconified -> b
    1325:1325:void <clinit>() -> <clinit>
    1304:1305:void <init>(android.os.Parcelable) -> <init>
    1308:1310:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1320:java.lang.String toString() -> toString
    1314:1316:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$o$a:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    java.lang.Runnable mRunShowSoftInputIfNecessary -> h
    boolean mHasPendingShowSoftInputRequest -> g
    int mThreshold -> e
    androidx.appcompat.widget.SearchView mSearchView -> f
    1842:1843:void <init>(android.content.Context) -> <init>
    1846:1847:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1852:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1876:1876:boolean isEmpty() -> a
    1992:1998:void showSoftInputIfNecessary() -> b
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    1964:1972:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1983:1988:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1860:void onFinishInflate() -> onFinishInflate
    1921:1923:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1936:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1917:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1895:1895:void performCompletion() -> performCompletion
    1885:1885:void replaceText(java.lang.CharSequence) -> replaceText
    2001:2022:void setImeVisibility(boolean) -> setImeVisibility
    1863:1864:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1870:void setThreshold(int) -> setThreshold
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$a:
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> b
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1838:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$p:
    android.view.View mDelegateView -> a
    boolean mDelegateTargeted -> f
    int mSlop -> e
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    android.graphics.Rect mTargetBounds -> b
    1760:1767:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1770:1774:void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
    1778:1819:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.appcompat.widget.ShareActionProvider -> a.c.h.s0:
    java.lang.String mShareHistoryFileName -> h
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> k
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> l
    int mMaxShownActivityCount -> e
    androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> i
    androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> f
    android.content.Context mContext -> g
    androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> j
    197:199:void <init>(android.content.Context) -> <init>
    212:214:void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener) -> a
    258:286:void onPrepareSubMenu(android.view.SubMenu) -> a
    321:323:void setShareHistoryFileName(java.lang.String) -> a
    342:351:void setShareIntent(android.content.Intent) -> a
    249:249:boolean hasSubMenu() -> b
    411:419:void updateIntent(android.content.Intent) -> b
    222:241:android.view.View onCreateActionView() -> d
    383:391:void setActivityChooserPolicyIfNeeded() -> i
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener -> a.c.h.s0$a:
    boolean onShareTargetSelected(androidx.appcompat.widget.ShareActionProvider,android.content.Intent) -> a
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> a.c.h.s0$b:
    androidx.appcompat.widget.ShareActionProvider this$0 -> a
    397:398:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    402:406:boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> a
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> a.c.h.s0$c:
    androidx.appcompat.widget.ShareActionProvider this$0 -> a
    357:358:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    362:374:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.SuggestionsAdapter -> a.c.h.t0:
    java.lang.String LOG_TAG -> F
    int REFINE_ALL -> J
    int INVALID_INDEX -> K
    int REFINE_NONE -> H
    int REFINE_BY_ENTRY -> I
    android.content.res.ColorStateList mUrlColor -> x
    int QUERY_LIMIT -> G
    boolean mClosed -> v
    java.util.WeakHashMap mOutsideDrawablesCache -> t
    int mFlagsCol -> D
    int mIconName1Col -> B
    android.app.SearchManager mSearchManager -> p
    int mIconName2Col -> C
    int mText2UrlCol -> A
    android.content.Context mProviderContext -> s
    int mText2Col -> z
    int mText1Col -> y
    boolean DBG -> E
    int mQueryRefinement -> w
    androidx.appcompat.widget.SearchView mSearchView -> q
    int mCommitIconResId -> u
    android.app.SearchableInfo mSearchable -> r
    96:107:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    147:155:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    276:326:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    353:360:void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    389:404:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    416:439:java.lang.CharSequence convertToString(android.database.Cursor) -> a
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> a
    593:596:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    648:654:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> a
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    682:691:java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    700:703:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    738:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
    218:238:void changeCursor(android.database.Cursor) -> b
    245:251:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    337:348:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    508:509:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> b
    551:577:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    626:637:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> b
    119:120:void setQueryRefinement(int) -> c
    175:177:void close() -> d
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> d
    127:127:int getQueryRefinement() -> e
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    196:209:void updateSpinnerState(android.database.Cursor) -> g
    474:484:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    451:461:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    136:136:boolean hasStableIds() -> hasStableIds
    182:185:void notifyDataSetChanged() -> notifyDataSetChanged
    190:193:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:334:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> a.c.h.t0$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    android.widget.ImageView mIcon1 -> c
    265:271:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> a.c.h.u0:
    101:184:void <clinit>() -> <clinit>
    194:195:void <init>(android.content.Context) -> <init>
    205:206:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:295:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1028:1035:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    698:715:void applyThumbTint() -> applyThumbTint
    575:592:void applyTrackTint() -> applyTrackTint
    1038:1041:void cancelPositionAnimator() -> cancelPositionAnimator
    988:992:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1430:1430:float constrain(float,float,float) -> constrain
    1137:1198:void draw(android.graphics.Canvas) -> draw
    1357:1368:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1353:void drawableStateChanged() -> drawableStateChanged
    1267:1274:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1286:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1320:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    892:905:boolean hitThumb(float,float) -> hitThumb
    1377:1391:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    878:882:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1326:1330:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1263:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1397:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1414:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1133:void onLayout(boolean,int,int,int,int) -> onLayout
    801:865:void onMeasure(int,int) -> onMeasure
    869:875:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1077:void setChecked(boolean) -> setChecked
    1422:1424:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:789:void setShowText(boolean) -> setShowText
    727:729:void setSplitTrack(boolean) -> setSplitTrack
    437:439:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:415:void setSwitchPadding(int) -> setSwitchPadding
    304:340:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    368:386:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    396:403:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    343:359:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    774:776:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:757:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:611:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1055:void setThumbPosition(float) -> setThumbPosition
    622:623:void setThumbResource(int) -> setThumbResource
    461:463:void setThumbTextPadding(int) -> setThumbTextPadding
    652:656:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:684:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:492:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:503:void setTrackResource(int) -> setTrackResource
    530:534:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:561:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1000:1025:void stopDrag(android.view.MotionEvent) -> stopDrag
    1059:1060:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> a.c.h.u0$a:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> a
    110:111:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> a
    102:102:java.lang.Object get(java.lang.Object) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
androidx.appcompat.widget.ThemeUtils -> a.c.h.v0:
    int[] CHECKED_STATE_SET -> f
    int[] SELECTED_STATE_SET -> g
    int[] NOT_PRESSED_OR_FOCUSED_STATE_SET -> h
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] EMPTY_STATE_SET -> i
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] ACTIVATED_STATE_SET -> d
    int[] PRESSED_STATE_SET -> e
    int[] TEMP_ARRAY -> j
    28:40:void <clinit>() -> <clinit>
    114:115:void <init>() -> <init>
    45:59:android.content.res.ColorStateList createDisabledStateList(int,int) -> a
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> a
    100:105:android.util.TypedValue getTypedValue() -> a
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> a
    63:69:int getThemeAttrColor(android.content.Context,int) -> b
    73:79:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> c
androidx.appcompat.widget.ThemedSpinnerAdapter -> a.c.h.w0:
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper -> a.c.h.w0$a:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.view.LayoutInflater mDropDownInflater -> c
    111:114:void <init>(android.content.Context) -> <init>
    124:132:void setDropDownViewTheme(android.content.res.Resources$Theme) -> a
    152:152:android.view.LayoutInflater getDropDownViewInflater() -> a
    140:140:android.content.res.Resources$Theme getDropDownViewTheme() -> b
androidx.appcompat.widget.TintContextWrapper -> a.c.h.x0:
    android.content.res.Resources$Theme mTheme -> b
    java.lang.Object CACHE_LOCK -> c
    java.util.ArrayList sCache -> d
    android.content.res.Resources mResources -> a
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    78:83:boolean shouldWrap(android.content.Context) -> a
    46:74:android.content.Context wrap(android.content.Context) -> b
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
androidx.appcompat.widget.TintInfo -> a.c.h.y0:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
    28:28:void <init>() -> <init>
    35:39:void clear() -> a
androidx.appcompat.widget.TintResources -> a.c.h.z0:
    java.lang.ref.WeakReference mContextRef -> b
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> a.c.h.a1:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> a
    59:59:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> a
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> a
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> a
    151:151:boolean getBoolean(int,boolean) -> a
    163:163:int getColor(int,int) -> a
    167:177:android.content.res.ColorStateList getColorStateList(int) -> a
    185:185:float getDimension(int,float) -> a
    197:197:int getLayoutDimension(int,java.lang.String) -> a
    205:205:float getFraction(int,int,int,float) -> a
    217:217:boolean getValue(int,android.util.TypedValue) -> a
    250:250:int getChangingConfigurations() -> a
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> b
    127:127:int getIndexCount() -> b
    159:159:float getFloat(int,float) -> b
    189:189:int getDimensionPixelOffset(int,int) -> b
    83:89:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> c
    193:193:int getDimensionPixelSize(int,int) -> c
    241:241:java.lang.String getPositionDescription() -> c
    131:131:int getIndex(int) -> d
    135:135:android.content.res.Resources getResources() -> d
    155:155:int getInt(int,int) -> d
    123:123:int length() -> e
    147:147:java.lang.String getNonResourceString(int) -> e
    181:181:int getInteger(int,int) -> e
    143:143:java.lang.String getString(int) -> f
    201:201:int getLayoutDimension(int,int) -> f
    245:246:void recycle() -> f
    139:139:java.lang.CharSequence getText(int) -> g
    209:209:int getResourceId(int,int) -> g
    213:213:java.lang.CharSequence[] getTextArray(int) -> h
    221:228:int getType(int) -> i
    233:233:boolean hasValue(int) -> j
    237:237:android.util.TypedValue peekValue(int) -> k
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    228:229:void <init>(android.content.Context) -> <init>
    232:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    236:351:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2251:2257:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2139:2165:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1510:1527:void addSystemView(android.view.View,boolean) -> addSystemView
    515:515:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:728:void collapseActionView() -> collapseActionView
    593:596:void dismissPopupMenus() -> dismissPopupMenus
    1491:1507:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2288:2291:void ensureContentInsets() -> ensureContentInsets
    693:696:void ensureLogoView() -> ensureLogoView
    1152:1162:void ensureMenu() -> ensureMenu
    1165:1175:void ensureMenuView() -> ensureMenuView
    1481:1488:void ensureNavButtonView() -> ensureNavButtonView
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2168:2175:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2088:2093:int getChildTop(android.view.View,int) -> getChildTop
    2120:2125:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1388:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1345:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1440:1445:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1460:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1475:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1426:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2186:2187:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2192:2193:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2043:2058:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    709:709:boolean hasExpandedActionView() -> hasExpandedActionView
    549:549:boolean hideOverflowMenu() -> hideOverflowMenu
    1191:1192:void inflateMenu(int) -> inflateMenu
    2260:2260:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    2225:2225:boolean isCustomView(android.view.View) -> isCustomView
    531:531:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    525:525:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    601:616:boolean isTitleTruncated() -> isTitleTruncated
    2063:2071:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2076:2084:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1627:1644:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1571:1573:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1622:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2040:void onLayout(boolean,int,int,int,int) -> onLayout
    1691:1821:void onMeasure(int,int) -> onMeasure
    1543:1562:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    491:497:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1538:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1598:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1565:1567:void postShowOverflowMenu() -> postShowOverflowMenu
    2238:2248:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1049:1050:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1069:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1095:void setCollapseIcon(int) -> setCollapseIcon
    1108:1114:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2272:void setCollapsible(boolean) -> setCollapsible
    1406:1415:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1364:1373:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1288:1290:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1225:1227:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    509:510:void setLogo(int) -> setLogo
    629:641:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:664:void setLogoDescription(int) -> setLogoDescription
    675:681:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    555:587:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2280:2285:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    929:930:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:949:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:967:void setNavigationIcon(int) -> setNavigationIcon
    984:996:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1022:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1203:1204:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1138:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:369:void setPopupTheme(int) -> setPopupTheme
    803:804:void setSubtitle(int) -> setSubtitle
    814:838:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    856:860:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    889:890:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:902:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:749:void setTitle(int) -> setTitle
    760:784:void setTitle(java.lang.CharSequence) -> setTitle
    394:400:void setTitleMargin(int,int,int,int) -> setTitleMargin
    485:487:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:466:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:422:void setTitleMarginStart(int) -> setTitleMarginStart
    441:444:void setTitleMarginTop(int) -> setTitleMarginTop
    845:849:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    868:869:void setTitleTextColor(int) -> setTitleTextColor
    877:881:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1676:1686:boolean shouldCollapse() -> shouldCollapse
    2182:2182:boolean shouldLayout(android.view.View) -> shouldLayout
    540:540:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$a:
    androidx.appcompat.widget.Toolbar this$0 -> a
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:209:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$b:
    androidx.appcompat.widget.Toolbar this$0 -> b
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$c:
    androidx.appcompat.widget.Toolbar this$0 -> b
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1504:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.widget.Toolbar this$0 -> d
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> c
    2447:2448:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2545:2558:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2508:2538:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2503:2503:boolean flagActionItems() -> flagActionItems
    2563:2563:int getId() -> getId
    2461:2461:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    2453:2457:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2499:2499:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2573:2573:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2568:2568:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2494:2494:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2490:2490:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    2467:2486:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$e:
    int SYSTEM -> d
    int EXPANDED -> e
    int mViewType -> b
    int CUSTOM -> c
    2354:2355:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2358:2360:void <init>(int,int) -> <init>
    2363:2365:void <init>(int,int,int) -> <init>
    2368:2369:void <init>(int) -> <init>
    2372:2375:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2378:2379:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2382:2386:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2389:2390:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2397:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> a
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$f:
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$g:
    int expandedMenuItemId -> b
    boolean isOverflowOpen -> c
    2425:2425:void <clinit>() -> <clinit>
    2405:2406:void <init>(android.os.Parcel) -> <init>
    2409:2412:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2416:void <init>(android.os.Parcelable) -> <init>
    2420:2423:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$g$a:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> a.c.h.b1:
    boolean mMenuPrepared -> n
    android.view.Window$Callback mWindowCallback -> m
    android.graphics.drawable.Drawable mIcon -> f
    android.graphics.drawable.Drawable mLogo -> g
    boolean mTitleSet -> i
    android.graphics.drawable.Drawable mNavIcon -> h
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> o
    android.widget.Spinner mSpinner -> d
    java.lang.String TAG -> s
    int mDisplayOpts -> b
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    java.lang.CharSequence mHomeDescription -> l
    long DEFAULT_FADE_DURATION_MS -> u
    androidx.appcompat.widget.Toolbar mToolbar -> a
    int AFFECTS_LOGO_MASK -> t
    android.view.View mTabView -> c
    android.view.View mCustomView -> e
    int mNavigationMode -> p
    int mDefaultNavigationContentDescription -> q
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> r
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    630:637:void updateHomeAccessibility() -> A
    611:616:void updateNavigationIcon() -> B
    322:331:void updateToolbarLogo() -> C
    196:203:void setDefaultNavigationContentDescription(int) -> a
    345:345:boolean isOverflowMenuShowPending() -> a
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> a
    454:454:void setHomeButtonEnabled(boolean) -> a
    514:517:void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> a
    540:547:void setCustomView(android.view.View) -> a
    566:566:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    604:608:void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> a
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> a
    641:642:void saveHierarchyState(android.util.SparseArray) -> a
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    273:277:void setSubtitle(java.lang.CharSequence) -> b
    317:319:void setLogo(android.graphics.drawable.Drawable) -> b
    340:340:boolean isOverflowMenuShowing() -> b
    448:449:void setCollapsible(boolean) -> b
    521:522:void setDropdownSelectedPosition(int) -> b
    646:647:void restoreHierarchyState(android.util.SparseArray) -> b
    260:264:void setTitleInt(java.lang.CharSequence) -> c
    355:355:boolean hideOverflowMenu() -> c
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> c
    626:627:void setNavigationContentDescription(int) -> c
    232:233:void collapseActionView() -> collapseActionView
    350:350:boolean showOverflowMenu() -> d
    556:561:void animateToVisibility(int) -> d
    360:361:void setMenuPrepared() -> e
    463:500:void setNavigationMode(int) -> e
    291:291:boolean hasIcon() -> f
    385:418:void setDisplayOptions(int) -> f
    296:296:boolean hasLogo() -> g
    599:600:void setNavigationIcon(int) -> g
    656:656:int getHeight() -> getHeight
    250:250:java.lang.CharSequence getTitle() -> getTitle
    335:335:boolean canShowOverflowMenu() -> h
    375:376:void dismissPopupMenus() -> i
    551:551:android.view.View getCustomView() -> j
    380:380:int getDisplayOptions() -> k
    530:530:int getDropdownSelectedPosition() -> l
    677:677:android.view.Menu getMenu() -> m
    217:217:android.view.ViewGroup getViewGroup() -> n
    438:438:boolean hasEmbeddedTabs() -> o
    222:222:android.content.Context getContext() -> p
    458:458:int getNavigationMode() -> q
    666:666:int getVisibility() -> r
    281:282:void initProgress() -> s
    651:652:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    227:227:boolean hasExpandedActionView() -> t
    535:535:int getDropdownItemCount() -> u
    443:443:boolean isTitleTruncated() -> v
    286:287:void initIndeterminateProgress() -> w
    268:268:java.lang.CharSequence getSubtitle() -> x
    206:212:int detectDisplayOptions() -> y
    503:509:void ensureSpinner() -> z
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> a.c.h.b1$a:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    androidx.appcompat.view.menu.ActionMenuItem mNavItem -> b
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> a.c.h.b1$b:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    boolean mCanceled -> a
    int val$visibility -> b
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    579:582:void onAnimationEnd(android.view.View) -> a
    574:575:void onAnimationStart(android.view.View) -> b
    586:587:void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.TooltipCompat -> a.c.h.c1:
    48:48:void <init>() -> <init>
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> a
androidx.appcompat.widget.TooltipCompatHandler -> a.c.h.d1:
    androidx.appcompat.widget.TooltipCompatHandler sPendingHandler -> o
    long LONG_CLICK_HIDE_TIMEOUT_MS -> l
    java.lang.String TAG -> k
    boolean mFromTouch -> j
    int mAnchorY -> h
    java.lang.CharSequence mTooltipText -> c
    int mAnchorX -> g
    int mHoverSlop -> d
    java.lang.Runnable mShowRunnable -> e
    java.lang.Runnable mHideRunnable -> f
    android.view.View mAnchor -> b
    long HOVER_HIDE_TIMEOUT_SHORT_MS -> n
    long HOVER_HIDE_TIMEOUT_MS -> m
    androidx.appcompat.widget.TooltipCompatHandler sActiveHandler -> p
    androidx.appcompat.widget.TooltipPopup mPopup -> i
    108:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> a
    163:189:void show(boolean) -> a
    192:207:void hide() -> a
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> a
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> a
    224:225:void cancelPendingShow() -> b
    250:252:void clearAnchorPos() -> c
    220:221:void scheduleShow() -> d
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.widget.TooltipCompatHandler$1 -> a.c.h.d1$a:
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> b
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> a.c.h.d1$b:
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> b
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> a.c.h.e1:
    android.content.Context mContext -> a
    int[] mTmpAnchorPos -> f
    int[] mTmpAppPos -> g
    java.lang.String TAG -> h
    android.widget.TextView mMessageView -> c
    android.graphics.Rect mTmpDisplayFrame -> e
    android.view.View mContentView -> b
    android.view.WindowManager$LayoutParams mLayoutParams -> d
    58:73:void <init>(android.content.Context) -> <init>
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> a
    90:96:void hide() -> a
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> a
    187:207:android.view.View getAppRootView(android.view.View) -> a
    99:99:boolean isShowing() -> b
androidx.appcompat.widget.VectorEnabledTintResources -> a.c.h.f1:
    java.lang.ref.WeakReference mContextRef -> a
    boolean sCompatVectorFromResourcesEnabled -> b
    int MAX_SDK_WHERE_REQUIRED -> c
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> a
    83:84:void setCompatVectorFromResourcesEnabled(boolean) -> a
    93:93:boolean isCompatVectorFromResourcesEnabled() -> a
    42:42:boolean shouldBeUsed() -> b
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    android.view.LayoutInflater mInflater -> e
    java.lang.ref.WeakReference mInflatedViewRef -> d
    int mLayoutResource -> b
    androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener -> f
    int mInflatedId -> c
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    196:235:android.view.View inflate() -> a
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$a:
    void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View) -> a
androidx.appcompat.widget.ViewUtils -> a.c.h.g1:
    java.lang.String TAG -> a
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> b
    42:53:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    58:58:boolean isLayoutRtl(android.view.View) -> a
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> b
androidx.appcompat.widget.WithHint -> a.c.h.h1:
    java.lang.CharSequence getHint() -> a
androidx.arch.core.R -> a.d.a.a:
    668:668:void <init>() -> <init>
androidx.arch.core.executor.ArchTaskExecutor -> a.d.a.b.a:
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    java.util.concurrent.Executor sMainThreadExecutor -> d
    java.util.concurrent.Executor sIOThreadExecutor -> e
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    91:92:void setDelegate(androidx.arch.core.executor.TaskExecutor) -> a
    96:97:void executeOnDiskIO(java.lang.Runnable) -> a
    116:116:boolean isMainThread() -> a
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> b
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> c
    101:102:void postToMainThread(java.lang.Runnable) -> c
    106:106:java.util.concurrent.Executor getMainThreadExecutor() -> d
androidx.arch.core.executor.ArchTaskExecutor$1 -> a.d.a.b.a$a:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> a.d.a.b.a$b:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> a.d.a.b.b:
    android.os.Handler mMainHandler -> c
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    34:38:void <init>() -> <init>
    56:57:void executeOnDiskIO(java.lang.Runnable) -> a
    74:74:boolean isMainThread() -> a
    61:70:void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.executor.DefaultTaskExecutor$1 -> a.d.a.b.b$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    java.lang.String THREAD_NAME_STEM -> c
    androidx.arch.core.executor.DefaultTaskExecutor this$0 -> b
    38:41:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    45:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> a.d.a.b.c:
    31:31:void <init>() -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> a
    54:59:void executeOnMainThread(java.lang.Runnable) -> b
    void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.internal.FastSafeIterableMap -> a.d.a.c.a:
    java.util.HashMap mHashMap -> f
    35:37:void <init>() -> <init>
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> b
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> b
    66:66:boolean contains(java.lang.Object) -> contains
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> a.d.a.c.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> c
    java.util.WeakHashMap mIterators -> d
    int mSize -> e
    35:43:void <init>() -> <init>
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> a
    150:152:java.util.Iterator descendingIterator() -> a
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> b
    169:169:java.util.Map$Entry eldest() -> b
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> c
    176:176:java.util.Map$Entry newest() -> d
    181:201:boolean equals(java.lang.Object) -> equals
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> a.d.a.c.b$a:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> a.d.a.c.b$b:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> a.d.a.c.b$c:
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> d
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> e
    java.lang.Object mKey -> b
    java.lang.Object mValue -> c
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> a.d.a.c.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> b
    androidx.arch.core.internal.SafeIterableMap this$0 -> d
    boolean mBeforeStart -> c
    318:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> a.d.a.c.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    263:264:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> a.d.a.c.b$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.arch.core.util.Function -> a.d.a.d.a:
    java.lang.Object apply(java.lang.Object) -> a
androidx.cardview.R -> a.e.a:
    668:668:void <init>() -> <init>
androidx.cardview.R$attr -> a.e.a$a:
    455:455:void <init>() -> <init>
androidx.cardview.R$color -> a.e.a$b:
    471:471:void <init>() -> <init>
androidx.cardview.R$dimen -> a.e.a$c:
    750:750:void <init>() -> <init>
androidx.cardview.R$style -> a.e.a$d:
    807:807:void <init>() -> <init>
androidx.cardview.R$styleable -> a.e.a$e:
    647:647:void <clinit>() -> <clinit>
    398:398:void <init>() -> <init>
androidx.cardview.widget.CardView -> a.e.b.a:
    81:93:void <clinit>() -> <clinit>
    113:114:void <init>(android.content.Context) -> <init>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    121:164:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> access$001
    79:79:void access$101(androidx.cardview.widget.CardView,int) -> access$101
    79:79:void access$201(androidx.cardview.widget.CardView,int) -> access$201
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    226:228:void setContentPadding(int,int,int,int) -> setContentPadding
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> a.e.b.a$a:
    androidx.cardview.widget.CardView this$0 -> b
    android.graphics.drawable.Drawable mCardBackground -> a
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> a
    475:481:void setMinWidthHeightInternal(int,int) -> a
    490:490:android.view.View getCardView() -> a
    458:458:boolean getUseCompatPadding() -> b
    485:485:android.graphics.drawable.Drawable getCardBackground() -> c
    463:463:boolean getPreventCornerOverlap() -> d
    468:471:void setShadowPadding(int,int,int,int) -> setShadowPadding
androidx.cardview.widget.CardViewApi17Impl -> a.e.b.b:
    25:25:void <init>() -> <init>
    29:37:void initStatic() -> a
androidx.cardview.widget.CardViewApi17Impl$1 -> a.e.b.b$a:
    androidx.cardview.widget.CardViewApi17Impl this$0 -> a
    30:30:void <init>(androidx.cardview.widget.CardViewApi17Impl) -> <init>
    34:35:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
androidx.cardview.widget.CardViewApi21Impl -> a.e.b.c:
    26:26:void <init>() -> <init>
    31:38:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    47:47:void initStatic() -> a
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> j
androidx.cardview.widget.CardViewBaseImpl -> a.e.b.d:
    android.graphics.RectF mCornerRect -> a
    27:29:void <init>() -> <init>
    37:78:void initStatic() -> a
    83:88:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    93:93:androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    120:121:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    141:142:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    157:157:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    130:132:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    136:136:float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    151:153:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    167:167:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    162:162:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    110:110:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    125:125:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    114:116:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    146:146:float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    99:105:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
    171:171:androidx.cardview.widget.RoundRectDrawableWithShadow getShadowBackground(androidx.cardview.widget.CardViewDelegate) -> j
androidx.cardview.widget.CardViewBaseImpl$1 -> a.e.b.d$a:
    androidx.cardview.widget.CardViewBaseImpl this$0 -> a
    38:38:void <init>(androidx.cardview.widget.CardViewBaseImpl) -> <init>
    42:76:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
androidx.cardview.widget.CardViewDelegate -> a.e.b.e:
    android.view.View getCardView() -> a
    void setCardBackground(android.graphics.drawable.Drawable) -> a
    void setMinWidthHeightInternal(int,int) -> a
    boolean getUseCompatPadding() -> b
    android.graphics.drawable.Drawable getCardBackground() -> c
    boolean getPreventCornerOverlap() -> d
androidx.cardview.widget.CardViewImpl -> a.e.b.f:
    float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    void initStatic() -> a
    void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
androidx.cardview.widget.RoundRectDrawable -> a.e.b.g:
    android.graphics.PorterDuff$Mode mTintMode -> k
    android.graphics.RectF mBoundsF -> c
    float mPadding -> e
    android.graphics.Paint mPaint -> b
    android.content.res.ColorStateList mBackground -> h
    boolean mInsetForPadding -> f
    boolean mInsetForRadius -> g
    android.content.res.ColorStateList mTint -> j
    float mRadius -> a
    android.graphics.Rect mBoundsI -> d
    android.graphics.PorterDuffColorFilter mTintFilter -> i
    55:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    70:79:void setPadding(float,boolean,boolean) -> a
    105:117:void updateBounds(android.graphics.Rect) -> a
    131:137:void setRadius(float) -> a
    159:161:void setColor(android.content.res.ColorStateList) -> a
    164:164:android.content.res.ColorStateList getColor() -> a
    206:207:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    65:67:void setBackground(android.content.res.ColorStateList) -> b
    82:82:float getPadding() -> b
    155:155:float getRadius() -> c
    87:102:void draw(android.graphics.Canvas) -> draw
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.cardview.widget.RoundRectDrawableWithShadow -> a.e.b.h:
    int mShadowEndColor -> n
    float mRawShadowSize -> j
    boolean mAddPaddingForCorners -> o
    float mShadowSize -> i
    int mShadowStartColor -> m
    boolean mPrintedShadowClipWarning -> p
    float mRawMaxShadowSize -> h
    float mCornerRadius -> f
    android.graphics.RectF mCardBounds -> e
    boolean mDirty -> l
    android.graphics.Path mCornerShadowPath -> g
    int mInsetShadow -> a
    androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper -> s
    android.graphics.Paint mEdgeShadowPaint -> d
    double COS_45 -> q
    android.graphics.Paint mCornerShadowPaint -> c
    android.graphics.Paint mPaint -> b
    float SHADOW_MULTIPLIER -> r
    android.content.res.ColorStateList mBackground -> k
    41:41:void <clinit>() -> <clinit>
    92:105:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    124:126:void setAddPaddingForCorners(boolean) -> a
    142:143:void setShadowSize(float,float) -> a
    189:192:float calculateHorizontalPadding(float,float,boolean) -> a
    224:225:void setCornerRadius(float) -> a
    249:294:void drawShadow(android.graphics.Canvas) -> a
    345:346:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> a
    377:379:void setColor(android.content.res.ColorStateList) -> a
    382:382:android.content.res.ColorStateList getColor() -> a
    108:110:void setBackground(android.content.res.ColorStateList) -> b
    180:183:float calculateVerticalPadding(float,float,boolean) -> b
    334:338:void buildComponents(android.graphics.Rect) -> b
    341:341:float getCornerRadius() -> b
    353:354:void setMaxShadowSize(float) -> b
    349:350:void setShadowSize(float) -> c
    361:361:float getMaxShadowSize() -> c
    116:120:int toEven(float) -> d
    371:373:float getMinHeight() -> d
    238:246:void draw(android.graphics.Canvas) -> draw
    365:367:float getMinWidth() -> e
    357:357:float getShadowSize() -> f
    297:328:void buildShadowCorners() -> g
    220:220:int getOpacity() -> getOpacity
    170:175:boolean getPadding(android.graphics.Rect) -> getPadding
    210:210:boolean isStateful() -> isStateful
    137:139:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:205:boolean onStateChange(int[]) -> onStateChange
    130:133:void setAlpha(int) -> setAlpha
    215:216:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper -> a.e.b.h$a:
    void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> a
androidx.collection.ArrayMap -> a.f.a:
    androidx.collection.MapCollections mCollections -> n
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    133:133:boolean containsAll(java.util.Collection) -> a
    75:123:androidx.collection.MapCollections getCollection() -> b
    154:154:boolean removeAll(java.util.Collection) -> b
    164:164:boolean retainAll(java.util.Collection) -> c
    182:182:java.util.Set entrySet() -> entrySet
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> a.f.a$a:
    androidx.collection.ArrayMap this$0 -> d
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    84:84:java.lang.Object colGetEntry(int,int) -> a
    89:89:int colIndexOfKey(java.lang.Object) -> a
    104:105:void colPut(java.lang.Object,java.lang.Object) -> a
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> a
    114:115:void colRemoveAt(int) -> a
    119:120:void colClear() -> a
    94:94:int colIndexOfValue(java.lang.Object) -> b
    99:99:java.util.Map colGetMap() -> b
    79:79:int colGetSize() -> c
androidx.collection.ArraySet -> a.f.b:
    java.lang.String TAG -> g
    int sTwiceBaseCacheSize -> o
    androidx.collection.MapCollections mCollections -> e
    int sBaseCacheSize -> m
    java.lang.Object[] mArray -> c
    int BASE_SIZE -> j
    int CACHE_SIZE -> k
    int mSize -> d
    int[] INT -> h
    int[] mHashes -> b
    java.lang.Object[] sTwiceBaseCache -> n
    java.lang.Object[] sBaseCache -> l
    boolean DEBUG -> f
    java.lang.Object[] OBJECT -> i
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    261:265:void <init>(androidx.collection.ArraySet) -> <init>
    271:275:void <init>(java.util.Collection) -> <init>
    83:117:int indexOf(java.lang.Object,int) -> a
    200:233:void freeArrays(int[],java.lang.Object[],int) -> a
    295:305:void ensureCapacity(int) -> a
    325:325:int indexOf(java.lang.Object) -> a
    410:423:void addAll(androidx.collection.ArraySet) -> a
    634:682:androidx.collection.MapCollections getCollection() -> a
    359:402:boolean add(java.lang.Object) -> add
    719:724:boolean addAll(java.util.Collection) -> addAll
    121:155:int indexOfNull() -> b
    447:494:java.lang.Object removeAt(int) -> b
    506:514:boolean removeAll(androidx.collection.ArraySet) -> b
    335:335:java.lang.Object valueAt(int) -> c
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    160:196:void allocArrays(int) -> d
    559:582:boolean equals(java.lang.Object) -> equals
    590:595:int hashCode() -> hashCode
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
androidx.collection.ArraySet$1 -> a.f.b$a:
    androidx.collection.ArraySet this$0 -> d
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    643:643:java.lang.Object colGetEntry(int,int) -> a
    648:648:int colIndexOfKey(java.lang.Object) -> a
    663:664:void colPut(java.lang.Object,java.lang.Object) -> a
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> a
    673:674:void colRemoveAt(int) -> a
    678:679:void colClear() -> a
    653:653:int colIndexOfValue(java.lang.Object) -> b
    658:658:java.util.Map colGetMap() -> b
    638:638:int colGetSize() -> c
androidx.collection.CircularArray -> a.f.c:
    java.lang.Object[] mElements -> a
    int mCapacityBitmask -> d
    int mHead -> b
    int mTail -> c
    49:50:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
    84:89:void addFirst(java.lang.Object) -> a
    138:139:void clear() -> a
    240:241:java.lang.Object get(int) -> a
    96:101:void addLast(java.lang.Object) -> b
    182:186:void removeFromEnd(int) -> b
    215:216:java.lang.Object getFirst() -> b
    149:153:void removeFromStart(int) -> c
    227:228:java.lang.Object getLast() -> c
    259:259:boolean isEmpty() -> d
    109:110:java.lang.Object popFirst() -> e
    124:125:java.lang.Object popLast() -> f
    251:251:int size() -> g
    30:34:void doubleCapacity() -> h
androidx.collection.CircularIntArray -> a.f.d:
    int mCapacityBitmask -> d
    int[] mElements -> a
    int mHead -> b
    int mTail -> c
    50:51:void <init>() -> <init>
    59:61:void <init>(int) -> <init>
    85:90:void addFirst(int) -> a
    133:134:void clear() -> a
    97:102:void addLast(int) -> b
    176:176:int getFirst() -> b
    186:186:int getLast() -> c
    197:197:int get(int) -> c
    161:165:void removeFromEnd(int) -> d
    214:214:boolean isEmpty() -> d
    110:110:int popFirst() -> e
    144:148:void removeFromStart(int) -> e
    122:122:int popLast() -> f
    206:206:int size() -> g
    31:35:void doubleCapacity() -> h
androidx.collection.ContainerHelpers -> a.f.e:
    java.lang.Object[] EMPTY_OBJECTS -> c
    long[] EMPTY_LONGS -> b
    int[] EMPTY_INTS -> a
    20:22:void <clinit>() -> <clinit>
    83:84:void <init>() -> <init>
    33:37:int idealByteArraySize(int) -> a
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> a
    46:61:int binarySearch(int[],int,int) -> a
    65:80:int binarySearch(long[],int,long) -> a
    25:25:int idealIntArraySize(int) -> b
    29:29:int idealLongArraySize(int) -> c
androidx.collection.LongSparseArray -> a.f.f:
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    java.lang.Object DELETED -> f
    int mSize -> e
    boolean mGarbage -> b
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    203:211:boolean replace(long,java.lang.Object,java.lang.Object) -> a
    300:303:void putAll(androidx.collection.LongSparseArray) -> a
    353:357:long keyAt(int) -> a
    386:391:void setValueAt(int,java.lang.Object) -> a
    428:428:boolean containsKey(long) -> a
    433:433:boolean containsValue(java.lang.Object) -> a
    440:449:void clear() -> a
    456:483:void append(long,java.lang.Object) -> a
    118:121:java.lang.Object get(long,java.lang.Object) -> b
    132:133:void delete(long) -> b
    171:175:void removeAt(int) -> b
    339:339:boolean isEmpty() -> b
    415:423:int indexOfValue(java.lang.Object) -> b
    109:109:java.lang.Object get(long) -> c
    248:292:void put(long,java.lang.Object) -> c
    327:331:int size() -> c
    373:377:java.lang.Object valueAt(int) -> c
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    217:240:void gc() -> d
    315:319:java.lang.Object putIfAbsent(long,java.lang.Object) -> d
    399:403:int indexOfKey(long) -> d
    139:147:void remove(long) -> e
    156:164:boolean remove(long,java.lang.Object) -> e
    185:191:java.lang.Object replace(long,java.lang.Object) -> f
    494:515:java.lang.String toString() -> toString
androidx.collection.LruCache -> a.f.g:
    java.util.LinkedHashMap map -> a
    int missCount -> h
    int evictionCount -> f
    int hitCount -> g
    int putCount -> d
    int createCount -> e
    int size -> b
    int maxSize -> c
    51:53:void <init>(int) -> <init>
    65:66:void resize(int) -> a
    138:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    255:255:java.lang.Object create(java.lang.Object) -> a
    322:322:int createCount() -> a
    83:84:java.lang.Object get(java.lang.Object) -> b
    171:187:void trimToSize(int) -> b
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> b
    281:282:void evictAll() -> b
    200:201:java.lang.Object remove(java.lang.Object) -> c
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    336:336:int evictionCount() -> c
    307:307:int hitCount() -> d
    299:299:int maxSize() -> e
    315:315:int missCount() -> f
    329:329:int putCount() -> g
    290:290:int size() -> h
    344:344:java.util.Map snapshot() -> i
    348:347:java.lang.String toString() -> toString
androidx.collection.MapCollections -> a.f.h:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    32:32:void <init>() -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    490:495:java.lang.Object[] toArrayHelper(int) -> b
    int colGetSize() -> c
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    533:536:java.util.Set getEntrySet() -> d
    540:543:java.util.Set getKeySet() -> e
    547:550:java.util.Collection getValues() -> f
androidx.collection.MapCollections$ArrayIterator -> a.f.h$a:
    androidx.collection.MapCollections this$0 -> f
    boolean mCanRemove -> e
    int mIndex -> d
    int mOffset -> b
    int mSize -> c
    43:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> a.f.h$b:
    androidx.collection.MapCollections this$0 -> b
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    170:170:boolean add(java.util.Map$Entry) -> a
    167:167:boolean add(java.lang.Object) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> a.f.h$c:
    androidx.collection.MapCollections this$0 -> b
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> a.f.h$d:
    androidx.collection.MapCollections this$0 -> e
    int mEnd -> b
    int mIndex -> c
    boolean mEntryValid -> d
    79:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> a.f.h$e:
    androidx.collection.MapCollections this$0 -> b
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> a.f.i:
    java.lang.String TAG -> f
    int mTwiceBaseCacheSize -> m
    java.lang.Object[] mArray -> c
    int[] mHashes -> b
    int mBaseCacheSize -> k
    int BASE_SIZE -> h
    int CACHE_SIZE -> i
    boolean DEBUG -> e
    java.lang.Object[] mTwiceBaseCache -> l
    boolean CONCURRENT_MODIFICATION_EXCEPTIONS -> g
    java.lang.Object[] mBaseCache -> j
    int mSize -> d
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    77:80:int binarySearchHashes(int[],int,int) -> a
    88:122:int indexOf(java.lang.Object,int) -> a
    126:160:int indexOfNull() -> a
    201:230:void freeArrays(int[],java.lang.Object[],int) -> a
    289:301:void ensureCapacity(int) -> a
    322:322:int indexOfKey(java.lang.Object) -> a
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> a
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> a
    326:341:int indexOfValue(java.lang.Object) -> b
    390:390:java.lang.Object keyAt(int) -> b
    570:623:java.lang.Object removeAt(int) -> c
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    399:399:java.lang.Object valueAt(int) -> d
    165:197:void allocArrays(int) -> e
    681:735:boolean equals(java.lang.Object) -> equals
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    419:419:boolean isEmpty() -> isEmpty
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
androidx.collection.SparseArrayCompat -> a.f.j:
    java.lang.Object[] mValues -> d
    java.lang.Object DELETED -> f
    int[] mKeys -> c
    int mSize -> e
    boolean mGarbage -> b
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    184:188:void removeAtRange(int,int) -> a
    216:224:boolean replace(int,java.lang.Object,java.lang.Object) -> a
    313:316:void putAll(androidx.collection.SparseArrayCompat) -> a
    432:432:boolean containsKey(int) -> a
    437:437:boolean containsValue(java.lang.Object) -> a
    444:453:void clear() -> a
    460:487:void append(int,java.lang.Object) -> a
    118:121:java.lang.Object get(int,java.lang.Object) -> b
    132:133:void delete(int) -> b
    352:352:boolean isEmpty() -> b
    419:427:int indexOfValue(java.lang.Object) -> b
    109:109:java.lang.Object get(int) -> c
    261:305:void put(int,java.lang.Object) -> c
    340:344:int size() -> c
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    230:253:void gc() -> d
    328:332:java.lang.Object putIfAbsent(int,java.lang.Object) -> d
    401:405:int indexOfKey(int) -> d
    156:164:boolean remove(int,java.lang.Object) -> e
    361:365:int keyAt(int) -> e
    139:147:void remove(int) -> f
    198:204:java.lang.Object replace(int,java.lang.Object) -> f
    171:175:void removeAt(int) -> g
    388:393:void setValueAt(int,java.lang.Object) -> g
    375:379:java.lang.Object valueAt(int) -> h
    498:519:java.lang.String toString() -> toString
androidx.constraintlayout.solver.ArrayLinkedVariables -> a.g.a.a:
    boolean FULL_NEW_CHECK -> n
    int NONE -> m
    int mLast -> j
    androidx.constraintlayout.solver.Cache mCache -> c
    boolean mDidFillOnce -> k
    boolean DEBUG -> l
    float[] mArrayValues -> h
    int mHead -> i
    int ROW_SIZE -> d
    int currentSize -> a
    int[] mArrayIndices -> f
    int[] mArrayNextIndices -> g
    androidx.constraintlayout.solver.ArrayRow mRow -> b
    androidx.constraintlayout.solver.SolverVariable candidate -> e
    100:108:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    117:213:void put(androidx.constraintlayout.solver.SolverVariable,float) -> a
    225:335:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> a
    345:378:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> a
    385:399:void clear() -> a
    408:419:boolean containsKey(androidx.constraintlayout.solver.SolverVariable) -> a
    458:464:void divideByAmount(float) -> a
    491:491:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> a
    506:570:androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> a
    583:614:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean) -> a
    626:660:void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[]) -> a
    691:714:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable) -> a
    724:732:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> a
    742:750:float getVariableValue(int) -> b
    759:767:float get(androidx.constraintlayout.solver.SolverVariable) -> b
    779:789:void display() -> b
    668:687:androidx.constraintlayout.solver.SolverVariable getPivotCandidate() -> c
    428:436:boolean hasAtLeastOnePositiveVariable() -> d
    443:449:void invert() -> e
    772:775:int sizeInBytes() -> f
    798:807:java.lang.String toString() -> toString
androidx.constraintlayout.solver.ArrayRow -> a.g.a.b:
    androidx.constraintlayout.solver.SolverVariable variable -> a
    float epsilon -> g
    androidx.constraintlayout.solver.ArrayLinkedVariables variables -> d
    boolean isSimpleDefinition -> e
    boolean DEBUG -> f
    float constantValue -> b
    boolean used -> c
    33:35:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    133:149:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    153:154:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> a
    160:178:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    182:184:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable) -> a
    215:243:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> a
    251:273:androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int) -> a
    278:320:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    324:326:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> a
    331:334:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> a
    351:355:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> a
    391:396:void ensurePositiveConstant() -> a
    407:418:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> a
    450:450:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> a
    466:476:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> a
    480:493:void addError(androidx.constraintlayout.solver.SolverVariable) -> a
    38:38:boolean hasKeyVariable() -> b
    110:110:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> b
    114:118:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> b
    189:207:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> b
    369:374:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> b
    103:107:void reset() -> c
    122:129:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> c
    422:422:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> c
    455:458:void clear() -> clear
    378:386:int sizeInBytes() -> d
    426:439:void pivot(androidx.constraintlayout.solver.SolverVariable) -> d
    50:99:java.lang.String toReadableString() -> e
    497:497:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    445:445:boolean isEmpty() -> isEmpty
    46:46:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Cache -> a.g.a.c:
    androidx.constraintlayout.solver.Pools$Pool solverVariablePool -> b
    androidx.constraintlayout.solver.Pools$Pool arrayRowPool -> a
    androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables -> c
    21:24:void <init>() -> <init>
androidx.constraintlayout.solver.GoalRow -> a.g.a.d:
    22:23:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    27:31:void addError(androidx.constraintlayout.solver.SolverVariable) -> a
androidx.constraintlayout.solver.LinearSystem -> a.g.a.e:
    int mPoolVariablesCount -> n
    androidx.constraintlayout.solver.Metrics sMetrics -> t
    int mNumRows -> j
    int mMaxRows -> k
    int mNumColumns -> i
    java.util.HashMap mVariables -> b
    int TABLE_SIZE -> d
    int mMaxColumns -> e
    boolean FULL_DEBUG -> q
    androidx.constraintlayout.solver.LinearSystem$Row mGoal -> c
    boolean DEBUG -> r
    int mVariablesID -> a
    androidx.constraintlayout.solver.ArrayRow[] mRows -> f
    boolean[] mAlreadyTestedCandidates -> h
    androidx.constraintlayout.solver.ArrayRow[] tempClientsCopy -> o
    androidx.constraintlayout.solver.SolverVariable[] mPoolVariables -> m
    boolean graphOptimizer -> g
    int POOL_SIZE -> s
    androidx.constraintlayout.solver.Cache mCache -> l
    androidx.constraintlayout.solver.LinearSystem$Row mTempGoal -> p
    37:37:void <clinit>() -> <clinit>
    78:84:void <init>() -> <init>
    87:88:void fillMetrics(androidx.constraintlayout.solver.Metrics) -> a
    170:196:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> a
    226:237:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> a
    245:246:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int) -> a
    249:260:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> a
    283:296:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> a
    305:318:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> a
    332:332:androidx.constraintlayout.solver.ArrayRow getRow(int) -> a
    336:340:float getValueFor(java.lang.String) -> a
    359:366:androidx.constraintlayout.solver.SolverVariable getVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type) -> a
    416:441:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> a
    461:535:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> a
    559:691:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> a
    1029:1039:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean) -> a
    1098:1104:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> a
    1110:1116:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> a
    1128:1134:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> a
    1146:1166:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> a
    1178:1195:void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int) -> a
    1201:1215:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> a
    1230:1234:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean) -> a
    1297:1315:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> a
    1329:1347:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> a
    200:207:androidx.constraintlayout.solver.ArrayRow createRow() -> b
    241:242:void addError(androidx.constraintlayout.solver.ArrayRow) -> b
    263:279:androidx.constraintlayout.solver.SolverVariable createVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type) -> b
    344:348:int getObjectVariableValue(java.lang.Object) -> b
    700:843:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> b
    955:963:java.lang.String getDisplaySize(int) -> b
    1003:1012:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> b
    1018:1023:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int) -> b
    1067:1077:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean) -> b
    1242:1260:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> b
    211:222:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> c
    538:550:void addRow(androidx.constraintlayout.solver.ArrayRow) -> c
    971:989:java.lang.String getDisplayStrength(int) -> c
    1052:1061:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> c
    1268:1286:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> c
    448:454:void updateRowFromVariables(androidx.constraintlayout.solver.ArrayRow) -> d
    870:880:void displayReadableRows() -> d
    916:938:void displaySystemInformations() -> e
    884:894:void displayVariablesReadableRows() -> f
    967:967:androidx.constraintlayout.solver.Cache getCache() -> g
    329:329:androidx.constraintlayout.solver.LinearSystem$Row getGoal() -> h
    898:904:int getMemoryUsed() -> i
    908:908:int getNumEquations() -> j
    910:910:int getNumVariables() -> k
    377:409:void minimize() -> l
    142:163:void reset() -> m
    847:851:void computeValues() -> n
    859:867:void displayRows() -> o
    941:952:void displaySolverVariables() -> p
    91:91:androidx.constraintlayout.solver.Metrics getMetrics() -> q
    112:123:void increaseTableSize() -> r
    129:136:void releaseRows() -> s
androidx.constraintlayout.solver.LinearSystem$Row -> a.g.a.e$a:
    void addError(androidx.constraintlayout.solver.SolverVariable) -> a
    androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> a
    void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> a
androidx.constraintlayout.solver.Metrics -> a.g.a.f:
    long iterations -> i
    long bfs -> k
    long minimize -> e
    long simpleconstraints -> g
    long nonresolvedWidgets -> B
    long measures -> a
    long lastTableSize -> D
    long resolutions -> c
    long chainConnectionResolved -> y
    long maxVariables -> u
    long centerConnectionResolved -> w
    long fullySolved -> q
    long resolvedWidgets -> s
    long errors -> m
    long extravariables -> o
    long pivots -> j
    long variables -> l
    long constraints -> f
    long optimize -> h
    long additionalMeasures -> b
    long oldresolvedWidgets -> A
    long tableSizeIncrease -> d
    java.util.ArrayList problematicLayouts -> C
    long barrierConnectionResolved -> z
    long maxRows -> v
    long matchConnectionResolved -> x
    long graphOptimizer -> r
    long minimizeGoal -> t
    long slackvariables -> n
    long maxTableSize -> p
    25:54:void <init>() -> <init>
    91:121:void reset() -> a
    58:58:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Pools -> a.g.a.g:
    boolean DEBUG -> a
    75:77:void <init>() -> <init>
androidx.constraintlayout.solver.Pools$Pool -> a.g.a.g$a:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
    void releaseAll(java.lang.Object[],int) -> a
androidx.constraintlayout.solver.Pools$SimplePool -> a.g.a.g$b:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    96:98:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> a
    123:128:boolean release(java.lang.Object) -> a
    133:148:void releaseAll(java.lang.Object[],int) -> a
    151:156:boolean isInPool(java.lang.Object) -> b
androidx.constraintlayout.solver.SolverVariable -> a.g.a.h:
    int STRENGTH_MEDIUM -> n
    int STRENGTH_NONE -> l
    int usageInRowCount -> j
    androidx.constraintlayout.solver.SolverVariable$Type mType -> g
    boolean INTERNAL_DEBUG -> k
    float computedValue -> e
    float[] strengthVector -> f
    int strength -> d
    int id -> b
    int MAX_STRENGTH -> y
    int uniqueConstantId -> w
    java.lang.String mName -> a
    int uniqueErrorId -> u
    int STRENGTH_BARRIER -> s
    int STRENGTH_EQUALITY -> q
    int STRENGTH_HIGH -> o
    int STRENGTH_LOW -> m
    int mClientEquationsCount -> i
    int definitionId -> c
    androidx.constraintlayout.solver.ArrayRow[] mClientEquations -> h
    int uniqueId -> x
    int uniqueUnrestrictedId -> v
    int uniqueSlackId -> t
    int STRENGTH_FIXED -> r
    int STRENGTH_HIGHEST -> p
    41:45:void <clinit>() -> <clinit>
    114:117:void <init>(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type) -> <init>
    119:124:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    127:130:void clearStrengths() -> a
    163:173:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> a
    216:216:void setName(java.lang.String) -> a
    218:222:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> a
    93:97:java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> b
    176:186:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> b
    213:213:java.lang.String getName() -> b
    189:194:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> c
    197:205:void reset() -> c
    133:159:java.lang.String strengthsToString() -> d
    89:90:void increaseErrorId() -> e
    229:235:java.lang.String toString() -> toString
androidx.constraintlayout.solver.SolverVariable$1 -> a.g.a.h$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$SolverVariable$Type -> a
    96:96:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.SolverVariable$Type -> a.g.a.h$b:
    androidx.constraintlayout.solver.SolverVariable$Type SLACK -> d
    androidx.constraintlayout.solver.SolverVariable$Type CONSTANT -> c
    androidx.constraintlayout.solver.SolverVariable$Type[] $VALUES -> g
    androidx.constraintlayout.solver.SolverVariable$Type UNKNOWN -> f
    androidx.constraintlayout.solver.SolverVariable$Type ERROR -> e
    androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED -> b
    69:65:void <clinit>() -> <clinit>
    65:65:void <init>(java.lang.String,int) -> <init>
    65:65:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    65:65:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.widgets.Analyzer -> a.g.a.i.a:
    32:33:void <init>() -> <init>
    45:100:void determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> a
    110:112:boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean) -> a
    128:223:boolean traverse(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,java.util.List,boolean) -> a
    260:263:void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup) -> a
    274:287:int getMaxDimension(androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,int) -> a
    304:413:int getMaxDimensionTraversal(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean,int) -> a
    417:422:void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    444:454:void setPosition(java.util.List,int,int) -> a
    467:495:void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int) -> a
    505:522:int getParentBiasOffset(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    532:548:int resolveDimensionRatio(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    431:433:void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> b
androidx.constraintlayout.solver.widgets.Barrier -> a.g.a.i.b:
    int mBarrierType -> e1
    boolean mAllowsGoneWidget -> g1
    int RIGHT -> i1
    int LEFT -> h1
    java.util.ArrayList mNodes -> f1
    int BOTTOM -> k1
    int TOP -> j1
    28:38:void <init>() -> <init>
    42:42:boolean allowedInBarrier() -> a
    65:125:void analyze(int) -> a
    209:219:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    49:49:void setAllowsGoneWidget(boolean) -> c
    55:57:void resetResolutionNodes() -> n0
    132:199:void resolve() -> o0
    51:51:boolean allowsGoneWidget() -> s0
    46:47:void setBarrierType(int) -> z
androidx.constraintlayout.solver.widgets.Chain -> a.g.a.i.c:
    boolean DEBUG -> a
    30:30:void <init>() -> <init>
    46:72:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> a
    86:443:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> a
androidx.constraintlayout.solver.widgets.ChainHead -> a.g.a.i.d:
    boolean mIsRtl -> m
    float mTotalWeight -> k
    boolean mHasUndefinedWeights -> n
    int mOrientation -> l
    boolean mHasDefinedWeights -> o
    boolean mHasComplexMatchWeights -> p
    int mWidgetsMatchCount -> j
    androidx.constraintlayout.solver.widgets.ConstraintWidget mFirst -> a
    int mWidgetsCount -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget mLastVisibleWidget -> d
    androidx.constraintlayout.solver.widgets.ConstraintWidget mHead -> e
    androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstVisibleWidget -> b
    androidx.constraintlayout.solver.widgets.ConstraintWidget mLast -> c
    boolean mDefined -> q
    androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstMatchConstraintWidget -> f
    androidx.constraintlayout.solver.widgets.ConstraintWidget mLastMatchConstraintWidget -> g
    java.util.ArrayList mWeightedMatchConstraintsWidgets -> h
    58:62:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    72:72:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    195:199:void define() -> a
    163:163:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst() -> b
    183:183:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget() -> c
    167:167:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> d
    179:179:androidx.constraintlayout.solver.widgets.ConstraintWidget getHead() -> e
    171:171:androidx.constraintlayout.solver.widgets.ConstraintWidget getLast() -> f
    187:187:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget() -> g
    175:175:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> h
    191:191:float getTotalWeight() -> i
    79:160:void defineChainProperties() -> j
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> a.g.a.i.e:
    int AUTO_CONSTRAINT_CREATOR -> n
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength mStrength -> g
    int UNSET_GONE_MARGIN -> o
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType -> c
    int USER_CREATOR -> l
    int SCOUT_CREATOR -> m
    boolean ALLOW_BINARY -> k
    int mConnectionCreator -> i
    int mGoneMargin -> f
    androidx.constraintlayout.solver.SolverVariable mSolverVariable -> j
    androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner -> b
    int mMargin -> e
    androidx.constraintlayout.solver.widgets.ResolutionAnchor mResolutionAnchor -> a
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType -> h
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget -> d
    86:89:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    101:106:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> a
    157:158:void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType) -> a
    163:163:int getConnectionCreator() -> a
    169:169:void setConnectionCreator(int) -> a
    194:194:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> a
    210:230:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int,boolean) -> a
    241:241:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int) -> a
    251:251:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> a
    340:346:boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    370:373:void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength) -> a
    553:553:boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    566:577:boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    588:605:boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet) -> a
    150:150:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType() -> b
    390:393:void setGoneMargin(int) -> b
    479:531:boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> b
    125:132:int getMargin() -> c
    268:282:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> c
    380:383:void setMargin(int) -> c
    613:631:androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite() -> d
    112:112:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> e
    457:465:int getPriorityLevel() -> f
    58:58:androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode() -> g
    435:443:int getSnapPriorityLevel() -> h
    95:95:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> i
    138:138:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength() -> j
    144:144:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> k
    118:118:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> l
    259:259:boolean isConnected() -> m
    316:327:boolean isSideAnchor() -> n
    401:406:boolean isVerticalAnchor() -> o
    175:182:void reset() -> p
    424:424:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1 -> a.g.a.i.e$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type -> a
    279:279:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType -> a.g.a.i.e$b:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType STRICT -> c
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] $VALUES -> d
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType RELAXED -> b
    46:46:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String) -> valueOf
    46:46:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength -> a.g.a.i.e$c:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength WEAK -> d
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] $VALUES -> e
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength STRONG -> c
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength NONE -> b
    41:41:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String) -> valueOf
    41:41:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> a.g.a.i.e$d:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP -> d
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT -> c
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type NONE -> b
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] $VALUES -> k
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y -> j
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X -> i
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER -> h
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE -> g
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM -> f
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT -> e
    36:36:void <clinit>() -> <clinit>
    36:36:void <init>(java.lang.String,int) -> <init>
    36:36:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    36:36:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout -> a.g.a.i.f:
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment mAlignment -> E1
    35:35:void <init>() -> <init>
    45:46:void <init>(int,int,int,int) -> <init>
    54:55:void <init>(int,int) -> <init>
    63:92:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment -> a.g.a.i.f$a:
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment MIDDLE -> c
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BEGIN -> b
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] $VALUES -> j
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment RIGHT -> i
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment LEFT -> h
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BOTTOM -> g
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment VERTICAL_MIDDLE -> f
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment TOP -> e
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment END -> d
    27:26:void <clinit>() -> <clinit>
    26:26:void <init>(java.lang.String,int) -> <init>
    26:26:androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment valueOf(java.lang.String) -> valueOf
    26:26:androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintTableLayout -> a.g.a.i.g:
    boolean mVerticalGrowth -> E1
    int mPadding -> H1
    int mNumCols -> F1
    int mNumRows -> G1
    java.util.ArrayList mVerticalGuidelines -> K1
    java.util.ArrayList mHorizontalSlices -> J1
    java.util.ArrayList mHorizontalGuidelines -> L1
    int ALIGN_RIGHT -> P1
    int ALIGN_FULL -> Q1
    int ALIGN_CENTER -> N1
    int ALIGN_LEFT -> O1
    java.util.ArrayList mVerticalSlices -> I1
    androidx.constraintlayout.solver.LinearSystem system -> M1
    66:67:void <init>() -> <init>
    78:79:void <init>(int,int,int,int) -> <init>
    88:89:void <init>(int,int) -> <init>
    573:573:boolean handlesInternalConstraints() -> A0
    252:265:void cycleColumnAlignment(int) -> B
    158:168:java.lang.String getColumnAlignmentRepresentation(int) -> C
    179:184:void setNumCols(int) -> D
    194:199:void setNumRows(int) -> E
    226:229:void setPadding(int) -> F
    580:588:void computeGuidelinesPercentPositions() -> J0
    134:148:java.lang.String getColumnsAlignmentRepresentation() -> K0
    116:116:int getNumCols() -> L0
    107:107:int getNumRows() -> M0
    125:125:int getPadding() -> N0
    98:98:java.lang.String getType() -> O
    208:208:boolean isVerticalGrowth() -> O0
    351:388:void setTableDimensions() -> P0
    481:540:void setChildrenConnections() -> Q0
    453:475:void setHorizontalSlices() -> R0
    424:446:void setVerticalSlices() -> S0
    406:417:void updateDebugSolverNames() -> T0
    316:344:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    398:401:void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String) -> a
    549:564:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> c
    217:218:void setVerticalGrowth(boolean) -> d
    273:287:void setColumnAlignment(java.lang.String) -> d
    239:244:void setColumnAlignment(int,int) -> j
    306:306:java.util.ArrayList getHorizontalGuidelines() -> v0
    296:296:java.util.ArrayList getVerticalGuidelines() -> y0
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice -> a.g.a.i.g$a:
    androidx.constraintlayout.solver.widgets.ConstraintWidget top -> a
    androidx.constraintlayout.solver.widgets.ConstraintWidget bottom -> b
    androidx.constraintlayout.solver.widgets.ConstraintTableLayout this$0 -> d
    int padding -> c
    36:36:void <init>(androidx.constraintlayout.solver.widgets.ConstraintTableLayout) -> <init>
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice -> a.g.a.i.g$b:
    androidx.constraintlayout.solver.widgets.ConstraintWidget left -> a
    androidx.constraintlayout.solver.widgets.ConstraintWidget right -> b
    int padding -> d
    androidx.constraintlayout.solver.widgets.ConstraintTableLayout this$0 -> e
    int alignment -> c
    45:48:void <init>(androidx.constraintlayout.solver.widgets.ConstraintTableLayout) -> <init>
androidx.constraintlayout.solver.widgets.ConstraintWidget -> a.g.a.i.h:
    int SOLVER -> D0
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors -> E
    int mMatchConstraintMaxHeight -> l
    int MATCH_CONSTRAINT_PERCENT -> H0
    int mX -> K
    int HORIZONTAL -> L0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight -> w
    int GONE -> P0
    int WRAP -> T0
    int ANCHOR_BOTTOM -> X0
    int mOffsetY -> T
    int mVisibility -> d0
    int mY -> L
    java.lang.String mType -> f0
    int mDistToLeft -> h0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom -> x
    int mMatchConstraintDefaultWidth -> e
    java.lang.Object mCompanionWidget -> b0
    int mHorizontalChainStyle -> t0
    boolean mHorizontalChainFixedPosition -> v0
    boolean mOptimizerMeasured -> r0
    int mBaselineDistance -> U
    boolean mBottomHasCentered -> n0
    boolean mIsHeightWrapContent -> o
    int mRelX -> M
    int MATCH_CONSTRAINT_WRAP -> G0
    int UNKNOWN -> K0
    int mMatchConstraintDefaultHeight -> f
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline -> y
    int INVISIBLE -> O0
    int CHAIN_PACKED -> S0
    int ANCHOR_TOP -> W0
    float[] mWeight -> x0
    androidx.constraintlayout.solver.widgets.ConstraintWidget mHorizontalNextWidget -> A0
    int mMinWidth -> V
    float mMatchConstraintPercentHeight -> m
    int mRelY -> N
    int mContainerItemSkip -> c0
    java.lang.String mDebugName -> e0
    int mDistToTop -> g0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenterX -> z
    boolean mVerticalChainFixedPosition -> w0
    boolean mGroupsToSolver -> s0
    int mMinHeight -> W
    boolean mHorizontalWrapVisited -> o0
    int mResolvedDimensionRatioSide -> p
    boolean mLeftHasCentered -> k0
    int mDrawX -> O
    androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup mBelongingGroup -> r
    int[] mMaxDimension -> s
    int mMatchConstraintMinWidth -> h
    int MATCH_CONSTRAINT_SPREAD -> F0
    int mWidth -> G
    int MATCH_CONSTRAINT_RATIO_RESOLVED -> J0
    java.util.ArrayList mAnchors -> D
    int VISIBLE -> N0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenterY -> A
    float mHorizontalBiasPercent -> Z
    int CHAIN_SPREAD_INSIDE -> R0
    androidx.constraintlayout.solver.widgets.ConstraintWidget mVerticalNextWidget -> B0
    int mWrapWidth -> X
    int ANCHOR_RIGHT -> V0
    int DIMENSION_HORIZONTAL -> Z0
    float mVerticalBiasPercent -> a0
    int mDrawY -> P
    boolean mIsWidthWrapContent -> n
    int mHeight -> H
    boolean AUTOTAG_CENTER -> C0
    int mMatchConstraintMaxWidth -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget[] mListNextMatchConstraintsWidget -> y0
    int mDistToBottom -> j0
    int mHorizontalResolution -> a
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenter -> B
    boolean mVerticalWrapVisited -> p0
    int mWrapHeight -> Y
    float mCircleConstraintAngle -> t
    boolean mRightHasCentered -> l0
    int mDrawWidth -> Q
    int DIRECT -> E0
    androidx.constraintlayout.solver.widgets.ResolutionDimension mResolutionWidth -> c
    int MATCH_CONSTRAINT_RATIO -> I0
    int mVerticalResolution -> b
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft -> u
    int VERTICAL -> M0
    int CHAIN_SPREAD -> Q0
    int ANCHOR_LEFT -> U0
    int ANCHOR_BASELINE -> Y0
    float mResolvedDimensionRatio -> q
    int mDrawHeight -> R
    float mMatchConstraintPercentWidth -> j
    float mDimensionRatio -> I
    androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors -> C
    int mDimensionRatioSide -> J
    int mMatchConstraintMinHeight -> k
    androidx.constraintlayout.solver.widgets.ResolutionDimension mResolutionHeight -> d
    androidx.constraintlayout.solver.widgets.ConstraintWidget[] mNextChainWidget -> z0
    int mDistToRight -> i0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop -> v
    androidx.constraintlayout.solver.widgets.ConstraintWidget mParent -> F
    int[] mResolvedMatchConstraintDefault -> g
    boolean mOptimizerMeasurable -> q0
    int mVerticalChainStyle -> u0
    boolean mTopHasCentered -> m0
    int DIMENSION_VERTICAL -> a1
    float DEFAULT_BIAS -> b1
    int mOffsetX -> S
    209:209:void <clinit>() -> <clinit>
    407:409:void <init>() -> <init>
    419:426:void <init>(int,int,int,int) -> <init>
    435:436:void <init>(int,int) -> <init>
    101:101:int getMaxHeight() -> A
    105:105:int getMaxWidth() -> B
    940:940:int getMinHeight() -> C
    931:931:int getMinWidth() -> D
    798:812:int getOptimizerWrapHeight() -> E
    780:794:int getOptimizerWrapWidth() -> F
    555:555:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> G
    394:397:androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionHeight() -> H
    383:386:androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionWidth() -> I
    967:967:int getRight() -> J
    539:546:androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer() -> K
    912:912:int getRootX() -> L
    922:922:int getRootY() -> M
    958:958:int getTop() -> N
    616:616:java.lang.String getType() -> O
    996:996:float getVerticalBiasPercent() -> P
    2283:2303:androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget() -> Q
    1670:1670:int getVerticalChainStyle() -> R
    2178:2178:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> S
    643:643:int getVisibility() -> T
    773:776:int getWidth() -> U
    842:842:int getWrapHeight() -> V
    821:821:int getWrapWidth() -> W
    755:755:int getX() -> X
    764:764:int getY() -> Y
    1022:1022:boolean hasBaseline() -> Z
    353:354:void analyze(int) -> a
    442:450:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> a
    588:589:void setHeightWrapContent(boolean) -> a
    605:608:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> a
    659:660:void setDebugName(java.lang.String) -> a
    679:692:void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String) -> a
    1100:1124:void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int) -> a
    1254:1261:void setHorizontalMatchStyle(int,int,int,float) -> a
    1349:1351:void setDimensionRatio(float,int) -> a
    1378:1379:void setHorizontalBiasPercent(float) -> a
    1442:1450:void setDimension(int,int) -> a
    1461:1495:void setFrame(int,int,int,int) -> a
    1505:1511:void setFrame(int,int,int) -> a
    1587:1588:void setCompanionWidget(java.lang.Object) -> a
    1677:1677:boolean allowedInBarrier() -> a
    1691:1691:void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    1704:1708:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> a
    1719:1720:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int) -> a
    1723:1724:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> a
    1728:1731:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> a
    1744:1746:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int) -> a
    1759:1760:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> a
    1776:1778:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength) -> a
    1794:1838:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> a
    1998:2051:void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    2132:2134:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> a
    2203:2207:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> a
    2337:2522:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    2534:2588:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> a
    2612:2753:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,int,int,int,float,boolean) -> a
    369:375:boolean isFullyResolved() -> a0
    572:573:void setWidthWrapContent(boolean) -> b
    700:707:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> b
    1007:1012:float getBiasPercent(int) -> b
    1146:1154:void forceUpdateDrawPosition() -> b
    1163:1167:void setDrawOrigin(int,int) -> b
    1272:1279:void setVerticalMatchStyle(int,int,int,float) -> b
    1287:1289:void setDimensionRatio(java.lang.String) -> b
    1621:1622:void setHorizontalWeight(float) -> b
    2115:2123:void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
    2215:2219:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> b
    595:595:boolean isHeightWrapContent() -> b0
    625:626:void setType(java.lang.String) -> c
    1050:1050:java.util.ArrayList getAnchors() -> c
    1388:1389:void setVerticalBiasPercent(float) -> c
    1520:1525:void setHorizontalDimension(int,int) -> c
    2100:2107:void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> c
    2188:2193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> c
    2865:2882:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> c
    2227:2231:boolean isInHorizontalChain() -> c0
    512:529:boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> d
    852:857:int getLength(int) -> d
    1031:1031:int getBaselineDistance() -> d
    1238:1243:void setLength(int,int) -> d
    1630:1631:void setVerticalWeight(float) -> d
    2270:2274:boolean isInVerticalChain() -> d0
    564:565:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> e
    976:976:int getBottom() -> e
    1089:1091:void setOffset(int,int) -> e
    1548:1553:int getRelativePositioning(int) -> e
    492:502:boolean isInsideConstraintLayout() -> e0
    1041:1041:java.lang.Object getCompanionWidget() -> f
    1078:1080:void setOrigin(int,int) -> f
    2074:2092:void resetAnchors(int) -> f
    472:472:boolean isRoot() -> f0
    1564:1569:void setRelativePositioning(int,int) -> g
    1577:1578:void setBaselineDistance(int) -> g
    1612:1612:int getContainerItemSkip() -> g
    482:482:boolean isRootContainer() -> g0
    652:652:java.lang.String getDebugName() -> h
    1534:1539:void setVerticalDimension(int,int) -> h
    1599:1604:void setContainerItemSkip(int) -> h
    125:125:boolean isSpreadHeight() -> h0
    1204:1205:void setDrawHeight(int) -> i
    1359:1359:float getDimensionRatio() -> i
    117:117:boolean isSpreadWidth() -> i0
    1195:1196:void setDrawWidth(int) -> j
    1368:1368:int getDimensionRatioSide() -> j
    580:580:boolean isWidthWrapContent() -> j0
    893:893:int getDrawBottom() -> k
    1175:1177:void setDrawX(int) -> k
    257:324:void reset() -> k0
    884:884:int getDrawHeight() -> l
    1185:1187:void setDrawY(int) -> l
    1969:1989:void resetAllConstraints() -> l0
    902:902:int getDrawRight() -> m
    1225:1229:void setHeight(int) -> m
    2057:2068:void resetAnchors() -> m0
    880:880:int getDrawWidth() -> n
    1640:1641:void setHorizontalChainStyle(int) -> n
    334:337:void resetResolutionNodes() -> n0
    113:114:void setMaxHeight(int) -> o
    867:867:int getDrawX() -> o
    361:361:void resolve() -> o0
    109:110:void setMaxWidth(int) -> p
    876:876:int getDrawY() -> p
    1132:1140:void updateDrawPosition() -> p0
    830:833:int getHeight() -> q
    1410:1415:void setMinHeight(int) -> q
    343:346:void updateResolutionNodes() -> q0
    986:986:float getHorizontalBiasPercent() -> r
    1397:1402:void setMinWidth(int) -> r
    456:464:void addAnchors() -> r0
    1660:1661:void setVerticalChainStyle(int) -> s
    2240:2260:androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget() -> s
    634:635:void setVisibility(int) -> t
    1650:1650:int getHorizontalChainStyle() -> t
    716:716:java.lang.String toString() -> toString
    1213:1217:void setWidth(int) -> u
    2169:2169:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> u
    745:745:int getInternalDrawBottom() -> v
    1432:1433:void setWrapHeight(int) -> v
    741:741:int getInternalDrawRight() -> w
    1423:1424:void setWrapWidth(int) -> w
    733:733:int getInternalDrawX() -> x
    1059:1060:void setX(int) -> x
    737:737:int getInternalDrawY() -> y
    1068:1069:void setY(int) -> y
    949:949:int getLeft() -> z
    2313:2314:boolean isChainHead(int) -> z
androidx.constraintlayout.solver.widgets.ConstraintWidget$1 -> a.g.a.i.h$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintWidget$DimensionBehaviour -> b
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type -> a
    2649:1100:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment -> a.g.a.i.h$b:
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment MIDDLE -> c
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment BEGIN -> b
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment TOP -> e
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment END -> d
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment[] $VALUES -> j
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment BOTTOM -> g
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment VERTICAL_MIDDLE -> f
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment RIGHT -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment LEFT -> h
    136:135:void <clinit>() -> <clinit>
    135:135:void <init>(java.lang.String,int) -> <init>
    135:135:androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment valueOf(java.lang.String) -> valueOf
    135:135:androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> a.g.a.i.h$c:
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] $VALUES -> f
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED -> b
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT -> d
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT -> c
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT -> e
    143:142:void <clinit>() -> <clinit>
    142:142:void <init>(java.lang.String,int) -> <init>
    142:142:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    142:142:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> a.g.a.i.i:
    int mPaddingRight -> i1
    boolean DEBUG -> B1
    int mPaddingTop -> h1
    boolean DEBUG_LAYOUT -> C1
    int mPaddingLeft -> g1
    boolean DEBUG_GRAPH -> D1
    int mVerticalChainsSize -> l1
    int mHorizontalChainsSize -> k1
    int mPaddingBottom -> j1
    boolean USE_SNAPSHOT -> z1
    int mOptimizationLevel -> u1
    boolean mSkipSolver -> v1
    androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray -> m1
    int mWrapFixedHeight -> t1
    java.util.List mWidgetGroups -> o1
    int mWrapFixedWidth -> s1
    boolean mHeightMeasuredTooSmall -> x1
    boolean mWidthMeasuredTooSmall -> w1
    boolean mVerticalWrapOptimized -> r1
    int mDebugSolverPassCount -> y1
    boolean mHorizontalWrapOptimized -> q1
    androidx.constraintlayout.solver.widgets.Snapshot mSnapshot -> f1
    boolean mGroupsWrapOptimized -> p1
    int MAX_ITERATIONS -> A1
    androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray -> n1
    boolean mIsRtl -> d1
    androidx.constraintlayout.solver.LinearSystem mSystem -> e1
    82:83:void <init>() -> <init>
    94:95:void <init>(int,int,int,int) -> <init>
    104:105:void <init>(int,int) -> <init>
    113:114:void setOptimizationLevel(int) -> A
    661:661:boolean handlesInternalConstraints() -> A0
    164:164:boolean isHeightMeasuredTooSmall() -> B0
    267:267:boolean isRtl() -> C0
    159:159:boolean isWidthMeasuredTooSmall() -> D0
    630:653:void optimize() -> E0
    613:618:void optimizeReset() -> F0
    573:575:void preOptimize() -> G0
    590:601:void resetGraph() -> H0
    578:587:void solveGraph() -> I0
    718:720:void resetChains() -> J0
    141:141:java.lang.String getType() -> O
    44:45:void fillMetrics(androidx.constraintlayout.solver.Metrics) -> a
    222:237:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> a
    280:285:void analyze(int) -> a
    729:735:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    248:252:void setPadding(int,int,int,int) -> c
    259:260:void setRtl(boolean) -> c
    180:213:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> d
    744:750:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> h
    604:610:void optimizeForDimensions(int,int) -> i
    759:765:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> i
    146:154:void reset() -> k0
    298:570:void layout() -> t0
    693:703:java.util.ArrayList getHorizontalGuidelines() -> v0
    122:122:int getOptimizationLevel() -> w0
    707:707:androidx.constraintlayout.solver.LinearSystem getSystem() -> x0
    674:684:java.util.ArrayList getVerticalGuidelines() -> y0
    131:131:boolean optimizeFor(int) -> z
    777:777:java.util.List getWidgetGroups() -> z0
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup -> a.g.a.i.j:
    java.util.List mConstrainedGroup -> a
    java.util.List mStartHorizontalWidgets -> f
    int[] mGroupDimensions -> e
    java.util.HashSet mWidgetsToSetHorizontal -> h
    java.util.List mWidgetsToSolve -> j
    java.util.List mStartVerticalWidgets -> g
    int mGroupWidth -> b
    int mGroupHeight -> c
    boolean mSkipSolver -> d
    java.util.HashSet mWidgetsToSetVertical -> i
    java.util.List mUnresolvedWidgets -> k
    55:57:void <init>(java.util.List) -> <init>
    59:62:void <init>(java.util.List,boolean) -> <init>
    65:70:java.util.List getStartWidgets(int) -> a
    83:88:void addWidgetsToSet(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    99:112:java.util.List getWidgetsToSolve() -> a
    122:152:void getWidgetsToSolveTraversal(java.util.ArrayList,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    173:244:void updateResolvedDimension(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    74:79:java.util.Set getWidgetsToSet(int) -> b
    158:165:void updateUnresolvedWidgets() -> b
androidx.constraintlayout.solver.widgets.Guideline -> a.g.a.i.k:
    int mRelativeEnd -> e1
    int mRelativeBegin -> d1
    boolean mIsPositionRelaxed -> h1
    int mMinimumPosition -> i1
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mAnchor -> f1
    int mOrientation -> g1
    int VERTICAL -> m1
    int HORIZONTAL -> l1
    int mHeadSize -> k1
    int RELATIVE_UNKNWON -> q1
    androidx.constraintlayout.solver.widgets.Rectangle mHead -> j1
    int RELATIVE_END -> p1
    int RELATIVE_BEGIN -> o1
    int RELATIVE_PERCENT -> n1
    float mRelativePercent -> c1
    50:57:void <init>() -> <init>
    188:193:void setGuideEnd(int) -> A
    348:353:void inferRelativeEndPosition() -> A0
    168:169:void setGuidePercent(int) -> B
    332:337:void inferRelativePercentPosition() -> B0
    125:126:void setMinimumPosition(int) -> C
    89:104:void setOrientation(int) -> D
    117:117:java.lang.String getType() -> O
    61:61:boolean allowedInBarrier() -> a
    137:159:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> a
    213:246:void analyze(int) -> a
    250:285:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> a
    308:329:void setDrawOrigin(int,int) -> b
    129:133:void setPositionRelaxed(boolean) -> c
    164:164:java.util.ArrayList getAnchors() -> c
    289:304:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> c
    172:177:void setGuidePercent(float) -> e
    356:366:void cyclePosition() -> r0
    107:107:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor() -> s0
    78:85:androidx.constraintlayout.solver.widgets.Rectangle getHead() -> t0
    121:121:int getOrientation() -> u0
    200:200:int getRelativeBegin() -> v0
    65:74:int getRelativeBehaviour() -> w0
    204:204:int getRelativeEnd() -> x0
    196:196:float getRelativePercent() -> y0
    180:185:void setGuideBegin(int) -> z
    340:345:void inferRelativeBeginPosition() -> z0
androidx.constraintlayout.solver.widgets.Guideline$1 -> a.g.a.i.k$a:
    int[] $SwitchMap$androidx$constraintlayout$solver$widgets$ConstraintAnchor$Type -> a
    137:137:void <clinit>() -> <clinit>
androidx.constraintlayout.solver.widgets.Helper -> a.g.a.i.l:
    androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets -> c1
    int mWidgetsCount -> d1
    8:10:void <init>() -> <init>
    18:23:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> f
    29:30:void removeAllIds() -> r0
androidx.constraintlayout.solver.widgets.Optimizer -> a.g.a.i.m:
    boolean[] flags -> i
    int FLAG_RECOMPUTE_BOUNDS -> l
    int FLAG_USE_OPTIMIZE -> j
    int FLAG_CHAIN_DANGLING -> k
    int OPTIMIZATION_STANDARD -> h
    int OPTIMIZATION_RATIO -> f
    int OPTIMIZATION_GROUPS -> g
    int OPTIMIZATION_CHAIN -> d
    int OPTIMIZATION_DIMENSIONS -> e
    int OPTIMIZATION_DIRECT -> b
    int OPTIMIZATION_BARRIER -> c
    int OPTIMIZATION_NONE -> a
    44:44:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    57:99:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    111:134:boolean optimizableMatchConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    152:367:void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    383:486:boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> a
    671:685:void setOptimizedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int) -> a
androidx.constraintlayout.solver.widgets.Rectangle -> a.g.a.i.n:
    int height -> d
    int y -> b
    int width -> c
    int x -> a
    21:21:void <init>() -> <init>
    28:32:void setBounds(int,int,int,int) -> a
    41:41:boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle) -> a
    46:46:boolean contains(int,int) -> a
    50:50:int getCenterX() -> a
    34:38:void grow(int,int) -> b
    51:51:int getCenterY() -> b
androidx.constraintlayout.solver.widgets.ResolutionAnchor -> a.g.a.i.o:
    float resolvedOffset -> k
    int type -> l
    float offset -> i
    androidx.constraintlayout.solver.widgets.ResolutionAnchor resolvedTarget -> j
    float computedValue -> g
    androidx.constraintlayout.solver.widgets.ResolutionDimension dimension -> o
    androidx.constraintlayout.solver.widgets.ResolutionAnchor opposite -> m
    androidx.constraintlayout.solver.widgets.ResolutionDimension oppositeDimension -> q
    int BARRIER_CONNECTION -> x
    int MATCH_CONNECTION -> v
    int CHAIN_CONNECTION -> w
    int DIRECT_CONNECTION -> t
    androidx.constraintlayout.solver.widgets.ResolutionAnchor target -> h
    int CENTER_CONNECTION -> u
    androidx.constraintlayout.solver.widgets.ConstraintAnchor myAnchor -> f
    int oppositeDimensionMultiplier -> r
    int UNCONNECTED -> s
    float oppositeOffset -> n
    int dimensionMultiplier -> p
    51:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> <init>
    56:64:void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension) -> a
    79:87:void resolve(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float) -> a
    90:101:java.lang.String sType(int) -> a
    262:269:void dependsOn(int,androidx.constraintlayout.solver.widgets.ResolutionAnchor,int) -> a
    272:278:void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int) -> a
    281:290:void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension) -> a
    304:312:void addResolvedValue(androidx.constraintlayout.solver.LinearSystem) -> a
    224:225:void setType(int) -> b
    293:295:void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float) -> b
    298:301:void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension) -> b
    229:242:void reset() -> e
    110:221:void resolve() -> f
    315:315:float getResolvedValue() -> g
    245:259:void update() -> h
    68:75:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ResolutionDimension -> a.g.a.i.p:
    float value -> f
    21:23:void <init>() -> <init>
    31:38:void resolve(int) -> a
    26:28:void reset() -> e
    41:42:void remove() -> g
androidx.constraintlayout.solver.widgets.ResolutionNode -> a.g.a.i.q:
    java.util.HashSet dependents -> a
    int RESOLVED -> d
    int REMOVED -> e
    int state -> b
    int UNRESOLVED -> c
    23:35:void <init>() -> <init>
    38:39:void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode) -> a
    63:73:void didResolve() -> a
    85:85:void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension) -> a
    47:51:void invalidate() -> b
    54:60:void invalidateAnchors() -> c
    76:76:boolean isResolved() -> d
    42:44:void reset() -> e
    81:81:void resolve() -> f
androidx.constraintlayout.solver.widgets.Snapshot -> a.g.a.i.r:
    int mHeight -> d
    java.util.ArrayList mConnections -> e
    int mY -> b
    int mWidth -> c
    int mX -> a
    91:101:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    126:134:void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    109:118:void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
androidx.constraintlayout.solver.widgets.Snapshot$Connection -> a.g.a.i.r$a:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget -> b
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mAnchor -> a
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength mStrengh -> d
    int mCreator -> e
    int mMargin -> c
    47:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> <init>
    81:83:void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    61:73:void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
androidx.constraintlayout.solver.widgets.WidgetContainer -> a.g.a.i.s:
    java.util.ArrayList mChildren -> c1
    35:36:void <init>() -> <init>
    47:48:void <init>(int,int,int,int) -> <init>
    57:58:void <init>(int,int) -> <init>
    86:90:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[]) -> a
    145:170:androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float) -> a
    205:229:androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList) -> a
    292:298:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> a
    183:195:java.util.ArrayList findWidgets(int,int,int,int) -> b
    245:251:void setOffset(int,int) -> e
    72:78:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> f
    98:100:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> g
    62:64:void reset() -> k0
    259:271:void updateDrawPosition() -> p0
    108:108:java.util.ArrayList getChildren() -> r0
    117:130:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer() -> s0
    277:288:void layout() -> t0
    301:302:void removeAllChildren() -> u0
androidx.constraintlayout.widget.Barrier -> a.g.b.a:
    int BOTTOM -> n
    androidx.constraintlayout.solver.widgets.Barrier mBarrier -> j
    int START -> o
    int TOP -> l
    int RIGHT -> m
    int LEFT -> k
    int mIndicatedType -> h
    int mResolvedType -> i
    int END -> p
    115:117:void <init>(android.content.Context) -> <init>
    120:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    181:197:void init(android.util.AttributeSet) -> a
    204:204:boolean allowsGoneWidget() -> b
    135:135:int getType() -> getType
    200:201:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    144:173:void setType(int) -> setType
androidx.constraintlayout.widget.ConstraintHelper -> a.g.b.b:
    java.lang.String mReferenceIds -> g
    int[] mIds -> b
    boolean mUseViewMeasure -> f
    int mCount -> c
    android.content.Context myContext -> d
    androidx.constraintlayout.solver.widgets.Helper mHelperWidget -> e
    64:67:void <init>(android.content.Context) -> <init>
    70:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:96:void init(android.util.AttributeSet) -> a
    154:162:void validateParams() -> a
    168:201:void addID(java.lang.String) -> a
    253:253:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> a
    261:261:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> b
    229:243:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> c
    103:103:int[] getReferencedIds() -> getReferencedIds
    135:135:void onDraw(android.graphics.Canvas) -> onDraw
    142:147:void onMeasure(int,int) -> onMeasure
    207:219:void setIds(java.lang.String) -> setIds
    111:115:void setReferencedIds(int[]) -> setReferencedIds
    122:127:void setTag(int,java.lang.Object) -> setTag
androidx.constraintlayout.widget.ConstraintLayout -> a.g.b.c:
    androidx.constraintlayout.solver.Metrics mMetrics -> u
    androidx.constraintlayout.widget.ConstraintSet mConstraintSet -> l
    int mMaxWidth -> h
    int mMinWidth -> f
    boolean CACHE_MEASURED_DIMENSION -> w
    java.util.ArrayList mConstraintHelpers -> c
    java.lang.String VERSION -> x
    android.util.SparseArray mChildrenByIds -> b
    boolean DEBUG -> A
    int mLastMeasureWidthMode -> s
    int mLastMeasureWidthSize -> q
    int mLastMeasureWidth -> o
    int mConstraintSetId -> m
    java.util.HashMap mDesignIds -> n
    boolean mDirtyHierarchy -> j
    int mOptimizationLevel -> k
    androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget -> e
    int mMaxHeight -> i
    boolean ALLOWS_EMBEDDED -> v
    int mMinHeight -> g
    java.util.ArrayList mVariableDimensionsWidgets -> d
    int DESIGN_INFO_ID -> B
    java.lang.String TAG -> y
    boolean USE_CONSTRAINTS_HELPER -> z
    int mLastMeasureHeightMode -> t
    int mLastMeasureHeightSize -> r
    int mLastMeasureHeight -> p
    570:572:void <init>(android.content.Context) -> <init>
    575:577:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    580:582:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    542:554:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> a
    560:566:java.lang.Object getDesignInformation(int,java.lang.Object) -> a
    595:627:void init(android.util.AttributeSet) -> a
    808:1128:void setChildrenConstraints() -> a
    1154:1157:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> a
    1161:1255:void internalMeasureChildren(int,int) -> a
    1496:1498:void fillMetrics(androidx.constraintlayout.solver.Metrics) -> a
    1860:1864:void solveLinearSystem(java.lang.String) -> a
    2015:2015:android.view.View getViewById(int) -> a
    634:638:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    791:805:void updateHierarchy() -> b
    1131:1144:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> b
    1283:1486:void internalMeasureDimensions(int,int) -> b
    1258:1273:void updatePostMeasures() -> c
    1798:1849:void setSelfDimensionBehaviour(int,int) -> c
    1996:1996:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2023:2061:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    482:482:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1980:1980:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    482:482:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1972:1972:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1988:1988:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    787:787:int getMaxHeight() -> getMaxHeight
    777:777:int getMaxWidth() -> getMaxWidth
    740:740:int getMinHeight() -> getMinHeight
    730:730:int getMinWidth() -> getMinWidth
    1965:1965:int getOptimizationLevel() -> getOptimizationLevel
    1875:1932:void onLayout(boolean,int,int,int,int) -> onLayout
    1505:1795:void onMeasure(int,int) -> onMeasure
    656:679:void onViewAdded(android.view.View) -> onViewAdded
    686:695:void onViewRemoved(android.view.View) -> onViewRemoved
    645:649:void removeView(android.view.View) -> removeView
    3172:3181:void requestLayout() -> requestLayout
    2004:2005:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    589:592:void setId(int) -> setId
    762:767:void setMaxHeight(int) -> setMaxHeight
    749:754:void setMaxWidth(int) -> setMaxWidth
    716:721:void setMinHeight(int) -> setMinHeight
    703:708:void setMinWidth(int) -> setMinWidth
    1955:1956:void setOptimizationLevel(int) -> setOptimizationLevel
    3189:3189:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> a.g.b.c$a:
    int CHAIN_SPREAD_INSIDE -> D0
    int baselineToBaseline -> l
    int MATCH_CONSTRAINT_PERCENT -> B0
    int matchConstraintMinWidth -> K
    int topToTop -> h
    float verticalWeight -> F
    float resolvedGuidePercent -> k0
    float guidePercent -> c
    int horizontalChainStyle -> G
    int leftToLeft -> d
    boolean needsBaseline -> X
    boolean constrainedWidth -> T
    int goneEndMargin -> y
    int goneTopMargin -> u
    float circleAngle -> o
    int startToStart -> q
    int resolvedRightToLeft -> d0
    int matchConstraintMinHeight -> L
    int resolvedLeftToLeft -> b0
    int circleConstraint -> m
    int verticalChainStyle -> H
    int resolveGoneLeftMargin -> f0
    int topToBottom -> i
    boolean constrainedHeight -> U
    float dimensionRatioValue -> C
    int dimensionRatioSide -> D
    int resolvedGuideEnd -> j0
    int leftToRight -> e
    androidx.constraintlayout.solver.widgets.ConstraintWidget widget -> l0
    int UNSET -> p0
    int MATCH_CONSTRAINT -> n0
    int guideBegin -> a
    int RIGHT -> t0
    int VERTICAL -> r0
    int START -> x0
    boolean isGuideline -> Y
    int BOTTOM -> v0
    int goneRightMargin -> v
    int MATCH_CONSTRAINT_WRAP -> z0
    int endToStart -> r
    float matchConstraintPercentWidth -> O
    int editorAbsoluteX -> Q
    int CHAIN_SPREAD -> C0
    int circleRadius -> n
    int MATCH_CONSTRAINT_SPREAD -> A0
    int matchConstraintMaxWidth -> M
    int bottomToTop -> j
    boolean isInPlaceholder -> a0
    float resolvedHorizontalBias -> h0
    int CHAIN_PACKED -> E0
    int matchConstraintDefaultWidth -> I
    int rightToLeft -> f
    boolean horizontalDimensionFixed -> V
    int guideEnd -> b
    boolean isHelper -> Z
    int goneBottomMargin -> w
    float matchConstraintPercentHeight -> P
    int editorAbsoluteY -> R
    int endToEnd -> s
    java.lang.String dimensionRatio -> B
    int matchConstraintMaxHeight -> N
    int resolvedLeftToRight -> c0
    int matchConstraintDefaultHeight -> J
    int bottomToBottom -> k
    int resolveGoneRightMargin -> g0
    float horizontalWeight -> E
    int resolvedRightToRight -> e0
    int rightToRight -> g
    boolean verticalDimensionFixed -> W
    float verticalBias -> A
    int resolvedGuideBegin -> i0
    int PARENT_ID -> o0
    int LEFT -> s0
    float horizontalBias -> z
    int HORIZONTAL -> q0
    int BASELINE -> w0
    int goneStartMargin -> x
    int TOP -> u0
    boolean helped -> m0
    int goneLeftMargin -> t
    int END -> y0
    int orientation -> S
    int startToEnd -> p
    2478:2538:void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> <init>
    2649:2995:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3040:3041:void <init>(int,int) -> <init>
    3044:3045:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2465:2468:void reset() -> a
    2998:3038:void validate() -> b
    3053:3164:void resolveLayoutDirection(int) -> resolveLayoutDirection
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> a.g.b.c$a$a:
    int LAYOUT_CONSTRAINT_TOP_CREATOR -> O
    int LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF -> l
    int LAYOUT_CONSTRAINT_HEIGHT_MIN -> K
    int LAYOUT_CONSTRAINT_GUIDE_PERCENT -> h
    int LAYOUT_CONSTRAINT_HEIGHT_DEFAULT -> G
    int LAYOUT_CONSTRAINT_CIRCLE_RADIUS -> d
    int LAYOUT_CONSTRAINED_HEIGHT -> C
    int LAYOUT_EDITOR_ABSOLUTEX -> X
    int LAYOUT_GONE_MARGIN_BOTTOM -> y
    int LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT -> T
    int LAYOUT_CONSTRAINT_END_TO_END_OF -> u
    int LAYOUT_CONSTRAINT_RIGHT_CREATOR -> P
    int LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF -> q
    int LAYOUT_CONSTRAINT_HEIGHT_MAX -> L
    int LAYOUT_CONSTRAINT_TOP_TO_TOP_OF -> m
    int LAYOUT_CONSTRAINT_WIDTH_MIN -> H
    int LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF -> i
    int LAYOUT_CONSTRAINT_HORIZONTAL_BIAS -> D
    int LAYOUT_CONSTRAINT_CIRCLE_ANGLE -> e
    int UNUSED -> a
    int LAYOUT_GONE_MARGIN_START -> z
    int LAYOUT_EDITOR_ABSOLUTEY -> Y
    int LAYOUT_GONE_MARGIN_LEFT -> v
    int LAYOUT_CONSTRAINT_VERTICAL_WEIGHT -> U
    int LAYOUT_CONSTRAINT_START_TO_END_OF -> r
    int LAYOUT_CONSTRAINT_BOTTOM_CREATOR -> Q
    int LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF -> n
    int LAYOUT_CONSTRAINT_HEIGHT_PERCENT -> M
    int LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF -> j
    int LAYOUT_CONSTRAINT_WIDTH_MAX -> I
    int LAYOUT_CONSTRAINT_GUIDE_BEGIN -> f
    int LAYOUT_CONSTRAINT_VERTICAL_BIAS -> E
    int ANDROID_ORIENTATION -> b
    int LAYOUT_GONE_MARGIN_END -> A
    int LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE -> V
    int LAYOUT_GONE_MARGIN_TOP -> w
    int LAYOUT_CONSTRAINT_BASELINE_CREATOR -> R
    int LAYOUT_CONSTRAINT_START_TO_START_OF -> s
    int LAYOUT_CONSTRAINT_LEFT_CREATOR -> N
    int LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF -> o
    int LAYOUT_CONSTRAINT_WIDTH_PERCENT -> J
    int LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF -> k
    int LAYOUT_CONSTRAINT_WIDTH_DEFAULT -> F
    int LAYOUT_CONSTRAINT_GUIDE_END -> g
    int LAYOUT_CONSTRAINED_WIDTH -> B
    int LAYOUT_CONSTRAINT_CIRCLE -> c
    android.util.SparseIntArray map -> Z
    int LAYOUT_GONE_MARGIN_RIGHT -> x
    int LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE -> W
    int LAYOUT_CONSTRAINT_END_TO_START_OF -> t
    int LAYOUT_CONSTRAINT_DIMENSION_RATIO -> S
    int LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF -> p
    2592:2645:void <clinit>() -> <clinit>
    2540:2540:void <init>() -> <init>
androidx.constraintlayout.widget.ConstraintSet -> a.g.b.d:
    int TRANSLATION_Z -> D0
    int VERTICAL_GUIDELINE -> l
    int END_MARGIN -> K
    int HEIGHT_MAX -> H0
    int CIRCLE -> L0
    java.util.HashMap mConstraints -> a
    int MATCH_CONSTRAINT -> d
    int HEIGHT_PERCENT -> P0
    int BARRIER_ALLOWS_GONE_WIDGETS -> T0
    int GUIDE_BEGIN -> T
    int START -> u
    int ORIENTATION -> d0
    int END_TO_END -> L
    int VISIBLE -> m
    int START_MARGIN -> h0
    android.util.SparseIntArray mapToConstant -> C
    int TOP_TO_BOTTOM -> l0
    int BASELINE_TO_BASELINE -> D
    int WRAP_CONTENT -> e
    int HORIZONTAL_WEIGHT -> p0
    int ALPHA -> t0
    int SCALE_X -> x0
    boolean DEBUG -> z
    int END -> v
    int GUIDE_END -> U
    int INVISIBLE -> n
    int TRANSLATION_Y -> C0
    int END_TO_START -> M
    int WIDTH_MAX -> G0
    int MATCH_CONSTRAINT_WRAP -> f
    int ROTATION -> K0
    int BOTTOM_MARGIN -> E
    int WIDTH_PERCENT -> O0
    int CONSTRAINT_REFERENCED_IDS -> S0
    int GUIDE_PERCENT -> V
    int CHAIN_SPREAD -> w
    int GONE_BOTTOM_MARGIN -> N
    int GONE -> o
    int LEFT_TO_RIGHT -> c0
    int RIGHT_TO_RIGHT -> g0
    int BOTTOM_TO_BOTTOM -> F
    int MATCH_CONSTRAINT_SPREAD -> g
    int TOP_MARGIN -> k0
    int VIEW_ID -> o0
    int VERTICAL_STYLE -> s0
    int ROTATION_Y -> w0
    int CHAIN_SPREAD_INSIDE -> x
    int HORIZONTAL_BIAS -> W
    java.lang.String TAG -> b
    int LEFT -> p
    int GONE_END_MARGIN -> O
    int TRANSLATION_X -> B0
    int PARENT_ID -> h
    int HEIGHT_DEFAULT -> F0
    int BOTTOM_TO_TOP -> G
    int[] VISIBILITY_FLAGS -> A
    int HEIGHT_MIN -> J0
    int CIRCLE_ANGLE -> N0
    int BARRIER_DIRECTION -> R0
    int LAYOUT_HEIGHT -> X
    int CHAIN_PACKED -> y
    int GONE_LEFT_MARGIN -> P
    int RIGHT -> q
    int LEFT_TO_LEFT -> b0
    int DIMENSION_RATIO -> H
    int RIGHT_TO_LEFT -> f0
    int HORIZONTAL -> i
    int START_TO_START -> j0
    int VERTICAL_BIAS -> n0
    int HORIZONTAL_STYLE -> r0
    int ROTATION_X -> v0
    int LAYOUT_VISIBILITY -> Y
    int TRANSFORM_PIVOT_X -> z0
    int TOP -> r
    int GONE_RIGHT_MARGIN -> Q
    int TRANSFORM_PIVOT_Y -> A0
    int VERTICAL -> j
    int WIDTH_DEFAULT -> E0
    int EDITOR_ABSOLUTE_X -> I
    int WIDTH_MIN -> I0
    int CIRCLE_RADIUS -> M0
    int CHAIN_USE_RTL -> Q0
    int LAYOUT_WIDTH -> Z
    int UNUSED -> U0
    int GONE_START_MARGIN -> R
    int BOTTOM -> s
    int LEFT_MARGIN -> a0
    int EDITOR_ABSOLUTE_Y -> J
    int HORIZONTAL_GUIDELINE -> k
    int RIGHT_MARGIN -> e0
    int START_TO_END -> i0
    int BARRIER_TYPE -> B
    int UNSET -> c
    int TOP_TO_TOP -> m0
    int VERTICAL_WEIGHT -> q0
    int ELEVATION -> u0
    int BASELINE -> t
    int SCALE_Y -> y0
    int GONE_TOP_MARGIN -> S
    195:352:void <clinit>() -> <clinit>
    59:198:void <init>() -> <init>
    684:685:void clone(android.content.Context,int) -> a
    693:697:void clone(androidx.constraintlayout.widget.ConstraintSet) -> a
    761:781:void clone(androidx.constraintlayout.widget.Constraints) -> a
    789:791:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> a
    909:910:void center(int,int,int,int,int,int,int,float) -> a
    1048:1049:void createHorizontalChain(int,int,int,int,int[],float[],int) -> a
    1071:1072:void createHorizontalChain(int,int,int,int,int[],float[],int,int,int) -> a
    1106:1120:void connect(int,int,int,int,int) -> a
    1219:1232:void connect(int,int,int,int) -> a
    1319:1324:void centerHorizontally(int,int) -> a
    1361:1362:void clear(int) -> a
    1518:1519:void setDimensionRatio(int,java.lang.String) -> a
    1558:1559:void setApplyElevation(int,boolean) -> a
    1656:1659:void setTransformPivot(int,float,float) -> a
    1741:1745:void constrainCircle(int,int,int,float) -> a
    1818:1819:void constrainPercentHeight(int,float) -> a
    1909:1917:void addToHorizontalChain(int,int,int) -> a
    2062:2067:void createBarrier(int,int,int[]) -> a
    2181:2185:int lookupID(android.content.res.TypedArray,int,int) -> a
    2189:2193:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> a
    2197:2440:void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> a
    2443:2476:int[] convertReferenceString(android.view.View,java.lang.String) -> a
    797:889:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout) -> b
    951:955:void centerHorizontally(int,int,int,int,int,int,int,float) -> b
    1065:1066:void createHorizontalChainRtl(int,int,int,int,int[],float[],int) -> b
    1333:1338:void centerHorizontallyRtl(int,int) -> b
    1547:1547:boolean getApplyElevation(int) -> b
    1689:1692:void setTranslation(int,float,float) -> b
    1807:1808:void constrainPercentWidth(int,float) -> b
    1927:1935:void addToHorizontalChainRTL(int,int,int) -> b
    2145:2178:void load(android.content.Context,int) -> b
    355:355:androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int) -> c
    705:753:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> c
    971:975:void centerHorizontallyRtl(int,int,int,int,int,int,int,float) -> c
    1011:1012:void createVerticalChain(int,int,int,int,int[],float[],int) -> c
    1348:1353:void centerVertically(int,int) -> c
    1538:1539:void setAlpha(int,float) -> c
    1945:1953:void addToVerticalChain(int,int,int) -> c
    991:995:void centerVertically(int,int,int,int,int,int,int,float) -> d
    1371:1418:void clear(int,int) -> d
    1463:1488:void setGoneMargin(int,int,int) -> d
    1568:1570:void setElevation(int,float) -> d
    1995:2038:void removeFromHorizontalChain(int) -> d
    1428:1453:void setMargin(int,int,int) -> e
    1831:1832:void constrainDefaultHeight(int,int) -> e
    1963:1985:void removeFromVerticalChain(int) -> e
    2101:2104:void setGuidelinePercent(int,float) -> e
    1497:1498:void setHorizontalBias(int,float) -> f
    1844:1845:void constrainDefaultWidth(int,int) -> f
    2110:2113:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> f
    1714:1715:void constrainHeight(int,int) -> g
    1856:1857:void setHorizontalWeight(int,float) -> g
    2117:2119:java.lang.String sideToString(int) -> g
    1579:1580:void setRotation(int,float) -> h
    1757:1758:void constrainMaxHeight(int,int) -> h
    1589:1590:void setRotationX(int,float) -> i
    1770:1771:void constrainMaxWidth(int,int) -> i
    1599:1600:void setRotationY(int,float) -> j
    1783:1784:void constrainMinHeight(int,int) -> j
    1609:1610:void setScaleX(int,float) -> k
    1796:1797:void constrainMinWidth(int,int) -> k
    1619:1620:void setScaleY(int,float) -> l
    1727:1728:void constrainWidth(int,int) -> l
    1631:1632:void setTransformPivotX(int,float) -> m
    2047:2050:void create(int,int) -> m
    1643:1644:void setTransformPivotY(int,float) -> n
    2108:2108:void setBarrierType(int,int) -> n
    1668:1669:void setTranslationX(int,float) -> o
    2076:2080:void setGuidelineBegin(int,int) -> o
    1678:1679:void setTranslationY(int,float) -> p
    2089:2092:void setGuidelineEnd(int,int) -> p
    1701:1702:void setTranslationZ(int,float) -> q
    1882:1883:void setHorizontalChainStyle(int,int) -> q
    1507:1508:void setVerticalBias(int,float) -> r
    1898:1899:void setVerticalChainStyle(int,int) -> r
    1528:1529:void setVisibility(int,int) -> s
    1867:1868:void setVerticalWeight(int,float) -> s
androidx.constraintlayout.widget.ConstraintSet$1 -> a.g.b.d$a:
androidx.constraintlayout.widget.ConstraintSet$Constraint -> a.g.b.d$b:
    float translationX -> e0
    int goneEndMargin -> O
    int topToTop -> l
    float translationZ -> g0
    float guidePercent -> g
    int goneLeftMargin -> K
    int leftToLeft -> h
    int bottomMargin -> G
    int mViewId -> d
    float heightPercent -> q0
    int orientation -> C
    float rotationY -> Z
    java.lang.String mReferenceIdString -> v0
    int circleRadius -> y
    float horizontalWeight -> R
    int verticalChainStyle -> T
    float scaleX -> a0
    int goneStartMargin -> P
    float transformPivotX -> c0
    int startToEnd -> q
    int goneTopMargin -> L
    int topToBottom -> m
    int endMargin -> H
    int leftToRight -> i
    int widthMax -> l0
    int leftMargin -> D
    int widthDefault -> j0
    int guideBegin -> e
    int widthMin -> n0
    int mHelperType -> t0
    float elevation -> W
    boolean mBarrierAllowsGoneWidgets -> r0
    boolean mIsGuideline -> a
    int startToStart -> r
    boolean constrainedWidth -> h0
    int bottomToTop -> n
    float transformPivotY -> d0
    int goneRightMargin -> M
    float translationY -> f0
    int rightToLeft -> j
    int startMargin -> I
    int guideEnd -> f
    boolean applyElevation -> V
    int rightMargin -> E
    int mWidth -> b
    float widthPercent -> p0
    int editorAbsoluteX -> A
    float rotation -> X
    float horizontalBias -> u
    int endToStart -> s
    float scaleY -> b0
    int goneBottomMargin -> N
    int bottomToBottom -> o
    int visibility -> J
    int rightToRight -> k
    int topMargin -> F
    int heightDefault -> k0
    int[] mReferenceIds -> u0
    int editorAbsoluteY -> B
    int mHeight -> c
    int heightMin -> o0
    int heightMax -> m0
    java.lang.String dimensionRatio -> w
    int mBarrierDirection -> s0
    float circleAngle -> z
    float rotationX -> Y
    int UNSET -> w0
    float verticalBias -> v
    int circleConstraint -> x
    float alpha -> U
    int endToEnd -> t
    float verticalWeight -> Q
    int horizontalChainStyle -> S
    boolean constrainedHeight -> i0
    int baselineToBaseline -> p
    358:437:void <init>() -> <init>
    358:358:void <init>(androidx.constraintlayout.widget.ConstraintSet$1) -> <init>
    358:358:void access$100(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    358:358:void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    358:358:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    526:533:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    536:550:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    553:609:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    612:674:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    358:358:java.lang.Object clone() -> clone
    442:522:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
androidx.constraintlayout.widget.Constraints -> a.g.b.e:
    androidx.constraintlayout.widget.ConstraintSet myConstraintSet -> b
    java.lang.String TAG -> c
    41:43:void <init>(android.content.Context) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    135:136:void init(android.util.AttributeSet) -> a
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    131:131:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    143:143:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    147:152:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    159:159:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> a.g.b.e$a:
    float alpha -> F0
    boolean applyElevation -> G0
    float rotation -> I0
    float elevation -> H0
    float rotationY -> K0
    float rotationX -> J0
    float scaleY -> M0
    float scaleX -> L0
    float transformPivotY -> O0
    float transformPivotX -> N0
    float translationY -> Q0
    float translationX -> P0
    float translationZ -> R0
    82:83:void <init>(int,int) -> <init>
    86:87:void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams) -> <init>
    90:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Group -> a.g.b.f:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:57:void init(android.util.AttributeSet) -> a
    88:91:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> a
    65:80:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> c
androidx.constraintlayout.widget.Guideline -> a.g.b.g:
    55:57:void <init>(android.content.Context) -> <init>
    60:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    93:94:void onMeasure(int,int) -> onMeasure
    102:105:void setGuidelineBegin(int) -> setGuidelineBegin
    113:116:void setGuidelineEnd(int) -> setGuidelineEnd
    123:126:void setGuidelinePercent(float) -> setGuidelinePercent
    79:79:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> a.g.b.h:
    android.view.View mContent -> c
    int mEmptyVisibility -> d
    int mContentId -> b
    49:51:void <init>(android.content.Context) -> <init>
    54:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:66:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    69:85:void init(android.util.AttributeSet) -> a
    194:204:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> a
    147:161:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> b
    113:113:android.view.View getContent() -> getContent
    104:104:int getEmptyVisibility() -> getEmptyVisibility
    121:140:void onDraw(android.graphics.Canvas) -> onDraw
    169:187:void setContentId(int) -> setContentId
    95:96:void setEmptyVisibility(int) -> setEmptyVisibility
androidx.constraintlayout.widget.R -> a.g.b.i:
    668:668:void <init>() -> <init>
androidx.constraintlayout.widget.R$attr -> a.g.b.i$a:
    455:455:void <init>() -> <init>
androidx.constraintlayout.widget.R$id -> a.g.b.i$b:
    212:212:void <init>() -> <init>
androidx.constraintlayout.widget.R$styleable -> a.g.b.i$c:
    309:217:void <clinit>() -> <clinit>
    692:692:void <init>() -> <init>
androidx.coordinatorlayout.R -> a.h.a:
    668:668:void <init>() -> <init>
androidx.coordinatorlayout.R$attr -> a.h.a$a:
    455:455:void <init>() -> <init>
androidx.coordinatorlayout.R$color -> a.h.a$b:
    793:793:void <init>() -> <init>
androidx.coordinatorlayout.R$dimen -> a.h.a$c:
    786:786:void <init>() -> <init>
androidx.coordinatorlayout.R$drawable -> a.h.a$d:
    78:78:void <init>() -> <init>
androidx.coordinatorlayout.R$id -> a.h.a$e:
    118:118:void <init>() -> <init>
androidx.coordinatorlayout.R$integer -> a.h.a$f:
    871:871:void <init>() -> <init>
androidx.coordinatorlayout.R$layout -> a.h.a$g:
    551:551:void <init>() -> <init>
androidx.coordinatorlayout.R$string -> a.h.a$h:
    126:126:void <init>() -> <init>
androidx.coordinatorlayout.R$style -> a.h.a$i:
    518:518:void <init>() -> <init>
androidx.coordinatorlayout.R$styleable -> a.h.a$j:
    724:57:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    118:152:void <clinit>() -> <clinit>
    207:208:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    216:255:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:160:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1615:1627:void addPreDrawListener() -> addPreDrawListener
    1760:1760:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1281:1286:int clamp(int,int,int) -> clamp
    1066:1078:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    854:875:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1523:1535:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1722:1735:boolean doViewsOverlap(android.view.View,android.view.View) -> doViewsOverlap
    1253:1277:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    332:345:void drawableStateChanged() -> drawableStateChanged
    1584:1601:void ensurePreDrawListener() -> ensurePreDrawListener
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1755:1755:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1740:1740:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1745:1750:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    979:981:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1547:1552:java.util.List getDependencies(android.view.View) -> getDependencies
    1576:1577:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1566:1571:java.util.List getDependents(android.view.View) -> getDependents
    732:733:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1090:1096:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    992:1063:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    600:607:int getKeyline(int) -> getKeyline
    965:967:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    401:401:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    2017:2017:int getNestedScrollAxes() -> getNestedScrollAxes
    654:685:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    327:327:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    742:742:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    737:737:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    444:457:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1607:1607:boolean hasDependencies(android.view.View) -> hasDependencies
    1704:1710:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1193:1217:void layoutChild(android.view.View,int) -> layoutChild
    1106:1115:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1130:1183:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1413:1420:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1653:1692:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    264:279:void onAttachedToWindow() -> onAttachedToWindow
    1307:1409:void onChildViewsChanged(int) -> onChildViewsChanged
    283:293:void onDetachedFromWindow() -> onDetachedFromWindow
    926:934:void onDraw(android.graphics.Canvas) -> onDraw
    532:545:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    906:922:void onLayout(boolean,int,int,int,int) -> onLayout
    889:891:void onLayoutChild(android.view.View,int) -> onLayoutChild
    767:850:void onMeasure(int,int) -> onMeasure
    760:762:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1962:1986:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1992:2012:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1913:1914:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1919:1957:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1852:1854:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1859:1861:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1868:1909:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1796:1797:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1802:1819:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3241:3264:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3269:3287:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1765:1765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1771:1791:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1823:1824:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1829:1847:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    551:587:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    615:649:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    461:527:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    689:722:void prepareChildren() -> prepareChildren
    953:955:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    164:166:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1634:1641:void removePreDrawListener() -> removePreDrawListener
    3293:3301:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    592:597:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    412:437:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1247:1247:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1225:1231:int resolveGravity(int) -> resolveGravity
    1239:1239:int resolveKeylineGravity(int) -> resolveKeylineGravity
    938:940:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1494:1500:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1503:1509:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    259:260:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    302:318:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    380:381:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    369:370:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    354:360:void setVisibility(int) -> setVisibility
    384:393:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3305:3329:void setupForInsets() -> setupForInsets
    349:349:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$a:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> a
    3312:3312:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3316:3316:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$b:
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$c:
    2091:2092:void <init>() -> <init>
    2102:2103:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2229:2229:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2796:2796:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2195:2195:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2213:2213:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2385:2386:java.lang.Object getTag(android.view.View) -> getTag
    2256:2256:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2716:2716:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2114:2114:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2286:2286:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2305:2305:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2124:2124:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2151:2151:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2359:2359:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2330:2330:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2668:2668:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2696:2696:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2599:2599:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2633:2636:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2527:2527:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2540:2544:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2583:2587:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    2443:2443:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2469:2473:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2738:2738:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2756:2756:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2778:2778:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2398:2398:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2426:2430:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2484:2484:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2509:2512:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2175:2175:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2372:2374:void setTag(android.view.View,java.lang.Object) -> setTag
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$d:
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent -> androidx.coordinatorlayout.widget.CoordinatorLayout$e:
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$f:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> b
    3218:3219:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3223:3226:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3230:3235:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$g:
    boolean mDidBlockInteraction -> m
    boolean mDidAcceptNestedScrollTouch -> n
    boolean mDidAcceptNestedScrollNonTouch -> o
    boolean mDidChangeAfterNestedScroll -> p
    int mInsetOffsetY -> j
    androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior -> a
    int dodgeInsetEdges -> h
    int mInsetOffsetX -> i
    int mAnchorId -> f
    java.lang.Object mBehaviorTag -> r
    int insetEdge -> g
    int anchorGravity -> d
    int keyline -> e
    int gravity -> c
    android.view.View mAnchorView -> k
    android.view.View mAnchorDirectChild -> l
    boolean mBehaviorResolved -> b
    android.graphics.Rect mLastChildRect -> q
    2869:2870:void <init>(int,int) -> <init>
    2873:2905:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2908:2909:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2912:2913:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2916:2917:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2965:2980:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> a
    2987:2988:void setLastChildRect(android.graphics.Rect) -> a
    3003:3003:boolean checkAnchorChanged() -> a
    3058:3066:void setNestedScrollAccepted(int,boolean) -> a
    3069:3071:boolean isNestedScrollAccepted(int) -> a
    3083:3084:void setChangedAfterNestedScroll(boolean) -> a
    3100:3100:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    3125:3133:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> a
    3141:3175:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> a
    3210:3212:boolean shouldDodge(android.view.View,int) -> a
    3014:3017:boolean didBlockInteraction() -> b
    3033:3037:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> b
    3054:3055:void resetNestedScroll(int) -> b
    3186:3203:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> b
    2926:2926:int getAnchorId() -> c
    2940:2942:void setAnchorId(int) -> c
    2952:2952:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> d
    3079:3079:boolean getChangedAfterNestedScroll() -> e
    2995:2995:android.graphics.Rect getLastChildRect() -> f
    3112:3113:void invalidateAnchor() -> g
    3087:3088:void resetChangedAfterNestedScroll() -> h
    3050:3051:void resetTouchBehaviorTracking() -> i
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$h:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> b
    2020:2020:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    2023:2024:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$i:
    android.util.SparseArray behaviorStates -> b
    3373:3373:void <clinit>() -> <clinit>
    3335:3348:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3351:3352:void <init>(android.os.Parcelable) -> <init>
    3356:3371:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$i$a:
    3374:3374:void <init>() -> <init>
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3377:3377:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3382:3382:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3374:3374:java.lang.Object[] newArray(int) -> newArray
    3387:3387:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$j:
    2031:2031:void <init>() -> <init>
    2034:2041:int compare(android.view.View,android.view.View) -> a
    2031:2031:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> a.h.b.a:
    androidx.collection.SimpleArrayMap mGraph -> b
    java.util.HashSet mSortTmpMarked -> d
    androidx.core.util.Pools$Pool mListPool -> a
    java.util.ArrayList mSortResult -> c
    39:44:void <init>() -> <init>
    54:57:void addNode(java.lang.Object) -> a
    76:77:void addEdge(java.lang.Object,java.lang.Object) -> a
    143:150:void clear() -> a
    174:179:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> a
    213:215:void poolList(java.util.ArrayList) -> a
    63:63:boolean contains(java.lang.Object) -> b
    162:170:java.util.ArrayList getSortedList() -> b
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> c
    200:200:int size() -> c
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> d
    205:209:java.util.ArrayList getEmptyList() -> d
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> e
androidx.coordinatorlayout.widget.ViewGroupUtils -> a.h.b.b:
    java.lang.ThreadLocal sMatrix -> a
    java.lang.ThreadLocal sRectF -> b
    35:36:void <clinit>() -> <clinit>
    96:97:void <init>() -> <init>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> b
androidx.core.R -> a.i.a:
    668:668:void <init>() -> <init>
androidx.core.R$attr -> a.i.a$a:
    455:455:void <init>() -> <init>
androidx.core.R$color -> a.i.a$b:
    471:471:void <init>() -> <init>
androidx.core.R$dimen -> a.i.a$c:
    750:750:void <init>() -> <init>
androidx.core.R$drawable -> a.i.a$d:
    806:806:void <init>() -> <init>
androidx.core.R$id -> a.i.a$e:
    785:785:void <init>() -> <init>
androidx.core.R$integer -> a.i.a$f:
    790:790:void <init>() -> <init>
androidx.core.R$layout -> a.i.a$g:
    134:134:void <init>() -> <init>
androidx.core.R$string -> a.i.a$h:
    871:871:void <init>() -> <init>
androidx.core.R$style -> a.i.a$i:
    551:551:void <init>() -> <init>
androidx.core.R$styleable -> a.i.a$j:
    287:272:void <clinit>() -> <clinit>
    126:126:void <init>() -> <init>
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat -> a.i.b.a:
    int FLAG_REPORT_VIEW_IDS -> j
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> k
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> h
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> i
    int FEEDBACK_ALL_MASK -> f
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> g
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> d
    int FEEDBACK_BRAILLE -> e
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> b
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> c
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> a
    181:181:void <init>() -> <init>
    197:201:java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> a
    286:293:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> a
    307:309:java.lang.String capabilityToString(int) -> a
    215:242:java.lang.String feedbackTypeToString(int) -> b
    255:257:java.lang.String flagToString(int) -> c
androidx.core.app.ActivityCompat -> a.i.c.a:
    androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate -> d
    149:151:void <init>() -> <init>
    161:162:void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate) -> a
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> a
    233:238:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> a
    270:277:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> a
    287:292:void finishAffinity(android.app.Activity) -> a
    362:368:android.view.View requireViewById(android.app.Activity,int) -> a
    383:389:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> a
    491:524:void requestPermissions(android.app.Activity,java.lang.String[],int) -> a
    548:551:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> a
    565:565:androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent) -> a
    304:309:void finishAfterTransition(android.app.Activity) -> b
    402:408:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> b
    329:341:android.net.Uri getReferrer(android.app.Activity) -> c
    207:208:boolean invalidateOptionsMenu(android.app.Activity) -> d
    411:414:void postponeEnterTransition(android.app.Activity) -> e
    577:585:void recreate(android.app.Activity) -> f
    417:420:void startPostponedEnterTransition(android.app.Activity) -> g
androidx.core.app.ActivityCompat$1 -> a.i.c.a$a:
    int val$requestCode -> d
    android.app.Activity val$activity -> c
    java.lang.String[] val$permissions -> b
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:521:void run() -> run
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback -> a.i.c.a$b:
androidx.core.app.ActivityCompat$PermissionCompatDelegate -> a.i.c.a$c:
    boolean onActivityResult(android.app.Activity,int,int,android.content.Intent) -> a
    boolean requestPermissions(android.app.Activity,java.lang.String[],int) -> a
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> a.i.c.a$d:
    void validateRequestPermissionsRequestCode(int) -> a
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> a.i.c.a$e:
    androidx.core.app.SharedElementCallback mCallback -> a
    591:593:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    622:622:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    628:628:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    616:617:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    611:612:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    605:607:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    598:600:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    635:642:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> a.i.c.a$e$a:
    android.app.SharedElementCallback$OnSharedElementsReadyListener val$listener -> a
    androidx.core.app.ActivityCompat$SharedElementCallback21Impl this$0 -> b
    636:636:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    639:640:void onSharedElementsReady() -> a
androidx.core.app.ActivityManagerCompat -> a.i.c.b:
    30:30:void <init>() -> <init>
    40:43:boolean isLowRamDevice(android.app.ActivityManager) -> a
androidx.core.app.ActivityOptionsCompat -> a.i.c.c:
    java.lang.String EXTRA_USAGE_TIME_REPORT -> a
    java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES -> b
    299:300:void <init>() -> <init>
    68:72:androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> a
    122:126:androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> a
    151:155:androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> a
    179:183:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> a
    207:219:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[]) -> a
    314:314:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> a
    324:324:android.graphics.Rect getLaunchBounds() -> a
    346:346:void update(androidx.core.app.ActivityOptionsCompat) -> a
    374:374:void requestUsageTimeReport(android.app.PendingIntent) -> a
    98:102:androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> b
    336:336:android.os.Bundle toBundle() -> b
    246:249:androidx.core.app.ActivityOptionsCompat makeBasic() -> c
    234:237:androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind() -> d
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl -> a.i.c.c$a:
    android.app.ActivityOptions mActivityOptions -> c
    256:258:void <init>(android.app.ActivityOptions) -> <init>
    267:272:void update(androidx.core.app.ActivityOptionsCompat) -> a
    276:279:void requestUsageTimeReport(android.app.PendingIntent) -> a
    283:286:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> a
    292:295:android.graphics.Rect getLaunchBounds() -> a
    262:262:android.os.Bundle toBundle() -> b
androidx.core.app.ActivityRecreator -> a.i.c.d:
    java.lang.reflect.Method requestRelaunchActivityMethod -> g
    java.lang.reflect.Field tokenField -> d
    java.lang.String LOG_TAG -> a
    java.lang.reflect.Method performStopActivity3ParamsMethod -> e
    java.lang.reflect.Field mainThreadField -> c
    java.lang.reflect.Method performStopActivity2ParamsMethod -> f
    java.lang.Class activityThreadClass -> b
    android.os.Handler mainHandler -> h
    90:99:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    108:170:boolean recreate(android.app.Activity) -> a
    244:280:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> a
    299:308:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> a
    361:363:java.lang.Class getActivityThreadClass() -> a
    285:294:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> b
    341:345:java.lang.reflect.Field getMainThreadField() -> b
    317:318:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> c
    351:355:java.lang.reflect.Field getTokenField() -> c
    313:313:boolean needsRelaunchCall() -> d
androidx.core.app.ActivityRecreator$1 -> a.i.c.d$a:
    java.lang.Object val$token -> c
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> b
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> a.i.c.d$b:
    android.app.Application val$application -> b
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> c
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> a.i.c.d$c:
    java.lang.Object val$activityThread -> b
    java.lang.Object val$token -> c
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:275:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> a.i.c.d$d:
    boolean mStopQueued -> e
    java.lang.Object currentlyRecreatingToken -> a
    boolean mStarted -> c
    android.app.Activity mActivity -> b
    boolean mDestroyed -> d
    182:184:void <init>(android.app.Activity) -> <init>
    188:188:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    228:235:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:215:void onActivityPaused(android.app.Activity) -> onActivityPaused
    202:202:void onActivityResumed(android.app.Activity) -> onActivityResumed
    219:219:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    195:198:void onActivityStarted(android.app.Activity) -> onActivityStarted
    224:224:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AlarmManagerCompat -> a.i.c.e:
    229:230:void <init>() -> <init>
    59:66:void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent) -> a
    117:122:void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> a
    162:167:void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent) -> b
    222:227:void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> c
androidx.core.app.AppComponentFactory -> a.i.c.f:
    40:40:void <init>() -> <init>
    104:107:android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String) -> a
    128:131:android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> a
    148:151:android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> b
    195:198:android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String) -> b
    172:175:android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> c
    48:48:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    57:57:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    76:76:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    67:67:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    85:85:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.AppLaunchChecker -> a.i.c.g:
    java.lang.String SHARED_PREFS_NAME -> a
    java.lang.String KEY_STARTED_FROM_LAUNCHER -> b
    87:88:void <init>() -> <init>
    51:51:boolean hasStartedFromLauncher(android.content.Context) -> a
    67:82:void onActivityCreate(android.app.Activity) -> a
androidx.core.app.AppOpsManagerCompat -> a.i.c.h:
    int MODE_DEFAULT -> d
    int MODE_IGNORED -> b
    int MODE_ERRORED -> c
    int MODE_ALLOWED -> a
    60:60:void <init>() -> <init>
    75:78:java.lang.String permissionToOp(java.lang.String) -> a
    104:109:int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> a
    156:160:int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> a
    124:129:int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String) -> b
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> b
androidx.core.app.BundleCompat -> a.i.c.i:
    94:94:void <init>() -> <init>
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> a
    121:126:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> a
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> a.i.c.i$a:
    boolean sPutIBinderMethodFetched -> e
    java.lang.reflect.Method sPutIBinderMethod -> d
    java.lang.String TAG -> a
    boolean sGetIBinderMethodFetched -> c
    java.lang.reflect.Method sGetIBinderMethod -> b
    44:45:void <init>() -> <init>
    48:67:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> a
    71:91:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> a
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    androidx.collection.SimpleArrayMap mExtraDataMap -> b
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> c
    48:62:void <init>() -> <init>
    75:76:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> a
    100:100:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> a
    115:115:boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
    129:133:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    120:124:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    106:106:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    81:83:void onCreate(android.os.Bundle) -> onCreate
    88:90:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$a:
    140:140:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    70:76:java.lang.Object checkCompatWrapper(java.lang.Object) -> a
    41:41:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    47:47:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    60:60:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    54:54:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    66:66:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.CoreComponentFactory$CompatWrapped -> androidx.core.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
androidx.core.app.DialogCompat -> a.i.c.j:
    32:33:void <init>() -> <init>
    55:60:android.view.View requireViewById(android.app.Dialog,int) -> a
androidx.core.app.FrameMetricsAggregator -> a.i.c.k:
    int LAYOUT_MEASURE_DURATION -> n
    int DRAW_DURATION -> o
    int TOTAL_DURATION -> l
    int INPUT_DURATION -> m
    int ANIMATION_INDEX -> j
    int LAST_INDEX -> k
    int SWAP_INDEX -> h
    int DELAY_INDEX -> i
    int SYNC_INDEX -> f
    androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl mInstance -> a
    int COMMAND_INDEX -> g
    int LAYOUT_MEASURE_INDEX -> d
    int DRAW_INDEX -> e
    int TOTAL_INDEX -> b
    int INPUT_INDEX -> c
    int ANIMATION_DURATION -> t
    int EVERY_DURATION -> u
    int SWAP_DURATION -> r
    int DELAY_DURATION -> s
    int SYNC_DURATION -> p
    int COMMAND_DURATION -> q
    199:200:void <init>() -> <init>
    212:218:void <init>(int) -> <init>
    226:227:void add(android.app.Activity) -> a
    301:301:android.util.SparseIntArray[] getMetrics() -> a
    243:243:android.util.SparseIntArray[] remove(android.app.Activity) -> b
    273:273:android.util.SparseIntArray[] reset() -> b
    260:260:android.util.SparseIntArray[] stop() -> c
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> a.i.c.k$a:
    int NANOS_ROUNDING_VALUE -> f
    int NANOS_PER_MS -> e
    android.util.SparseIntArray[] mMetrics -> b
    java.util.ArrayList mActivities -> c
    android.view.Window$OnFrameMetricsAvailableListener mListener -> d
    android.os.HandlerThread sHandlerThread -> g
    android.os.Handler sHandler -> h
    int mTrackingFlags -> a
    341:342:void <clinit>() -> <clinit>
    344:346:void <init>(int) -> <init>
    399:407:void addDurationItem(android.util.SparseIntArray,long) -> a
    411:423:void add(android.app.Activity) -> a
    453:453:android.util.SparseIntArray[] getMetrics() -> a
    427:434:android.util.SparseIntArray[] remove(android.app.Activity) -> b
    458:460:android.util.SparseIntArray[] reset() -> b
    439:448:android.util.SparseIntArray[] stop() -> c
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> a.i.c.k$a$a:
    androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl this$0 -> a
    349:349:void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    353:395:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> a.i.c.k$b:
    309:310:void <init>() -> <init>
    313:313:void add(android.app.Activity) -> a
    324:324:android.util.SparseIntArray[] getMetrics() -> a
    316:316:android.util.SparseIntArray[] remove(android.app.Activity) -> b
    328:328:android.util.SparseIntArray[] reset() -> b
    320:320:android.util.SparseIntArray[] stop() -> c
androidx.core.app.FrameMetricsAggregator$MetricType -> a.i.c.k$c:
androidx.core.app.JobIntentService -> a.i.c.l:
    java.lang.Object sLock -> k
    java.lang.String TAG -> i
    boolean DEBUG -> j
    java.util.HashMap sClassWorkEnqueuer -> l
    java.util.ArrayList mCompatQueue -> h
    androidx.core.app.JobIntentService$CompatJobEngine mJobImpl -> b
    boolean mInterruptIfStopped -> e
    boolean mStopped -> f
    androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer -> c
    boolean mDestroyed -> g
    androidx.core.app.JobIntentService$CommandProcessor mCurProcessor -> d
    105:106:void <clinit>() -> <clinit>
    416:422:void <init>() -> <init>
    void onHandleWork(android.content.Intent) -> a
    501:502:void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent) -> a
    517:518:void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent) -> a
    529:541:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> a
    607:615:void ensureProcessorRunningLocked(boolean) -> a
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    572:573:void setInterruptIfStopped(boolean) -> b
    599:603:boolean doStopCurrentWork() -> b
    580:580:boolean isStopped() -> c
    595:595:boolean onStopCurrentWork() -> d
    618:636:void processorFinished() -> e
    465:470:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:436:void onCreate() -> onCreate
    476:483:void onDestroy() -> onDestroy
    444:455:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
androidx.core.app.JobIntentService$CommandProcessor -> a.i.c.l$a:
    androidx.core.app.JobIntentService this$0 -> a
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    390:399:java.lang.Void doInBackground(java.lang.Void[]) -> a
    404:405:void onCancelled(java.lang.Void) -> a
    409:410:void onPostExecute(java.lang.Void) -> b
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
androidx.core.app.JobIntentService$CompatJobEngine -> a.i.c.l$b:
    androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    android.os.IBinder compatGetBinder() -> b
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> a.i.c.l$c:
    android.os.PowerManager$WakeLock mRunWakeLock -> f
    android.os.PowerManager$WakeLock mLaunchWakeLock -> e
    boolean mLaunchingService -> g
    boolean mServiceProcessing -> h
    android.content.Context mContext -> d
    163:175:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    179:197:void enqueueWork(android.content.Intent) -> a
    224:234:void serviceProcessingFinished() -> a
    210:219:void serviceProcessingStarted() -> b
    201:205:void serviceStartReceived() -> c
androidx.core.app.JobIntentService$CompatWorkItem -> a.i.c.l$d:
    android.content.Intent mIntent -> a
    androidx.core.app.JobIntentService this$0 -> c
    int mStartId -> b
    363:366:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:377:void complete() -> a
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$GenericWorkItem -> a.i.c.l$e:
    void complete() -> a
androidx.core.app.JobIntentService$JobServiceEngineImpl -> a.i.c.l$f:
    android.app.job.JobParameters mParams -> c
    androidx.core.app.JobIntentService mService -> a
    boolean DEBUG -> e
    java.lang.Object mLock -> b
    java.lang.String TAG -> d
    275:277:void <init>(androidx.core.app.JobIntentService) -> <init>
    311:316:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    281:281:android.os.IBinder compatGetBinder() -> b
    287:290:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:301:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> a.i.c.l$f$a:
    android.app.job.JobWorkItem mJobWork -> a
    androidx.core.app.JobIntentService$JobServiceEngineImpl this$0 -> b
    255:257:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:270:void complete() -> a
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> a.i.c.l$g:
    android.app.job.JobScheduler mJobScheduler -> e
    android.app.job.JobInfo mJobInfo -> d
    332:338:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
    343:344:void enqueueWork(android.content.Intent) -> a
androidx.core.app.JobIntentService$WorkEnqueuer -> a.i.c.l$h:
    android.content.ComponentName mComponentName -> a
    boolean mHasJobId -> b
    int mJobId -> c
    118:120:void <init>(android.content.ComponentName) -> <init>
    void enqueueWork(android.content.Intent) -> a
    123:127:void ensureJobId(int) -> a
    141:141:void serviceProcessingFinished() -> a
    138:138:void serviceProcessingStarted() -> b
    135:135:void serviceStartReceived() -> c
androidx.core.app.NavUtils -> a.i.c.m:
    java.lang.String TAG -> a
    java.lang.String PARENT_ACTIVITY -> b
    270:271:void <init>() -> <init>
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> a
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    168:178:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> a
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> b
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> b
    240:266:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
    81:85:void navigateUpFromSameTask(android.app.Activity) -> c
androidx.core.app.NotificationBuilderWithBuilderAccessor -> a.i.c.n:
    android.app.Notification$Builder getBuilder() -> a
androidx.core.app.NotificationCompat -> a.i.c.o:
    int FLAG_FOREGROUND_SERVICE -> l
    java.lang.String EXTRA_SHOW_CHRONOMETER -> I
    int FLAG_INSISTENT -> h
    java.lang.String EXTRA_TEMPLATE -> M
    int DEFAULT_LIGHTS -> d
    java.lang.String EXTRA_COMPACT_ACTIONS -> Q
    java.lang.String EXTRA_MESSAGES -> U
    java.lang.String EXTRA_TITLE_BIG -> v
    java.lang.String EXTRA_INFO_TEXT -> z
    java.lang.String CATEGORY_STATUS -> r0
    java.lang.String CATEGORY_REMINDER -> p0
    java.lang.String CATEGORY_SYSTEM -> n0
    java.lang.String CATEGORY_ERROR -> l0
    int PRIORITY_LOW -> q
    java.lang.String EXTRA_LARGE_ICON -> D
    java.lang.String CATEGORY_PROGRESS -> j0
    int VISIBILITY_SECRET -> b0
    java.lang.String CATEGORY_PROMO -> h0
    int FLAG_HIGH_PRIORITY -> m
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> H
    java.lang.String CATEGORY_EMAIL -> f0
    java.lang.String CATEGORY_NAVIGATION -> d0
    int FLAG_ONLY_ALERT_ONCE -> i
    java.lang.String EXTRA_TEXT_LINES -> L
    int STREAM_DEFAULT -> e
    java.lang.String EXTRA_MEDIA_SESSION -> P
    java.lang.String EXTRA_TITLE -> u
    int DEFAULT_ALL -> a
    java.lang.String EXTRA_CONVERSATION_TITLE -> T
    int BADGE_ICON_SMALL -> t0
    java.lang.String EXTRA_REMOTE_INPUT_HISTORY -> y
    java.lang.String EXTRA_AUDIO_CONTENTS_URI -> X
    int GROUP_ALERT_CHILDREN -> x0
    int GROUP_ALERT_ALL -> v0
    int COLOR_DEFAULT -> Y
    int PRIORITY_MIN -> r
    java.lang.String EXTRA_SMALL_ICON -> C
    int FLAG_LOCAL_ONLY -> n
    java.lang.String EXTRA_PROGRESS_MAX -> G
    int FLAG_AUTO_CANCEL -> j
    java.lang.String EXTRA_PICTURE -> K
    int FLAG_SHOW_LIGHTS -> f
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> O
    int DEFAULT_SOUND -> b
    java.lang.String EXTRA_MESSAGING_STYLE_USER -> S
    java.lang.String EXTRA_HIDDEN_CONVERSATION_TITLE -> W
    java.lang.String EXTRA_SUB_TEXT -> x
    int VISIBILITY_PUBLIC -> Z
    java.lang.String CATEGORY_RECOMMENDATION -> q0
    java.lang.String CATEGORY_SERVICE -> o0
    int PRIORITY_HIGH -> s
    java.lang.String EXTRA_BIG_TEXT -> B
    java.lang.String CATEGORY_TRANSPORT -> m0
    java.lang.String CATEGORY_SOCIAL -> k0
    int FLAG_GROUP_SUMMARY -> o
    java.lang.String EXTRA_PROGRESS -> F
    java.lang.String CATEGORY_ALARM -> i0
    int VISIBILITY_PRIVATE -> a0
    java.lang.String CATEGORY_EVENT -> g0
    int FLAG_NO_CLEAR -> k
    java.lang.String EXTRA_SHOW_WHEN -> J
    java.lang.String CATEGORY_MESSAGE -> e0
    java.lang.String CATEGORY_CALL -> c0
    int FLAG_ONGOING_EVENT -> g
    java.lang.String EXTRA_PEOPLE -> N
    int DEFAULT_VIBRATE -> c
    java.lang.String EXTRA_SELF_DISPLAY_NAME -> R
    java.lang.String EXTRA_TEXT -> w
    java.lang.String EXTRA_IS_GROUP_CONVERSATION -> V
    int BADGE_ICON_NONE -> s0
    int GROUP_ALERT_SUMMARY -> w0
    int BADGE_ICON_LARGE -> u0
    int PRIORITY_MAX -> t
    java.lang.String EXTRA_SUMMARY_TEXT -> A
    int PRIORITY_DEFAULT -> p
    java.lang.String EXTRA_LARGE_ICON_BIG -> E
    5403:5404:void <init>() -> <init>
    5110:5112:android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> a
    5143:5148:int getActionCount(android.app.Notification) -> a
    5159:5174:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> a
    5181:5214:androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action) -> a
    5367:5370:int getBadgeIconType(android.app.Notification) -> b
    5251:5254:java.lang.String getCategory(android.app.Notification) -> c
    5342:5345:java.lang.String getChannelId(android.app.Notification) -> d
    5242:5242:java.lang.CharSequence getContentTitle(android.app.Notification) -> e
    5129:5134:android.os.Bundle getExtras(android.app.Notification) -> f
    5282:5290:java.lang.String getGroup(android.app.Notification) -> g
    5393:5396:int getGroupAlertBehavior(android.app.Notification) -> h
    5222:5236:java.util.List getInvisibleActions(android.app.Notification) -> i
    5265:5273:boolean getLocalOnly(android.app.Notification) -> j
    5379:5382:java.lang.String getShortcutId(android.app.Notification) -> k
    5326:5334:java.lang.String getSortKey(android.app.Notification) -> l
    5354:5357:long getTimeoutAfter(android.app.Notification) -> m
    5301:5309:boolean isGroupSummary(android.app.Notification) -> n
androidx.core.app.NotificationCompat$Action -> a.i.c.o$a:
    int SEMANTIC_ACTION_DELETE -> n
    int SEMANTIC_ACTION_ARCHIVE -> o
    int SEMANTIC_ACTION_MARK_AS_READ -> l
    android.os.Bundle mExtras -> a
    int SEMANTIC_ACTION_MARK_AS_UNREAD -> m
    int SEMANTIC_ACTION_NONE -> j
    int SEMANTIC_ACTION_REPLY -> k
    androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs -> c
    androidx.core.app.RemoteInput[] mRemoteInputs -> b
    int mSemanticAction -> f
    int icon -> g
    java.lang.CharSequence title -> h
    java.lang.String EXTRA_SHOWS_USER_INTERFACE -> u
    java.lang.String EXTRA_SEMANTIC_ACTION -> v
    android.app.PendingIntent actionIntent -> i
    boolean mShowsUserInterface -> e
    int SEMANTIC_ACTION_CALL -> t
    int SEMANTIC_ACTION_THUMBS_UP -> r
    int SEMANTIC_ACTION_THUMBS_DOWN -> s
    int SEMANTIC_ACTION_MUTE -> p
    int SEMANTIC_ACTION_UNMUTE -> q
    boolean mAllowGeneratedReplies -> d
    3162:3163:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3168:3178:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3189:3189:android.app.PendingIntent getActionIntent() -> a
    3204:3204:boolean getAllowGeneratedReplies() -> b
    3238:3238:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> c
    3196:3196:android.os.Bundle getExtras() -> d
    3181:3181:int getIcon() -> e
    3213:3213:androidx.core.app.RemoteInput[] getRemoteInputs() -> f
    3224:3224:int getSemanticAction() -> g
    3246:3246:boolean getShowsUserInterface() -> h
    3185:3185:java.lang.CharSequence getTitle() -> i
androidx.core.app.NotificationCompat$Action$Builder -> a.i.c.o$a$a:
    java.lang.CharSequence mTitle -> b
    android.os.Bundle mExtras -> e
    android.app.PendingIntent mIntent -> c
    java.util.ArrayList mRemoteInputs -> f
    int mSemanticAction -> g
    boolean mShowsUserInterface -> h
    int mIcon -> a
    boolean mAllowGeneratedReplies -> d
    3269:3270:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3278:3281:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3285:3295:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3305:3308:androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> a
    3328:3332:androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput) -> a
    3345:3346:androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean) -> a
    3358:3359:androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int) -> a
    3380:3381:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender) -> a
    3390:3405:androidx.core.app.NotificationCompat$Action build() -> a
    3317:3317:android.os.Bundle getExtras() -> b
    3371:3372:androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean) -> b
androidx.core.app.NotificationCompat$Action$Extender -> a.i.c.o$a$b:
    androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder) -> a
androidx.core.app.NotificationCompat$Action$SemanticAction -> a.i.c.o$a$c:
androidx.core.app.NotificationCompat$Action$WearableExtender -> a.i.c.o$a$d:
    java.lang.String KEY_IN_PROGRESS_LABEL -> g
    java.lang.String KEY_FLAGS -> f
    java.lang.String KEY_CANCEL_LABEL -> i
    int FLAG_HINT_DISPLAY_INLINE -> l
    java.lang.String KEY_CONFIRM_LABEL -> h
    int DEFAULT_FLAGS -> m
    int FLAG_AVAILABLE_OFFLINE -> j
    int FLAG_HINT_LAUNCHES_ACTIVITY -> k
    java.lang.CharSequence mInProgressLabel -> b
    java.lang.CharSequence mConfirmLabel -> c
    java.lang.CharSequence mCancelLabel -> d
    int mFlags -> a
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> e
    3467:3468:void <init>() -> <init>
    3475:3483:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3492:3508:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder) -> a
    3528:3529:androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> a
    3543:3548:void setFlag(int,boolean) -> a
    3617:3618:androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> a
    3631:3631:java.lang.CharSequence getCancelLabel() -> a
    3589:3590:androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> b
    3603:3603:java.lang.CharSequence getConfirmLabel() -> b
    3669:3670:androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean) -> b
    3561:3562:androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> c
    3643:3644:androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean) -> c
    3682:3682:boolean getHintDisplayActionInline() -> c
    3439:3439:java.lang.Object clone() -> clone
    3513:3518:androidx.core.app.NotificationCompat$Action$WearableExtender clone() -> clone
    3655:3655:boolean getHintLaunchesActivity() -> d
    3575:3575:java.lang.CharSequence getInProgressLabel() -> e
    3539:3539:boolean isAvailableOffline() -> f
androidx.core.app.NotificationCompat$BadgeIconType -> a.i.c.o$b:
androidx.core.app.NotificationCompat$BigPictureStyle -> a.i.c.o$c:
    android.graphics.Bitmap mBigLargeIcon -> f
    boolean mBigLargeIconSet -> g
    android.graphics.Bitmap mPicture -> e
    1994:1995:void <init>() -> <init>
    1997:1999:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2006:2007:androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> a
    2031:2033:androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> a
    2042:2054:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> a
    2014:2016:androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> b
    2023:2024:androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> b
androidx.core.app.NotificationCompat$BigTextStyle -> a.i.c.o$d:
    java.lang.CharSequence mBigText -> e
    2081:2082:void <init>() -> <init>
    2084:2086:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2111:2112:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> a
    2121:2130:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> a
    2093:2094:androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> b
    2101:2103:androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> c
androidx.core.app.NotificationCompat$Builder -> a.i.c.o$e:
    android.content.Context mContext -> a
    boolean mShowWhen -> m
    int mPriority -> l
    java.lang.String mChannelId -> I
    long mTimeout -> L
    int mGroupAlertBehavior -> M
    java.lang.String mShortcutId -> K
    android.os.Bundle mExtras -> B
    java.lang.CharSequence mContentTitle -> d
    android.widget.RemoteViews mTickerView -> h
    android.widget.RemoteViews mBigContentView -> G
    java.util.ArrayList mInvisibleActions -> c
    android.app.PendingIntent mFullScreenIntent -> g
    java.lang.CharSequence[] mRemoteInputHistory -> q
    int mColor -> C
    java.lang.CharSequence mContentInfo -> j
    boolean mColorized -> y
    android.app.Notification mPublicVersion -> E
    int mProgress -> s
    int MAX_CHARSEQUENCE_LENGTH -> P
    boolean mUseChronometer -> n
    int mBadgeIcon -> J
    int mNumber -> k
    android.app.Notification mNotification -> N
    android.widget.RemoteViews mHeadsUpContentView -> H
    java.lang.CharSequence mContentText -> e
    boolean mGroupSummary -> v
    int mVisibility -> D
    android.widget.RemoteViews mContentView -> F
    boolean mLocalOnly -> x
    java.util.ArrayList mActions -> b
    android.app.PendingIntent mContentIntent -> f
    java.lang.String mGroupKey -> u
    android.graphics.Bitmap mLargeIcon -> i
    boolean mProgressIndeterminate -> t
    java.lang.String mSortKey -> w
    java.util.ArrayList mPeople -> O
    java.lang.CharSequence mSubText -> p
    boolean mColorizedSet -> z
    androidx.core.app.NotificationCompat$Style mStyle -> o
    java.lang.String mCategory -> A
    int mProgressMax -> r
    739:748:void <init>(android.content.Context,java.lang.String) -> <init>
    756:757:void <init>(android.content.Context) -> <init>
    816:818:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> a
    866:867:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> a
    884:885:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> a
    893:896:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    903:904:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> a
    916:917:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    951:953:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> a
    973:975:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> a
    982:983:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> a
    1023:1031:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> a
    1046:1054:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> a
    1069:1070:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> a
    1079:1085:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> a
    1144:1145:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    1190:1195:void setFlag(int,boolean) -> a
    1242:1243:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> a
    1299:1306:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> a
    1360:1361:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    1379:1380:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> a
    1421:1427:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> a
    1463:1464:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> a
    1519:1520:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> a
    1549:1550:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> a
    1573:1574:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> a
    1590:1590:android.app.Notification build() -> a
    764:765:androidx.core.app.NotificationCompat$Builder setWhen(long) -> b
    833:834:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    928:929:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> b
    991:992:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> b
    1123:1125:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> b
    1167:1168:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> b
    1322:1323:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> b
    1395:1395:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> b
    1408:1409:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> b
    1438:1439:androidx.core.app.NotificationCompat$Builder setColor(int) -> b
    1487:1488:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> b
    1614:1614:android.widget.RemoteViews getBigContentView() -> b
    825:826:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> c
    1182:1186:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> c
    1270:1271:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> c
    1474:1475:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> c
    1510:1511:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> c
    1652:1652:int getColor() -> c
    847:848:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> d
    1155:1156:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> d
    1258:1259:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> d
    1500:1501:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> d
    1564:1565:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> d
    1606:1606:android.widget.RemoteViews getContentView() -> d
    876:877:androidx.core.app.NotificationCompat$Builder setNumber(int) -> e
    962:963:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> e
    1100:1101:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> e
    1337:1340:android.os.Bundle getExtras() -> e
    1535:1536:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> e
    1133:1134:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> f
    1215:1216:androidx.core.app.NotificationCompat$Builder setPriority(int) -> f
    1287:1288:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> f
    1594:1598:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> f
    1622:1622:android.widget.RemoteViews getHeadsUpContentView() -> f
    773:774:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> g
    801:802:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> g
    1582:1582:android.app.Notification getNotification() -> g
    789:790:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> h
    1450:1451:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> h
    1642:1642:int getPriority() -> h
    1632:1632:long getWhenIfShowing() -> i
androidx.core.app.NotificationCompat$CarExtender -> a.i.c.o$f:
    java.lang.String EXTRA_COLOR -> g
    java.lang.String EXTRA_CONVERSATION -> f
    java.lang.String KEY_AUTHOR -> i
    java.lang.String EXTRA_INVISIBLE_ACTIONS -> h
    java.lang.String KEY_MESSAGES -> k
    java.lang.String KEY_TEXT -> j
    java.lang.String KEY_ON_REPLY -> m
    java.lang.String KEY_REMOTE_INPUT -> l
    java.lang.String KEY_PARTICIPANTS -> o
    java.lang.String KEY_ON_READ -> n
    java.lang.String KEY_TIMESTAMP -> p
    int mColor -> c
    androidx.core.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> b
    android.graphics.Bitmap mLargeIcon -> a
    java.lang.String EXTRA_LARGE_ICON -> e
    java.lang.String EXTRA_CAR_EXTENDER -> d
    4731:4732:void <init>() -> <init>
    4739:4753:void <init>(android.app.Notification) -> <init>
    4757:4790:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle) -> a
    4846:4865:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> a
    4877:4878:androidx.core.app.NotificationCompat$CarExtender setColor(int) -> a
    4888:4888:int getColor() -> a
    4901:4902:androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> a
    4922:4923:androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> a
    4808:4836:android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> b
    4912:4912:android.graphics.Bitmap getLargeIcon() -> b
    4931:4931:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> c
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation -> a.i.c.o$f$a:
    androidx.core.app.RemoteInput mRemoteInput -> b
    long mLatestTimestamp -> f
    android.app.PendingIntent mReplyPendingIntent -> c
    java.lang.String[] mParticipants -> e
    java.lang.String[] mMessages -> a
    android.app.PendingIntent mReadPendingIntent -> d
    4947:4954:void <init>(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    5005:5005:long getLatestTimestamp() -> a
    4960:4960:java.lang.String[] getMessages() -> b
    4998:4998:java.lang.String getParticipant() -> c
    4991:4991:java.lang.String[] getParticipants() -> d
    4984:4984:android.app.PendingIntent getReadPendingIntent() -> e
    4968:4968:androidx.core.app.RemoteInput getRemoteInput() -> f
    4976:4976:android.app.PendingIntent getReplyPendingIntent() -> g
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> a.i.c.o$f$a$a:
    java.util.List mMessages -> a
    long mLatestTimestamp -> f
    androidx.core.app.RemoteInput mRemoteInput -> c
    java.lang.String mParticipant -> b
    android.app.PendingIntent mReplyPendingIntent -> e
    android.app.PendingIntent mReadPendingIntent -> d
    5024:5026:void <init>(java.lang.String) -> <init>
    5037:5038:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> a
    5054:5057:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput) -> a
    5068:5069:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> a
    5084:5085:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> a
    5094:5096:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build() -> a
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> a.i.c.o$g:
    int MAX_ACTION_BUTTONS -> e
    2940:2941:void <init>() -> <init>
    2949:2952:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> a
    3012:3030:android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> a
    3034:3048:android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action) -> a
    2977:2989:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> b
    2960:2968:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> c
    2998:3008:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> d
androidx.core.app.NotificationCompat$Extender -> a.i.c.o$h:
    androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> a
androidx.core.app.NotificationCompat$GroupAlertBehavior -> a.i.c.o$i:
androidx.core.app.NotificationCompat$InboxStyle -> a.i.c.o$j:
    java.util.ArrayList mTexts -> e
    2855:2856:void <init>() -> <init>
    2858:2860:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2884:2885:androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> a
    2894:2905:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> a
    2867:2868:androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> b
    2875:2877:androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> c
androidx.core.app.NotificationCompat$MessagingStyle -> a.i.c.o$k:
    java.lang.Boolean mIsGroupConversation -> h
    java.util.List mMessages -> e
    int MAXIMUM_RETAINED_MESSAGES -> i
    androidx.core.app.Person mUser -> f
    java.lang.CharSequence mConversationTitle -> g
    2179:2179:void <init>() -> <init>
    2189:2191:void <init>(java.lang.CharSequence) -> <init>
    2201:2203:void <init>(androidx.core.app.Person) -> <init>
    2237:2238:androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> a
    2269:2274:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence) -> a
    2286:2287:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person) -> a
    2298:2302:androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> a
    2319:2320:androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> a
    2364:2376:androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification) -> a
    2390:2482:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> a
    2537:2537:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> a
    2542:2557:void addCompatExtras(android.os.Bundle) -> a
    2246:2246:java.lang.CharSequence getConversationTitle() -> b
    2512:2532:java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> b
    2565:2588:void restoreFromCompatExtras(android.os.Bundle) -> b
    2309:2309:java.util.List getMessages() -> c
    2220:2220:androidx.core.app.Person getUser() -> d
    2215:2215:java.lang.CharSequence getUserDisplayName() -> e
    2341:2349:boolean isGroupConversation() -> f
    2486:2498:androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> g
    2502:2508:boolean hasMessagesWithoutSender() -> h
androidx.core.app.NotificationCompat$MessagingStyle$Message -> a.i.c.o$k$a:
    java.lang.String KEY_TEXT -> g
    java.lang.String KEY_SENDER -> i
    android.net.Uri mDataUri -> f
    java.lang.String KEY_TIMESTAMP -> h
    java.lang.String KEY_DATA_URI -> k
    java.lang.String KEY_DATA_MIME_TYPE -> j
    java.lang.CharSequence mText -> a
    java.lang.String KEY_PERSON -> m
    java.lang.String KEY_EXTRAS_BUNDLE -> l
    android.os.Bundle mExtras -> d
    long mTimestamp -> b
    java.lang.String KEY_NOTIFICATION_PERSON -> n
    androidx.core.app.Person mPerson -> c
    java.lang.String mDataMimeType -> e
    2619:2623:void <init>(java.lang.CharSequence,long,androidx.core.app.Person) -> <init>
    2640:2641:void <init>(java.lang.CharSequence,long,java.lang.CharSequence) -> <init>
    2673:2675:androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> a
    2718:2718:java.lang.String getDataMimeType() -> a
    2762:2767:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> a
    2772:2781:java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> a
    2787:2822:androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> a
    2727:2727:android.net.Uri getDataUri() -> b
    2695:2695:android.os.Bundle getExtras() -> c
    2712:2712:androidx.core.app.Person getPerson() -> d
    2706:2706:java.lang.CharSequence getSender() -> e
    2684:2684:java.lang.CharSequence getText() -> f
    2689:2689:long getTimestamp() -> g
    2731:2757:android.os.Bundle toBundle() -> h
androidx.core.app.NotificationCompat$NotificationVisibility -> a.i.c.o$l:
androidx.core.app.NotificationCompat$StreamType -> a.i.c.o$m:
androidx.core.app.NotificationCompat$Style -> a.i.c.o$n:
    java.lang.CharSequence mBigContentTitle -> b
    androidx.core.app.NotificationCompat$Builder mBuilder -> a
    java.lang.CharSequence mSummaryText -> c
    boolean mSummaryTextSet -> d
    1663:1671:void <init>() -> <init>
    1674:1680:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> a
    1683:1687:android.app.Notification build() -> a
    1699:1699:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> a
    1731:1731:void addCompatExtras(android.os.Bundle) -> a
    1747:1886:android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> a
    1894:1894:android.graphics.Bitmap createColoredBitmap(int,int) -> a
    1898:1909:android.graphics.Bitmap createColoredBitmap(int,int,int) -> a
    1914:1923:android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> a
    1934:1943:void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> a
    1946:1949:void hideNormalContent(android.widget.RemoteViews) -> a
    1965:1965:float constrain(float,float,float) -> a
    1714:1714:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> b
    1739:1739:void restoreFromCompatExtras(android.os.Bundle) -> b
    1952:1961:int calculateTopPadding() -> b
    1706:1706:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> c
    1722:1722:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> d
androidx.core.app.NotificationCompat$WearableExtender -> a.i.c.o$o:
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> G
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> O
    java.lang.String KEY_GRAVITY -> I
    int mHintScreenTimeout -> l
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> M
    java.lang.String KEY_DISMISSAL_ID -> K
    int mCustomContentHeight -> j
    int mContentActionIndex -> h
    android.app.PendingIntent mDisplayIntent -> c
    int mContentIcon -> f
    java.lang.String mBridgeTag -> n
    int mFlags -> b
    java.util.ArrayList mActions -> a
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> x
    java.lang.String KEY_FLAGS -> z
    int DEFAULT_GRAVITY -> V
    int SCREEN_TIMEOUT_LONG -> w
    int DEFAULT_FLAGS -> T
    int SIZE_FULL_SCREEN -> u
    int FLAG_BIG_PICTURE_AMBIENT -> R
    int SIZE_MEDIUM -> s
    java.lang.String KEY_PAGES -> B
    int FLAG_START_SCROLL_BOTTOM -> P
    int SIZE_XSMALL -> q
    java.lang.String KEY_CONTENT_ICON -> D
    int FLAG_HINT_HIDE_ICON -> N
    int UNSET_ACTION_INDEX -> o
    java.lang.String KEY_CONTENT_ACTION_INDEX -> F
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> H
    java.lang.String KEY_HINT_SCREEN_TIMEOUT -> J
    int mGravity -> k
    java.lang.String mDismissalId -> m
    java.lang.String KEY_BRIDGE_TAG -> L
    int mCustomSizePreset -> i
    int mContentIconGravity -> g
    java.util.ArrayList mPages -> d
    android.graphics.Bitmap mBackground -> e
    java.lang.String KEY_ACTIONS -> y
    int SCREEN_TIMEOUT_SHORT -> v
    int SIZE_LARGE -> t
    java.lang.String KEY_DISPLAY_INTENT -> A
    int DEFAULT_CONTENT_ICON_GRAVITY -> U
    int SIZE_SMALL -> r
    java.lang.String KEY_BACKGROUND -> C
    int FLAG_HINT_CONTENT_INTENT_LAUNCHES_ACTIVITY -> S
    int SIZE_DEFAULT -> p
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> E
    int FLAG_HINT_AVOID_BACKGROUND_CLIPPING -> Q
    3906:3907:void <init>() -> <init>
    3909:3953:void <init>(android.app.Notification) -> <init>
    3962:4023:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> a
    4086:4087:androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action) -> a
    4103:4104:androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List) -> a
    4113:4114:androidx.core.app.NotificationCompat$WearableExtender clearActions() -> a
    4157:4158:androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> a
    4185:4186:androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> a
    4243:4244:androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> a
    4320:4321:androidx.core.app.NotificationCompat$WearableExtender setContentAction(int) -> a
    4451:4452:androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> a
    4654:4655:androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String) -> a
    4667:4672:void setFlag(int,boolean) -> a
    4028:4050:android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action) -> b
    4202:4203:androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List) -> b
    4214:4215:androidx.core.app.NotificationCompat$WearableExtender clearPages() -> b
    4268:4269:androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int) -> b
    4583:4584:androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean) -> b
    4633:4634:androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String) -> b
    4121:4121:java.util.List getActions() -> c
    4292:4293:androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> c
    4527:4528:androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> c
    3762:3762:java.lang.Object clone() -> clone
    4055:4070:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
    4258:4258:android.graphics.Bitmap getBackground() -> d
    4407:4408:androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> d
    4609:4610:androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean) -> d
    4377:4378:androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> e
    4474:4475:androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> e
    4663:4663:java.lang.String getBridgeTag() -> e
    4334:4334:int getContentAction() -> f
    4347:4348:androidx.core.app.NotificationCompat$WearableExtender setGravity(int) -> f
    4499:4500:androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> f
    4279:4279:int getContentIcon() -> g
    4430:4431:androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> g
    4556:4557:androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> g
    4306:4306:int getContentIconGravity() -> h
    4462:4462:boolean getContentIntentAvailableOffline() -> i
    4421:4421:int getCustomContentHeight() -> j
    4393:4393:int getCustomSizePreset() -> k
    4642:4642:java.lang.String getDismissalId() -> l
    4169:4169:android.app.PendingIntent getDisplayIntent() -> m
    4361:4361:int getGravity() -> n
    4597:4597:boolean getHintAmbientBigPicture() -> o
    4542:4542:boolean getHintAvoidBackgroundClipping() -> p
    4620:4620:boolean getHintContentIntentLaunchesActivity() -> q
    4487:4487:boolean getHintHideIcon() -> r
    4570:4570:int getHintScreenTimeout() -> s
    4512:4512:boolean getHintShowBackgroundOnly() -> t
    4228:4228:java.util.List getPages() -> u
    4440:4440:boolean getStartScrollBottom() -> v
androidx.core.app.NotificationCompatBuilder -> a.i.c.p:
    androidx.core.app.NotificationCompat$Builder mBuilderCompat -> b
    android.widget.RemoteViews mBigContentView -> d
    java.util.List mActionExtrasList -> e
    android.widget.RemoteViews mContentView -> c
    android.widget.RemoteViews mHeadsUpContentView -> h
    android.os.Bundle mExtras -> f
    int mGroupAlertBehavior -> g
    android.app.Notification$Builder mBuilder -> a
    62:208:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    212:212:android.app.Notification$Builder getBuilder() -> a
    255:290:void addAction(androidx.core.app.NotificationCompat$Action) -> a
    418:422:void removeSoundAndVibration(android.app.Notification) -> a
    216:251:android.app.Notification build() -> b
    293:413:android.app.Notification buildInternal() -> c
androidx.core.app.NotificationCompatExtras -> a.i.c.q:
    java.lang.String EXTRA_REMOTE_INPUTS -> f
    java.lang.String EXTRA_LOCAL_ONLY -> a
    java.lang.String EXTRA_GROUP_SUMMARY -> c
    java.lang.String EXTRA_GROUP_KEY -> b
    java.lang.String EXTRA_ACTION_EXTRAS -> e
    java.lang.String EXTRA_SORT_KEY -> d
    66:66:void <init>() -> <init>
androidx.core.app.NotificationCompatJellybean -> a.i.c.r:
    java.lang.String KEY_ACTION_INTENT -> f
    java.lang.String KEY_REMOTE_INPUTS -> h
    java.lang.String KEY_RESULT_KEY -> j
    java.lang.String KEY_CHOICES -> l
    java.lang.reflect.Field sActionTitleField -> w
    java.lang.String KEY_ALLOWED_DATA_TYPES -> n
    java.lang.String KEY_SHOWS_USER_INTERFACE -> p
    boolean sExtrasFieldAccessFailed -> s
    boolean sActionsAccessFailed -> y
    java.lang.String TAG -> a
    java.lang.reflect.Field sExtrasField -> r
    java.lang.String EXTRA_ALLOW_GENERATED_REPLIES -> c
    java.lang.String KEY_TITLE -> e
    java.lang.String KEY_EXTRAS -> g
    java.lang.String KEY_DATA_ONLY_REMOTE_INPUTS -> i
    java.lang.String KEY_LABEL -> k
    java.lang.reflect.Field sActionIntentField -> x
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> m
    java.lang.reflect.Field sActionIconField -> v
    java.lang.String KEY_SEMANTIC_ACTION -> o
    java.lang.Object sExtrasLock -> q
    java.lang.Object sActionsLock -> t
    java.lang.reflect.Field sActionsField -> u
    java.lang.String EXTRA_DATA_ONLY_REMOTE_INPUTS -> b
    java.lang.String KEY_ICON -> d
    58:62:void <clinit>() -> <clinit>
    341:342:void <init>() -> <init>
    71:81:android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    122:133:androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> a
    140:152:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> a
    156:159:int getActionCount(android.app.Notification) -> a
    163:186:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> a
    207:226:boolean ensureActionReflectionReadyLocked() -> a
    248:264:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> a
    269:276:androidx.core.app.RemoteInput fromBundle(android.os.Bundle) -> a
    285:300:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> a
    304:311:androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[]) -> a
    315:322:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> a
    331:333:android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> a
    191:202:java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> b
    230:235:androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle) -> b
    89:117:android.os.Bundle getExtras(android.app.Notification) -> c
androidx.core.app.NotificationCompatSideChannelService -> a.i.c.s:
    45:45:void <init>() -> <init>
    void cancel(java.lang.String,int,java.lang.String) -> a
    void cancelAll(java.lang.String) -> a
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> a
    114:119:void checkPermission(int,java.lang.String) -> a
    48:56:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> a.i.c.s$a:
    androidx.core.app.NotificationCompatSideChannelService this$0 -> a
    75:76:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:97:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:108:void cancelAll(java.lang.String) -> cancelAll
    81:86:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.NotificationManagerCompat -> a.i.c.t:
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> g
    android.content.Context mContext -> a
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> f
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> j
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> k
    int MAX_SIDE_CHANNEL_SDK_VERSION -> h
    java.lang.String sEnabledNotificationListeners -> m
    android.app.NotificationManager mNotificationManager -> b
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> i
    java.lang.Object sLock -> o
    java.lang.Object sEnabledNotificationListenersLock -> l
    androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> p
    int IMPORTANCE_HIGH -> v
    int IMPORTANCE_MAX -> w
    int IMPORTANCE_LOW -> t
    int IMPORTANCE_DEFAULT -> u
    java.lang.String TAG -> c
    int IMPORTANCE_NONE -> r
    int IMPORTANCE_MIN -> s
    java.lang.String OP_POST_NOTIFICATION -> e
    java.lang.String CHECK_OP_NO_THROW -> d
    java.util.Set sEnabledNotificationListenerPackages -> n
    int IMPORTANCE_UNSPECIFIED -> q
    100:109:void <clinit>() -> <clinit>
    159:163:void <init>(android.content.Context) -> <init>
    156:156:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> a
    170:171:void cancel(int) -> a
    179:183:void cancel(java.lang.String,int) -> a
    199:200:void notify(int,android.app.Notification) -> a
    209:217:void notify(java.lang.String,int,android.app.Notification) -> a
    223:244:boolean areNotificationsEnabled() -> a
    282:285:void createNotificationChannel(android.app.NotificationChannel) -> a
    297:300:void createNotificationChannelGroup(android.app.NotificationChannelGroup) -> a
    325:328:void createNotificationChannelGroups(java.util.List) -> a
    340:343:void deleteNotificationChannel(java.lang.String) -> a
    446:447:boolean useSideChannelForNotification(android.app.Notification) -> a
    454:459:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task) -> a
    187:191:void cancelAll() -> b
    311:314:void createNotificationChannels(java.util.List) -> b
    352:355:void deleteNotificationChannelGroup(java.lang.String) -> b
    420:439:java.util.Set getEnabledListenerPackages(android.content.Context) -> b
    254:257:int getImportance() -> c
    364:367:android.app.NotificationChannel getNotificationChannel(java.lang.String) -> c
    377:387:android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String) -> d
    409:412:java.util.List getNotificationChannelGroups() -> d
    397:400:java.util.List getNotificationChannels() -> e
androidx.core.app.NotificationManagerCompat$CancelTask -> a.i.c.t$a:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    boolean all -> d
    782:787:void <init>(java.lang.String) -> <init>
    789:794:void <init>(java.lang.String,int,java.lang.String) -> <init>
    798:803:void send(android.support.v4.app.INotificationSideChannel) -> a
    807:813:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$NotifyTask -> a.i.c.t$b:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    android.app.Notification notif -> d
    753:758:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    762:763:void send(android.support.v4.app.INotificationSideChannel) -> a
    767:772:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> a.i.c.t$c:
    android.os.IBinder iBinder -> b
    android.content.ComponentName componentName -> a
    737:740:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> a.i.c.t$d:
    android.content.Context mContext -> a
    java.util.Map mRecordMap -> d
    android.os.Handler mHandler -> c
    int MSG_SERVICE_DISCONNECTED -> h
    java.util.Set mCachedEnabledPackages -> e
    int MSG_RETRY_LISTENER_QUEUE -> i
    int MSG_QUEUE_TASK -> f
    int MSG_SERVICE_CONNECTED -> g
    android.os.HandlerThread mHandlerThread -> b
    479:484:void <init>(android.content.Context) -> <init>
    491:492:void queueTask(androidx.core.app.NotificationManagerCompat$Task) -> a
    523:529:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> a
    539:543:void handleRetryListenerQueue(android.content.ComponentName) -> a
    568:612:void updateListenerMap() -> a
    619:631:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> a
    515:520:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> b
    532:536:void handleServiceDisconnected(android.content.ComponentName) -> b
    638:643:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> b
    674:684:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> c
    651:667:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> d
    496:499:boolean handleMessage(android.os.Message) -> handleMessage
    547:553:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    557:561:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> a.i.c.t$d$a:
    android.content.ComponentName componentName -> a
    android.support.v4.app.INotificationSideChannel service -> c
    java.util.ArrayDeque taskQueue -> d
    int retryCount -> e
    boolean bound -> b
    726:728:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.NotificationManagerCompat$Task -> a.i.c.t$e:
    void send(android.support.v4.app.INotificationSideChannel) -> a
androidx.core.app.Person -> a.i.c.u:
    java.lang.String NAME_KEY -> g
    java.lang.String URI_KEY -> i
    java.lang.String ICON_KEY -> h
    java.lang.String IS_BOT_KEY -> k
    java.lang.String KEY_KEY -> j
    java.lang.CharSequence mName -> a
    java.lang.String IS_IMPORTANT_KEY -> l
    androidx.core.graphics.drawable.IconCompat mIcon -> b
    boolean mIsBot -> e
    boolean mIsImportant -> f
    java.lang.String mUri -> c
    java.lang.String mKey -> d
    115:122:void <init>(androidx.core.app.Person$Builder) -> <init>
    48:49:androidx.core.app.Person fromBundle(android.os.Bundle) -> a
    70:70:androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle) -> a
    88:88:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> a
    197:197:androidx.core.graphics.drawable.IconCompat getIcon() -> a
    224:224:java.lang.String getKey() -> b
    191:191:java.lang.CharSequence getName() -> c
    215:215:java.lang.String getUri() -> d
    232:232:boolean isBot() -> e
    240:240:boolean isImportant() -> f
    175:175:android.app.Person toAndroidPerson() -> g
    163:163:androidx.core.app.Person$Builder toBuilder() -> h
    130:137:android.os.Bundle toBundle() -> i
    151:157:android.os.PersistableBundle toPersistableBundle() -> j
androidx.core.app.Person$Builder -> a.i.c.u$a:
    java.lang.CharSequence mName -> a
    androidx.core.graphics.drawable.IconCompat mIcon -> b
    boolean mIsBot -> e
    boolean mIsImportant -> f
    java.lang.String mUri -> c
    java.lang.String mKey -> d
    253:253:void <init>() -> <init>
    255:262:void <init>(androidx.core.app.Person) -> <init>
    270:271:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> a
    282:283:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> a
    311:312:androidx.core.app.Person$Builder setKey(java.lang.String) -> a
    321:322:androidx.core.app.Person$Builder setBot(boolean) -> a
    340:340:androidx.core.app.Person build() -> a
    300:301:androidx.core.app.Person$Builder setUri(java.lang.String) -> b
    333:334:androidx.core.app.Person$Builder setImportant(boolean) -> b
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
    android.app.PendingIntent mActionIntent -> d
    80:87:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    94:94:void <init>() -> <init>
    99:107:void <init>(androidx.core.app.RemoteActionCompat) -> <init>
    115:123:androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction) -> a
    130:131:void setEnabled(boolean) -> a
    179:179:android.app.PendingIntent getActionIntent() -> a
    144:145:void setShouldShowIcon(boolean) -> b
    172:172:java.lang.CharSequence getContentDescription() -> b
    158:158:androidx.core.graphics.drawable.IconCompat getIcon() -> c
    165:165:java.lang.CharSequence getTitle() -> d
    137:137:boolean isEnabled() -> e
    151:151:boolean shouldShowIcon() -> f
    190:196:android.app.RemoteAction toRemoteAction() -> g
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> a.i.c.v:
    java.lang.String TAG -> g
    java.lang.String EXTRA_RESULTS_DATA -> i
    int SOURCE_FREE_FORM_INPUT -> l
    java.lang.String RESULTS_CLIP_LABEL -> h
    int SOURCE_CHOICE -> m
    java.lang.String EXTRA_RESULTS_SOURCE -> k
    java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA -> j
    java.lang.CharSequence mLabel -> b
    android.os.Bundle mExtras -> e
    java.util.Set mAllowedDataTypes -> f
    java.lang.String mResultKey -> a
    java.lang.CharSequence[] mChoices -> c
    boolean mAllowFreeFormTextInput -> d
    78:85:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> <init>
    132:132:boolean getAllowFreeFormInput() -> a
    290:315:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> a
    354:406:void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> a
    418:441:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> a
    457:467:void setResultsSource(android.content.Intent,int) -> a
    496:496:java.lang.String getExtraResultsKeyForData(java.lang.String) -> a
    501:508:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> a
    513:513:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> a
    523:534:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> a
    110:110:java.util.Set getAllowedDataTypes() -> b
    328:337:android.os.Bundle getResultsFromIntent(android.content.Intent) -> b
    106:106:java.lang.CharSequence[] getChoices() -> c
    482:491:int getResultsSource(android.content.Intent) -> c
    139:139:android.os.Bundle getExtras() -> d
    99:99:java.lang.CharSequence getLabel() -> e
    92:92:java.lang.String getResultKey() -> f
    119:119:boolean isDataOnly() -> g
androidx.core.app.RemoteInput$Builder -> a.i.c.v$a:
    android.os.Bundle mExtras -> c
    java.lang.CharSequence mLabel -> d
    java.lang.CharSequence[] mChoices -> e
    boolean mAllowFreeFormTextInput -> f
    java.lang.String mResultKey -> a
    java.util.Set mAllowedDataTypes -> b
    158:160:void <init>(java.lang.String) -> <init>
    173:174:androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> a
    191:192:androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> a
    207:212:androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> a
    227:228:androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> a
    240:243:androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle) -> a
    262:262:androidx.core.app.RemoteInput build() -> a
    253:253:android.os.Bundle getExtras() -> b
androidx.core.app.RemoteInput$Source -> a.i.c.v$b:
androidx.core.app.ServiceCompat -> a.i.c.w:
    int STOP_FOREGROUND_REMOVE -> b
    int STOP_FOREGROUND_DETACH -> c
    int START_STICKY -> a
    37:39:void <init>() -> <init>
    98:103:void stopForeground(android.app.Service,int) -> a
androidx.core.app.ServiceCompat$StopForegroundFlags -> a.i.c.w$a:
androidx.core.app.ShareCompat -> a.i.c.x:
    java.lang.String EXTRA_CALLING_PACKAGE -> a
    java.lang.String EXTRA_CALLING_ACTIVITY -> c
    java.lang.String EXTRA_CALLING_PACKAGE_INTEROP -> b
    java.lang.String HISTORY_FILENAME_PREFIX -> e
    java.lang.String EXTRA_CALLING_ACTIVITY_INTEROP -> d
    109:109:void <init>() -> <init>
    147:155:android.content.ComponentName getCallingActivity(android.app.Activity) -> a
    185:202:void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder) -> a
    213:215:void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder) -> a
    124:131:java.lang.String getCallingPackage(android.app.Activity) -> b
androidx.core.app.ShareCompat$IntentBuilder -> a.i.c.x$a:
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mStreams -> g
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mToAddresses -> d
    android.app.Activity mActivity -> a
    247:255:void <init>(android.app.Activity) -> <init>
    244:244:androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity) -> a
    315:323:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    327:334:void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    344:344:android.content.Intent createChooserIntent() -> a
    367:368:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> a
    378:378:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int) -> a
    457:469:androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> a
    576:580:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> a
    591:592:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> a
    311:311:android.app.Activity getActivity() -> b
    402:403:androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> b
    437:442:androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> b
    536:540:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> b
    551:552:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> b
    267:307:android.content.Intent getIntent() -> c
    496:500:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> c
    511:512:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> c
    357:358:void startChooser() -> d
    418:423:androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> d
    564:565:androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> d
    524:525:androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> e
    603:604:androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> e
    389:390:androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String) -> f
    481:485:androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> f
androidx.core.app.ShareCompat$IntentReader -> a.i.c.x$b:
    java.lang.String TAG -> f
    android.content.ComponentName mCallingActivity -> d
    android.content.Intent mIntent -> b
    java.util.ArrayList mStreams -> e
    android.app.Activity mActivity -> a
    java.lang.String mCallingPackage -> c
    646:651:void <init>(android.app.Activity) -> <init>
    643:643:androidx.core.app.ShareCompat$IntentReader from(android.app.Activity) -> a
    740:762:void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> a
    789:798:android.net.Uri getStream(int) -> a
    892:892:android.content.ComponentName getCallingActivity() -> a
    906:914:android.graphics.drawable.Drawable getCallingActivityIcon() -> b
    928:936:android.graphics.drawable.Drawable getCallingApplicationIcon() -> c
    950:958:java.lang.CharSequence getCallingApplicationLabel() -> d
    874:874:java.lang.String getCallingPackage() -> e
    846:846:java.lang.String[] getEmailBcc() -> f
    836:836:java.lang.String[] getEmailCc() -> g
    826:826:java.lang.String[] getEmailTo() -> h
    720:735:java.lang.String getHtmlText() -> i
    776:776:android.net.Uri getStream() -> j
    810:816:int getStreamCount() -> k
    856:856:java.lang.String getSubject() -> l
    706:706:java.lang.CharSequence getText() -> m
    696:696:java.lang.String getType() -> n
    686:686:boolean isMultipleShare() -> o
    662:663:boolean isShareIntent() -> p
    675:675:boolean isSingleShare() -> q
androidx.core.app.SharedElementCallback -> a.i.c.y:
    int MAX_IMAGE_SIZE -> b
    java.lang.String BUNDLE_SNAPSHOT_BITMAP -> c
    android.graphics.Matrix mTempMatrix -> a
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX -> e
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE -> d
    42:42:void <init>() -> <init>
    109:109:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> a
    133:133:void onRejectSharedElements(java.util.List) -> a
    144:144:void onMapSharedElements(java.util.List,java.util.Map) -> a
    168:207:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> a
    214:217:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> a
    257:280:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> a
    301:302:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> a
    78:78:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> b
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener -> a.i.c.y$a:
    void onSharedElementsReady() -> a
androidx.core.app.TaskStackBuilder -> a.i.c.z:
    android.content.Context mSourceContext -> c
    java.util.ArrayList mIntents -> b
    java.lang.String TAG -> d
    82:84:void <init>(android.content.Context) -> <init>
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> a
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    189:189:androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class) -> a
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    219:219:int getIntentCount() -> a
    247:247:android.content.Intent editIntentAt(int) -> a
    283:284:void startActivities(android.os.Bundle) -> a
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> a
    331:332:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> a
    109:109:androidx.core.app.TaskStackBuilder from(android.content.Context) -> b
    139:147:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> b
    234:234:android.content.Intent getIntent(int) -> b
    357:365:android.content.Intent[] getIntents() -> b
    268:269:void startActivities() -> c
    256:256:java.util.Iterator iterator() -> iterator
androidx.core.app.TaskStackBuilder$SupportParentable -> a.i.c.z$a:
    android.content.Intent getSupportParentActivityIntent() -> b
androidx.core.content.ContentResolverCompat -> a.i.d.a:
    33:35:void <init>() -> <init>
    74:99:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> a
androidx.core.content.ContextCompat -> a.i.d.b:
    android.util.TypedValue sTempValue -> c
    java.lang.Object sLock -> b
    java.lang.String TAG -> a
    153:153:void <clinit>() -> <clinit>
    161:163:void <init>() -> <init>
    191:191:boolean startActivities(android.content.Context,android.content.Intent[]) -> a
    223:228:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
    250:255:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> a
    513:516:int getColor(android.content.Context,int) -> a
    531:532:int checkSelfPermission(android.content.Context,java.lang.String) -> a
    587:586:java.io.File createFilesDir(java.io.File) -> a
    633:636:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> a
    692:698:void startForegroundService(android.content.Context,android.content.Intent) -> a
    712:717:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> a
    380:383:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> b
    491:494:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> b
    578:582:java.io.File getCodeCacheDir(android.content.Context) -> b
    732:735:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> b
    274:278:java.io.File getDataDir(android.content.Context) -> c
    453:469:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> c
    433:436:java.io.File[] getExternalCacheDirs(android.content.Context) -> d
    660:663:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> e
    554:558:java.io.File getNoBackupFilesDir(android.content.Context) -> f
    327:330:java.io.File[] getObbDirs(android.content.Context) -> g
    647:650:boolean isDeviceProtectedStorage(android.content.Context) -> h
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> a.i.d.b$a:
    java.util.HashMap SERVICES -> a
    740:806:void <clinit>() -> <clinit>
    739:739:void <init>() -> <init>
androidx.core.content.ContextCompat$MainHandlerExecutor -> a.i.d.b$b:
    android.os.Handler mHandler -> a
    669:671:void <init>(android.os.Handler) -> <init>
    675:676:void execute(java.lang.Runnable) -> execute
androidx.core.content.FileProvider -> a.i.d.c:
    java.lang.String TAG_CACHE_PATH -> g
    java.lang.String TAG_FILES_PATH -> f
    java.lang.String TAG_EXTERNAL_FILES -> i
    androidx.core.content.FileProvider$PathStrategy mStrategy -> b
    java.lang.String TAG_EXTERNAL -> h
    java.lang.String TAG_EXTERNAL_MEDIA -> k
    java.lang.String TAG_EXTERNAL_CACHE -> j
    java.lang.String ATTR_PATH -> m
    java.lang.String ATTR_NAME -> l
    java.lang.String[] COLUMNS -> c
    java.util.HashMap sCache -> o
    java.io.File DEVICE_ROOT -> n
    java.lang.String TAG_ROOT_PATH -> e
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> d
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> a
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    795:815:int modeToMode(java.lang.String) -> a
    819:825:java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    829:831:java.lang.String[] copyOf(java.lang.String[],int) -> a
    835:837:java.lang.Object[] copyOf(java.lang.Object[],int) -> a
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    601:606:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    493:504:java.lang.String getType(android.net.Uri) -> getType
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    370:370:boolean onCreate() -> onCreate
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    454:478:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$PathStrategy -> a.i.d.c$a:
    java.io.File getFileForUri(android.net.Uri) -> a
    android.net.Uri getUriForFile(java.io.File) -> a
androidx.core.content.FileProvider$SimplePathStrategy -> a.i.d.c$b:
    java.util.HashMap mRoots -> b
    java.lang.String mAuthority -> a
    700:702:void <init>(java.lang.String) -> <init>
    709:710:void addRoot(java.lang.String,java.io.File) -> a
    728:730:android.net.Uri getUriForFile(java.io.File) -> a
    764:772:java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.content.IntentCompat -> a.i.d.d:
    java.lang.String EXTRA_HTML_TEXT -> a
    java.lang.String CATEGORY_LEANBACK_LAUNCHER -> c
    java.lang.String EXTRA_START_PLAYBACK -> b
    28:30:void <init>() -> <init>
    77:85:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
androidx.core.content.MimeTypeFilter -> a.i.d.e:
    43:44:void <init>() -> <init>
    48:49:boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[]) -> a
    76:83:boolean matches(java.lang.String,java.lang.String) -> a
    93:105:java.lang.String matches(java.lang.String,java.lang.String[]) -> a
    115:127:java.lang.String matches(java.lang.String[],java.lang.String) -> a
    137:150:java.lang.String[] matchesMany(java.lang.String[],java.lang.String) -> b
androidx.core.content.PermissionChecker -> a.i.d.f:
    int PERMISSION_DENIED -> b
    int PERMISSION_DENIED_APP_OP -> c
    int PERMISSION_GRANTED -> a
    77:79:void <init>() -> <init>
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> a
    152:155:int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> a
    171:173:int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> a
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> b
androidx.core.content.PermissionChecker$PermissionResult -> a.i.d.f$a:
androidx.core.content.SharedPreferencesCompat -> a.i.d.g:
    84:84:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat -> a.i.d.g$a:
    androidx.core.content.SharedPreferencesCompat$EditorCompat sInstance -> b
    androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper mHelper -> a
    57:59:void <init>() -> <init>
    66:69:androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance() -> a
    80:81:void apply(android.content.SharedPreferences$Editor) -> a
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper -> a.i.d.g$a$a:
    40:41:void <init>() -> <init>
    45:52:void apply(android.content.SharedPreferences$Editor) -> a
androidx.core.content.pm.ActivityInfoCompat -> a.i.d.h.a:
    int CONFIG_UI_MODE -> a
    27:29:void <init>() -> <init>
androidx.core.content.pm.PackageInfoCompat -> a.i.d.h.b:
    41:42:void <init>() -> <init>
    34:38:long getLongVersionCode(android.content.pm.PackageInfo) -> a
androidx.core.content.pm.PermissionInfoCompat -> a.i.d.h.c:
    34:35:void <init>() -> <init>
    73:77:int getProtection(android.content.pm.PermissionInfo) -> a
    87:91:int getProtectionFlags(android.content.pm.PermissionInfo) -> b
androidx.core.content.pm.PermissionInfoCompat$Protection -> a.i.d.h.c$a:
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags -> a.i.d.h.c$b:
androidx.core.content.pm.ShortcutInfoCompat -> a.i.d.h.d:
    android.content.Context mContext -> a
    android.content.Intent[] mIntents -> c
    android.content.ComponentName mActivity -> d
    boolean mIsAlwaysBadged -> i
    java.lang.String EXTRA_PERSON_COUNT -> m
    boolean mIsLongLived -> l
    java.lang.String EXTRA_LONG_LIVED -> o
    java.lang.String EXTRA_PERSON_ -> n
    java.lang.CharSequence mLabel -> e
    java.lang.CharSequence mLongLabel -> f
    java.lang.CharSequence mDisabledMessage -> g
    androidx.core.graphics.drawable.IconCompat mIcon -> h
    androidx.core.app.Person[] mPersons -> j
    java.util.Set mCategories -> k
    java.lang.String mId -> b
    69:69:void <init>() -> <init>
    117:136:android.content.Intent addToIntent(android.content.Intent) -> a
    162:162:android.content.ComponentName getActivity() -> a
    264:265:boolean getLongLivedFromExtra(android.os.PersistableBundle) -> a
    224:224:java.util.Set getCategories() -> b
    243:244:androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle) -> b
    193:193:java.lang.CharSequence getDisabledMessage() -> c
    232:232:androidx.core.graphics.drawable.IconCompat getIcon() -> d
    148:148:java.lang.String getId() -> e
    204:204:android.content.Intent getIntent() -> f
    214:214:android.content.Intent[] getIntents() -> g
    182:182:java.lang.CharSequence getLongLabel() -> h
    172:172:java.lang.CharSequence getShortLabel() -> i
    76:95:android.content.pm.ShortcutInfo toShortcutInfo() -> j
    104:113:android.os.PersistableBundle buildExtrasBundle() -> k
androidx.core.content.pm.ShortcutInfoCompat$Builder -> a.i.d.h.d$a:
    androidx.core.content.pm.ShortcutInfoCompat mInfo -> a
    277:281:void <init>(android.content.Context,java.lang.String) -> <init>
    287:305:void <init>(androidx.core.content.pm.ShortcutInfoCompat) -> <init>
    312:324:void <init>(android.content.Context,android.content.pm.ShortcutInfo) -> <init>
    363:364:androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence) -> a
    378:378:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent) -> a
    389:390:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[]) -> a
    398:399:androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> a
    411:412:androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName) -> a
    443:443:androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person) -> a
    451:452:androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[]) -> a
    463:464:androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set) -> a
    484:485:androidx.core.content.pm.ShortcutInfoCompat build() -> a
    351:352:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence) -> b
    429:430:androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged() -> b
    337:338:androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence) -> c
    474:475:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived() -> c
androidx.core.content.pm.ShortcutInfoCompatSaver -> a.i.d.h.e:
    36:36:void <init>() -> <init>
    java.lang.Object addShortcuts(java.util.List) -> a
    48:48:java.util.List getShortcuts() -> a
    java.lang.Object removeAllShortcuts() -> b
    java.lang.Object removeShortcuts(java.util.List) -> b
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl -> a.i.d.h.e$a:
    57:57:void <init>() -> <init>
    56:56:java.lang.Object addShortcuts(java.util.List) -> a
    60:60:java.lang.Void addShortcuts(java.util.List) -> a
    56:56:java.lang.Object removeAllShortcuts() -> b
    56:56:java.lang.Object removeShortcuts(java.util.List) -> b
    65:65:java.lang.Void removeShortcuts(java.util.List) -> b
    70:70:java.lang.Void removeAllShortcuts() -> b
androidx.core.content.pm.ShortcutManagerCompat -> a.i.d.h.f:
    androidx.core.content.pm.ShortcutInfoCompatSaver sShortcutInfoCompatSaver -> d
    java.lang.String ACTION_INSTALL_SHORTCUT -> a
    java.lang.String EXTRA_SHORTCUT_ID -> c
    java.lang.String INSTALL_SHORTCUT_PERMISSION -> b
    65:65:void <clinit>() -> <clinit>
    67:69:void <init>() -> <init>
    113:140:boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender) -> a
    156:164:android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> a
    217:233:java.util.List getDynamicShortcuts(android.content.Context) -> a
    268:273:void removeDynamicShortcuts(android.content.Context,java.util.List) -> a
    181:192:boolean addDynamicShortcuts(android.content.Context,java.util.List) -> b
    200:205:int getMaxShortcutCountPerActivity(android.content.Context) -> b
    249:260:boolean updateShortcuts(android.content.Context,java.util.List) -> c
    287:304:androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context) -> c
    76:91:boolean isRequestPinShortcutSupported(android.content.Context) -> d
    279:284:void removeAllDynamicShortcuts(android.content.Context) -> e
androidx.core.content.pm.ShortcutManagerCompat$1 -> a.i.d.h.f$a:
    android.content.IntentSender val$callback -> a
    130:130:void <init>(android.content.IntentSender) -> <init>
    134:138:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.core.content.res.ColorStateListInflaterCompat -> a.i.d.i.a:
    49:50:void <init>() -> <init>
    65:70:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    86:95:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    113:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    191:191:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> a
    198:199:int modulateColorAlpha(int,float) -> a
    128:186:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
androidx.core.content.res.ComplexColorCompat -> a.i.d.i.b:
    android.content.res.ColorStateList mColorStateList -> b
    android.graphics.Shader mShader -> a
    int mColor -> c
    java.lang.String LOG_TAG -> d
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> a
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> a
    86:86:int getColor() -> a
    90:91:void setColor(int) -> a
    108:117:boolean onStateChanged(int[]) -> a
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> b
    81:81:android.graphics.Shader getShader() -> b
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> b
    94:94:boolean isGradient() -> c
    98:98:boolean isStateful() -> d
    124:124:boolean willDraw() -> e
androidx.core.content.res.ConfigurationHelper -> a.i.d.i.c:
    31:32:void <init>() -> <init>
    41:44:int getDensityDpi(android.content.res.Resources) -> a
androidx.core.content.res.FontResourcesParserCompat -> a.i.d.i.d:
    int DEFAULT_TIMEOUT_MILLIS -> f
    int FETCH_STRATEGY_ASYNC -> d
    int INFINITE_TIMEOUT_VALUE -> e
    int ITALIC -> b
    int FETCH_STRATEGY_BLOCKING -> c
    int NORMAL_WEIGHT -> a
    331:332:void <init>() -> <init>
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> a
    230:235:int getType(android.content.res.TypedArray,int) -> a
    246:270:java.util.List readCerts(android.content.res.Resources,int) -> a
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> a
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> a
    181:187:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> b
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> c
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> d
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> a.i.d.i.d$a:
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy -> a.i.d.i.d$b:
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> a.i.d.i.d$c:
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
    153:155:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> a
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> a.i.d.i.d$d:
    int mResourceId -> f
    java.lang.String mFileName -> a
    int mTtcIndex -> e
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> a
    143:143:int getResourceId() -> b
    139:139:int getTtcIndex() -> c
    135:135:java.lang.String getVariationSettings() -> d
    127:127:int getWeight() -> e
    131:131:boolean isItalic() -> f
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> a.i.d.i.d$e:
    androidx.core.provider.FontRequest mRequest -> a
    int mTimeoutMs -> b
    int mStrategy -> c
    82:86:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> a
    89:89:androidx.core.provider.FontRequest getRequest() -> b
    97:97:int getTimeout() -> c
androidx.core.content.res.GradientColorInflaterCompat -> a.i.d.i.e:
    int TILE_MODE_REPEAT -> b
    int TILE_MODE_MIRROR -> c
    int TILE_MODE_CLAMP -> a
    66:67:void <init>() -> <init>
    71:80:android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> a
    202:204:android.graphics.Shader$TileMode parseTileMode(int) -> a
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> a.i.d.i.e$a:
    int[] mColors -> a
    float[] mOffsets -> b
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> a.i.d.i.f:
    boolean $assertionsDisabled -> a
    29:29:void <clinit>() -> <clinit>
    193:193:void <init>() -> <init>
    41:50:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> a
    57:65:int[] append(int[],int,int) -> a
    72:80:long[] append(long[],int,long) -> a
    87:95:boolean[] append(boolean[],int,boolean) -> a
    110:123:java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object) -> a
    130:142:int[] insert(int[],int,int,int) -> a
    149:161:long[] insert(long[],int,int,long) -> a
    168:180:boolean[] insert(boolean[],int,int,boolean) -> a
    189:189:int growSize(int) -> a
androidx.core.content.res.ResourcesCompat -> a.i.d.i.g:
    java.lang.String TAG -> a
    441:441:void <init>() -> <init>
    115:120:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> a
    145:148:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    195:201:float getFloat(android.content.res.Resources,int) -> a
    227:230:android.graphics.Typeface getFont(android.content.Context,int) -> a
    318:326:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> a
    336:339:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> a
    359:367:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    379:381:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    175:178:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> b
    82:85:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> c
androidx.core.content.res.ResourcesCompat$FontCallback -> a.i.d.i.g$a:
    237:237:void <init>() -> <init>
    286:295:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    267:276:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> a.i.d.i.g$a$a:
    android.graphics.Typeface val$typeface -> b
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> c
    270:270:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    273:274:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> a.i.d.i.g$a$b:
    int val$reason -> b
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> c
    289:289:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    292:293:void run() -> run
androidx.core.content.res.TypedArrayUtils -> a.i.d.i.h:
    java.lang.String NAMESPACE -> a
    362:363:void <init>() -> <init>
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> a
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> a
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> a
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> a
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> a
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> a
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> a
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> a
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> a
    275:279:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> a
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> a
    354:359:int getAttr(android.content.Context,int,int) -> a
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> b
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> b
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> b
    310:314:java.lang.String getString(android.content.res.TypedArray,int,int) -> b
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> c
    326:330:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> c
    342:346:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> d
androidx.core.database.CursorWindowCompat -> a.i.e.a:
    30:32:void <init>() -> <init>
    41:47:android.database.CursorWindow create(java.lang.String,long) -> a
androidx.core.database.DatabaseUtilsCompat -> a.i.e.b:
    29:31:void <init>() -> <init>
    41:48:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> a
    60:61:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> a
androidx.core.database.sqlite.SQLiteCursorCompat -> a.i.e.c.a:
    29:31:void <init>() -> <init>
    45:48:void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean) -> a
androidx.core.graphics.BitmapCompat -> a.i.f.a:
    54:54:void <init>() -> <init>
    35:38:void setHasMipMap(android.graphics.Bitmap,boolean) -> a
    48:51:int getAllocationByteCount(android.graphics.Bitmap) -> a
    28:31:boolean hasMipMap(android.graphics.Bitmap) -> b
androidx.core.graphics.ColorUtils -> a.i.f.b:
    double XYZ_WHITE_REFERENCE_X -> a
    double XYZ_WHITE_REFERENCE_Y -> b
    int MIN_ALPHA_SEARCH_MAX_ITERATIONS -> f
    double XYZ_WHITE_REFERENCE_Z -> c
    int MIN_ALPHA_SEARCH_PRECISION -> g
    double XYZ_EPSILON -> d
    java.lang.ThreadLocal TEMP_ARRAY -> h
    double XYZ_KAPPA -> e
    45:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    92:95:android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color) -> a
    135:136:int compositeComponent(int,int,int,int,int) -> a
    145:148:double calculateLuminance(int) -> a
    159:161:double calculateContrast(int,int) -> a
    241:275:void RGBToHSL(int,int,int,float[]) -> a
    289:290:void colorToHSL(int,float[]) -> a
    306:356:int HSLToColor(float[]) -> a
    378:379:void colorToLAB(int,double[]) -> a
    399:403:void RGBToLAB(int,int,int,double[]) -> a
    513:527:void LABToXYZ(double,double,double,double[]) -> a
    570:572:int LABToColor(double,double,double) -> a
    579:579:double distanceEuclidean(double[],double[]) -> a
    589:589:int constrain(int,int,int) -> a
    593:593:double pivotXyzComponent(double) -> a
    611:616:int blendARGB(int,int,float) -> a
    633:634:void blendHSL(float[],float[],float,float[]) -> a
    656:657:void blendLAB(double[],double[],double,double[]) -> a
    667:674:float circularInterpolate(float,float,float) -> a
    678:683:double[] getTempDouble3Array() -> a
    131:131:int compositeAlpha(int,int) -> b
    187:189:int calculateMinimumAlpha(int,int,float) -> b
    421:422:void colorToXYZ(int,double[]) -> b
    444:445:void RGBToXYZ(int,int,int,double[]) -> b
    481:482:void XYZToLAB(double,double,double,double[]) -> b
    544:552:int XYZToColor(double,double,double) -> b
    585:585:float constrain(float,float,float) -> b
    53:64:int compositeColors(int,int) -> c
    365:366:int setAlphaComponent(int,int) -> d
androidx.core.graphics.PaintCompat -> a.i.f.c:
    java.lang.ThreadLocal sRectThreadLocal -> c
    java.lang.String TOFU_STRING -> a
    java.lang.String EM_STRING -> b
    34:34:void <clinit>() -> <clinit>
    119:119:void <init>() -> <init>
    45:104:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> a
    108:116:androidx.core.util.Pair obtainEmptyRects() -> a
androidx.core.graphics.PathParser -> a.i.f.d:
    java.lang.String LOGTAG -> a
    795:796:void <init>() -> <init>
    54:55:float[] copyOfRange(float[],int,int) -> a
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> a
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> a
    137:138:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> a
    174:186:int nextStart(java.lang.String,int) -> a
    190:191:void addNode(java.util.ArrayList,char,float[]) -> a
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> a
    315:316:boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float) -> a
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> b
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> b
    211:212:float[] getFloats(java.lang.String) -> c
androidx.core.graphics.PathParser$ExtractFloatResult -> a.i.f.d$a:
    boolean mEndWithNegOrDot -> b
    int mEndPosition -> a
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> a.i.f.d$b:
    char mType -> a
    float[] mParams -> b
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> a
    388:393:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> a
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> a
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> a
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> a
androidx.core.graphics.PathSegment -> a.i.f.e:
    android.graphics.PointF mStart -> a
    float mEndFraction -> d
    float mStartFraction -> b
    android.graphics.PointF mEnd -> c
    37:42:void <init>(android.graphics.PointF,float,android.graphics.PointF,float) -> <init>
    60:60:android.graphics.PointF getEnd() -> a
    67:67:float getEndFraction() -> b
    47:47:android.graphics.PointF getStart() -> c
    54:54:float getStartFraction() -> d
    72:75:boolean equals(java.lang.Object) -> equals
    83:87:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
androidx.core.graphics.PathUtils -> a.i.f.f:
    82:83:void <init>() -> <init>
    43:43:java.util.Collection flatten(android.graphics.Path) -> a
    60:79:java.util.Collection flatten(android.graphics.Path,float) -> a
androidx.core.graphics.TypefaceCompat -> a.i.f.g:
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
    androidx.collection.LruCache sTypefaceCache -> b
    46:63:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    88:88:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> a
    105:131:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    143:149:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    160:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    190:191:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> a
    76:76:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> b
    169:174:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> b
androidx.core.graphics.TypefaceCompatApi21Impl -> a.i.f.h:
    java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD -> g
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> k
    java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD -> f
    java.lang.Class sFontFamily -> h
    java.lang.reflect.Constructor sFontFamilyCtor -> i
    java.lang.reflect.Method sAddFontWeightStyle -> j
    boolean sHasInitBeenCalled -> l
    java.lang.String FONT_FAMILY_CLASS -> e
    java.lang.String TAG -> d
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    68:97:void init() -> a
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> a
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> a
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    114:118:java.lang.Object newFamily() -> b
androidx.core.graphics.TypefaceCompatApi24Impl -> a.i.f.i:
    java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD -> g
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> k
    java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD -> f
    java.lang.Class sFontFamily -> h
    java.lang.reflect.Constructor sFontFamilyCtor -> i
    java.lang.reflect.Method sAddFontWeightStyle -> j
    java.lang.String FONT_FAMILY_CLASS -> e
    java.lang.String TAG -> d
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    94:98:boolean isUsable() -> a
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> a
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    103:105:java.lang.Object newFamily() -> b
androidx.core.graphics.TypefaceCompatApi26Impl -> a.i.f.j:
    java.lang.reflect.Method mCreateFromFamiliesWithDefault -> s
    java.lang.Class mFontFamily -> m
    java.lang.reflect.Method mAddFontFromAssetManager -> o
    java.lang.reflect.Method mAddFontFromBuffer -> p
    java.lang.String FONT_FAMILY_CLASS -> u
    java.lang.reflect.Method mFreeze -> q
    java.lang.String TAG -> t
    int RESOLVE_BY_FONT_TABLE -> A
    java.lang.reflect.Method mAbortCreation -> r
    java.lang.String ADD_FONT_FROM_BUFFER_METHOD -> w
    java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD -> v
    java.lang.String FREEZE_METHOD -> y
    java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD -> x
    java.lang.String ABORT_CREATION_METHOD -> z
    java.lang.reflect.Constructor mFontFamilyCtor -> n
    74:108:void <init>() -> <init>
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> a
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> a
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    204:222:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    230:282:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    292:308:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    342:342:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> a
    127:129:java.lang.Object newFamily() -> b
    194:197:void abortCreation(java.lang.Object) -> b
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> b
    183:185:boolean freeze(java.lang.Object) -> c
    317:317:java.lang.Class obtainFontFamily() -> c
    332:332:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> c
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> d
    347:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> d
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> e
    338:338:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> f
androidx.core.graphics.TypefaceCompatApi28Impl -> a.i.f.k:
    java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD -> B
    int RESOLVE_BY_FONT_TABLE -> C
    java.lang.String DEFAULT_FAMILY -> D
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> a
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> d
androidx.core.graphics.TypefaceCompatBaseImpl -> a.i.f.l:
    java.util.concurrent.ConcurrentHashMap mFontFamilies -> a
    java.lang.String TAG -> b
    int INVALID_KEY -> c
    45:52:void <init>() -> <init>
    61:76:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> a
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    114:127:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> a
    137:146:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    153:153:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> a
    169:178:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    187:200:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    211:215:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> a
    219:223:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> a
    80:91:long getUniqueKey(android.graphics.Typeface) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> a.i.f.l$a:
    androidx.core.graphics.TypefaceCompatBaseImpl this$0 -> a
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> a
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> a
    99:99:boolean isItalic(java.lang.Object) -> b
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> a.i.f.l$b:
    androidx.core.graphics.TypefaceCompatBaseImpl this$0 -> a
    153:153:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    153:153:int getWeight(java.lang.Object) -> a
    156:156:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> a
    153:153:boolean isItalic(java.lang.Object) -> b
    161:161:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor -> a.i.f.l$c:
    int getWeight(java.lang.Object) -> a
    boolean isItalic(java.lang.Object) -> b
androidx.core.graphics.TypefaceCompatUtil -> a.i.f.m:
    java.lang.String TAG -> a
    java.lang.String CACHE_FILE_PREFIX -> b
    52:52:void <init>() -> <init>
    63:79:java.io.File getTempFile(android.content.Context) -> a
    88:93:java.nio.ByteBuffer mmap(java.io.File) -> a
    103:114:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> a
    124:134:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> a
    142:157:boolean copyToFile(java.io.File,java.io.InputStream) -> a
    165:170:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> a
    175:181:void closeQuietly(java.io.Closeable) -> a
androidx.core.graphics.drawable.DrawableCompat -> a.i.f.n.a:
    boolean sGetLayoutDirectionMethodFetched -> e
    java.lang.reflect.Method sGetLayoutDirectionMethod -> d
    java.lang.String TAG -> a
    boolean sSetLayoutDirectionMethodFetched -> c
    java.lang.reflect.Method sSetLayoutDirectionMethod -> b
    419:419:void <init>() -> <init>
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> a
    197:200:boolean canApplyTheme(android.graphics.drawable.Drawable) -> a
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    354:379:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> a
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> b
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> b
    177:180:int getAlpha(android.graphics.drawable.Drawable) -> c
    210:213:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> d
    391:415:int getLayoutDirection(android.graphics.drawable.Drawable) -> e
    95:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> f
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> g
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> h
    307:318:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> i
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> y
    java.lang.String TAG -> j
    android.os.Parcelable mParcelable -> d
    int mInt2 -> f
    java.lang.String EXTRA_OBJ -> t
    java.lang.String EXTRA_INT2 -> v
    java.lang.String EXTRA_TINT_MODE -> x
    java.lang.Object mObj1 -> b
    android.content.res.ColorStateList mTintList -> g
    float BLUR_FACTOR -> o
    float DEFAULT_VIEW_PORT_SCALE -> m
    int KEY_SHADOW_ALPHA -> q
    float ADAPTIVE_ICON_INSET_FACTOR -> l
    java.lang.String mTintModeStr -> i
    int TYPE_UNKNOWN -> k
    int mInt1 -> e
    java.lang.String EXTRA_TYPE -> s
    java.lang.String EXTRA_INT1 -> u
    int mType -> a
    java.lang.String EXTRA_TINT_LIST -> w
    android.graphics.PorterDuff$Mode mTintMode -> h
    float KEY_SHADOW_OFFSET_FACTOR -> p
    int AMBIENT_SHADOW_ALPHA -> r
    byte[] mData -> c
    float ICON_DIAMETER_FACTOR -> n
    177:177:void <clinit>() -> <clinit>
    308:309:void <init>() -> <init>
    311:313:void <init>(int) -> <init>
    195:196:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> a
    206:207:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> a
    247:248:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> a
    265:266:androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int) -> a
    282:283:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> a
    297:298:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> a
    415:415:androidx.core.graphics.drawable.IconCompat setTint(int) -> a
    425:426:androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList) -> a
    436:437:androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode) -> a
    489:506:void checkResource(android.content.Context) -> a
    590:605:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> a
    618:667:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> a
    749:754:void onPreParceling(boolean) -> a
    785:791:void onPostParceling() -> a
    831:859:androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle) -> a
    868:876:androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon) -> a
    894:897:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> a
    1027:1062:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> a
    232:233:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> b
    378:389:android.graphics.Bitmap getBitmap() -> b
    517:527:android.graphics.drawable.Drawable loadDrawable(android.content.Context) -> b
    817:818:java.lang.String typeToString(int) -> b
    973:980:int getResId(android.graphics.drawable.Icon) -> b
    357:361:int getResId() -> c
    535:537:android.graphics.drawable.Drawable loadDrawableInner(android.content.Context) -> c
    944:951:java.lang.String getResPackage(android.graphics.drawable.Icon) -> c
    339:343:java.lang.String getResPackage() -> d
    916:923:int getType(android.graphics.drawable.Icon) -> d
    324:327:int getType() -> e
    1001:1008:android.net.Uri getUri(android.graphics.drawable.Icon) -> e
    402:405:android.net.Uri getUri() -> f
    674:703:android.os.Bundle toBundle() -> g
    448:451:android.graphics.drawable.Icon toIcon() -> h
    708:744:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompat$IconType -> androidx.core.graphics.drawable.IconCompat$a:
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:51:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.RoundedBitmapDrawable -> a.i.f.n.c:
    int DEFAULT_PAINT_FLAGS -> n
    int mBitmapWidth -> l
    int mBitmapHeight -> m
    float mCornerRadius -> g
    boolean mApplyGravity -> j
    android.graphics.Matrix mShaderMatrix -> f
    boolean mIsCircular -> k
    android.graphics.Rect mDstRect -> h
    android.graphics.BitmapShader mBitmapShader -> e
    android.graphics.RectF mDstRectF -> i
    int mTargetDensity -> b
    int mGravity -> c
    android.graphics.Paint mPaint -> d
    android.graphics.Bitmap mBitmap -> a
    382:395:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    80:80:android.graphics.Bitmap getBitmap() -> a
    99:100:void setTargetDensity(android.graphics.Canvas) -> a
    111:112:void setTargetDensity(android.util.DisplayMetrics) -> a
    151:156:void setGravity(int) -> a
    194:196:void setAntiAlias(boolean) -> a
    223:223:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> a
    330:341:void setCornerRadius(float) -> a
    123:130:void setTargetDensity(int) -> b
    303:312:void setCircular(boolean) -> b
    356:356:float getCornerRadius() -> b
    398:398:boolean isGreaterThanZero(float) -> b
    140:140:int getGravity() -> c
    170:170:void setMipMap(boolean) -> c
    72:72:android.graphics.Paint getPaint() -> d
    260:271:void draw(android.graphics.Canvas) -> draw
    206:206:boolean hasAntiAlias() -> e
    182:182:boolean hasMipMap() -> f
    323:323:boolean isCircular() -> g
    284:284:int getAlpha() -> getAlpha
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:372:int getOpacity() -> getOpacity
    227:256:void updateDstRect() -> h
    84:86:void computeBitmapSize() -> i
    315:317:void updateCircularCornerRadius() -> j
    345:350:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:280:void setAlpha(int) -> setAlpha
    289:291:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    217:219:void setDither(boolean) -> setDither
    211:213:void setFilterBitmap(boolean) -> setFilterBitmap
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> a.i.f.n.b:
    31:32:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    56:58:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> a
    42:46:void setMipMap(boolean) -> c
    50:50:boolean hasMipMap() -> f
    36:38:void getOutline(android.graphics.Outline) -> getOutline
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> a.i.f.n.d:
    java.lang.String TAG -> a
    104:104:void <init>() -> <init>
    73:76:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> a
    84:88:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> a
    97:101:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> a
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> a.i.f.n.d$a:
    43:44:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    62:64:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> a
    48:52:void setMipMap(boolean) -> c
    56:56:boolean hasMipMap() -> f
androidx.core.graphics.drawable.TintAwareDrawable -> a.i.f.n.e:
androidx.core.graphics.drawable.WrappedDrawable -> a.i.f.n.f:
    android.graphics.drawable.Drawable getWrappedDrawable() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
androidx.core.graphics.drawable.WrappedDrawableApi14 -> a.i.f.n.g:
    android.graphics.drawable.Drawable mDrawable -> g
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> h
    androidx.core.graphics.drawable.WrappedDrawableState mState -> e
    boolean mMutated -> f
    android.graphics.PorterDuff$Mode mCurrentMode -> c
    int mCurrentColor -> b
    boolean mColorFilterSet -> d
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    74:77:void updateLocalState(android.content.res.Resources) -> a
    293:314:boolean updateTint(int[]) -> a
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> a
    330:349:void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
    353:353:boolean isCompatTintEnabled() -> b
    243:243:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> c
    86:87:void draw(android.graphics.Canvas) -> draw
    103:103:int getChangingConfigurations() -> getChangingConfigurations
    210:214:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    251:252:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    220:230:android.graphics.drawable.Drawable mutate() -> mutate
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:260:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    277:278:void setTint(int) -> setTint
    282:284:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:290:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    267:268:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> a.i.f.n.h:
    java.lang.String TAG -> i
    java.lang.reflect.Method sIsProjectedDrawableMethod -> j
    43:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    113:120:boolean isCompatTintEnabled() -> b
    140:147:void findAndCacheIsProjectedDrawableMethod() -> c
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:65:void getOutline(android.graphics.Outline) -> getOutline
    128:136:boolean isProjected() -> isProjected
    54:55:void setHotspot(float,float) -> setHotspot
    59:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:108:boolean setState(int[]) -> setState
    84:89:void setTint(int) -> setTint
    75:80:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:98:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> a.i.f.n.i:
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mChangingConfigurations -> a
    35:42:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> a
    61:61:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.display.DisplayManagerCompat -> a.i.g.a.a:
    android.content.Context mContext -> a
    java.util.WeakHashMap sInstances -> b
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> c
    34:34:void <clinit>() -> <clinit>
    53:55:void <init>(android.content.Context) -> <init>
    62:69:androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> a
    83:93:android.view.Display getDisplay(int) -> a
    103:110:android.view.Display[] getDisplays() -> a
    131:141:android.view.Display[] getDisplays(java.lang.String) -> a
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> a.i.g.b.a:
    android.content.Context mContext -> a
    55:57:void <init>(android.content.Context) -> <init>
    52:52:androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> a
    66:70:boolean hasEnrolledFingerprints() -> a
    107:121:void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> a
    138:147:android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> a
    153:162:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> a
    169:169:android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> a
    81:85:boolean isHardwareDetected() -> b
    126:132:android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> b
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> a.i.g.b.a$a:
    androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback -> a
    169:169:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    172:173:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    188:189:void onAuthenticationFailed() -> onAuthenticationFailed
    177:178:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    182:184:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> a.i.g.b.a$b:
    270:270:void <init>() -> <init>
    277:277:void onAuthenticationError(int,java.lang.CharSequence) -> a
    292:292:void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> a
    297:297:void onAuthenticationFailed() -> a
    286:286:void onAuthenticationHelp(int,java.lang.CharSequence) -> b
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> a.i.g.b.a$c:
    androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject -> a
    251:253:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    260:260:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> a
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> a.i.g.b.a$d:
    javax.crypto.Cipher mCipher -> b
    javax.crypto.Mac mMac -> c
    java.security.Signature mSignature -> a
    203:208:void <init>(java.security.Signature) -> <init>
    210:214:void <init>(javax.crypto.Cipher) -> <init>
    216:220:void <init>(javax.crypto.Mac) -> <init>
    234:234:javax.crypto.Cipher getCipher() -> a
    241:241:javax.crypto.Mac getMac() -> b
    227:227:java.security.Signature getSignature() -> c
androidx.core.internal.package-info -> a.i.h.a:
androidx.core.internal.view.SupportMenu -> a.i.h.b.a:
    int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED -> f
    int CATEGORY_SHIFT -> d
    int SUPPORTED_MODIFIERS_MASK -> e
    int USER_SHIFT -> b
    int CATEGORY_MASK -> c
    int USER_MASK -> a
androidx.core.internal.view.SupportMenuItem -> a.i.h.b.b:
    int SHOW_AS_ACTION_WITH_TEXT -> j
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> k
    int SHOW_AS_ACTION_IF_ROOM -> h
    int SHOW_AS_ACTION_ALWAYS -> i
    int SHOW_AS_ACTION_NEVER -> g
    boolean requiresOverflow() -> a
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
    androidx.core.view.ActionProvider getSupportActionProvider() -> b
    boolean requiresActionButton() -> c
androidx.core.internal.view.SupportSubMenu -> a.i.h.b.c:
androidx.core.location.LocationManagerCompat -> a.i.i.a:
    50:50:void <init>() -> <init>
    36:45:boolean isLocationEnabled(android.location.LocationManager) -> a
androidx.core.math.MathUtils -> a.i.j.a:
    24:24:void <init>() -> <init>
    39:44:float clamp(float,float,float) -> a
    60:65:double clamp(double,double,double) -> a
    81:86:int clamp(int,int,int) -> a
androidx.core.net.ConnectivityManagerCompat -> a.i.k.a:
    int RESTRICT_BACKGROUND_STATUS_WHITELISTED -> b
    int RESTRICT_BACKGROUND_STATUS_ENABLED -> c
    int RESTRICT_BACKGROUND_STATUS_DISABLED -> a
    164:164:void <init>() -> <init>
    139:143:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> a
    157:160:int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> a
    99:116:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> b
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus -> a.i.k.a$a:
androidx.core.net.DatagramSocketWrapper -> a.i.k.b:
    32:33:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> a.i.k.b$a:
    40:43:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
    47:47:void accept(java.net.SocketImpl) -> accept
    52:52:int available() -> available
    57:57:void bind(java.net.InetAddress,int) -> bind
    62:62:void close() -> close
    67:67:void connect(java.lang.String,int) -> connect
    72:72:void connect(java.net.InetAddress,int) -> connect
    97:97:void connect(java.net.SocketAddress,int) -> connect
    77:77:void create(boolean) -> create
    82:82:java.io.InputStream getInputStream() -> getInputStream
    107:107:java.lang.Object getOption(int) -> getOption
    87:87:java.io.OutputStream getOutputStream() -> getOutputStream
    92:92:void listen(int) -> listen
    102:102:void sendUrgentData(int) -> sendUrgentData
    112:112:void setOption(int,java.lang.Object) -> setOption
androidx.core.net.TrafficStatsCompat -> a.i.k.c:
    167:167:void <init>() -> <init>
    41:42:void clearThreadStatsTag() -> a
    67:68:void incrementOperationCount(int) -> a
    81:82:void incrementOperationCount(int,int) -> a
    114:115:void tagSocket(java.net.Socket) -> a
    137:148:void tagDatagramSocket(java.net.DatagramSocket) -> a
    53:53:int getThreadStatsTag() -> b
    99:100:void setThreadStatsTag(int) -> b
    124:125:void untagSocket(java.net.Socket) -> b
    154:165:void untagDatagramSocket(java.net.DatagramSocket) -> b
androidx.core.os.BuildCompat -> a.i.l.a:
    26:27:void <init>() -> <init>
    39:39:boolean isAtLeastN() -> a
    52:52:boolean isAtLeastNMR1() -> b
    65:65:boolean isAtLeastO() -> c
    78:78:boolean isAtLeastOMR1() -> d
    91:91:boolean isAtLeastP() -> e
    105:105:boolean isAtLeastQ() -> f
androidx.core.os.CancellationSignal -> a.i.l.b:
    java.lang.Object mCancellationSignalObj -> c
    boolean mIsCanceled -> a
    androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener -> b
    boolean mCancelInProgress -> d
    37:38:void <init>() -> <init>
    69:77:void cancel() -> a
    111:121:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> a
    138:149:java.lang.Object getCancellationSignalObject() -> b
    46:48:boolean isCanceled() -> c
    57:58:void throwIfCanceled() -> d
    153:159:void waitForCancelFinishedLocked() -> e
androidx.core.os.CancellationSignal$OnCancelListener -> a.i.l.b$a:
    void onCancel() -> a
androidx.core.os.ConfigurationCompat -> a.i.l.c:
    30:31:void <init>() -> <init>
    40:43:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> a
androidx.core.os.EnvironmentCompat -> a.i.l.d:
    java.lang.String TAG -> a
    java.lang.String MEDIA_UNKNOWN -> b
    76:76:void <init>() -> <init>
    57:73:java.lang.String getStorageState(java.io.File) -> a
androidx.core.os.HandlerCompat -> a.i.l.e:
    java.lang.String TAG -> a
    153:154:void <init>() -> <init>
    52:75:android.os.Handler createAsync(android.os.Looper) -> a
    93:116:android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback) -> a
    144:150:boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long) -> a
androidx.core.os.LocaleListCompat -> a.i.l.f:
    androidx.core.os.LocaleListCompat sEmptyLocaleList -> b
    androidx.core.os.LocaleListInterface mImpl -> a
    34:34:void <clinit>() -> <clinit>
    38:40:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    46:46:androidx.core.os.LocaleListCompat wrap(java.lang.Object) -> a
    55:55:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> a
    73:76:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> a
    86:86:java.util.Locale get(int) -> a
    96:96:boolean isEmpty() -> a
    117:117:int indexOf(java.util.Locale) -> a
    137:137:java.util.Locale getFirstMatch(java.lang.String[]) -> a
    174:193:java.util.Locale forLanguageTagCompat(java.lang.String) -> a
    104:104:int size() -> b
    158:159:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> b
    125:125:java.lang.String toLanguageTags() -> c
    65:65:java.lang.Object unwrap() -> d
    205:208:androidx.core.os.LocaleListCompat getAdjustedDefault() -> e
    234:234:boolean equals(java.lang.Object) -> equals
    225:228:androidx.core.os.LocaleListCompat getDefault() -> f
    145:145:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> g
    239:239:int hashCode() -> hashCode
    244:244:java.lang.String toString() -> toString
androidx.core.os.LocaleListCompatWrapper -> a.i.l.g:
    java.util.Locale[] mList -> a
    java.util.Locale[] sEmptyList -> c
    java.util.Locale EN_LATN -> f
    java.util.Locale LOCALE_AR_XB -> e
    java.util.Locale LOCALE_EN_XA -> d
    java.lang.String mStringRepresentation -> b
    39:217:void <clinit>() -> <clinit>
    120:147:void <init>(java.util.Locale[]) -> <init>
    44:44:java.lang.Object getLocaleList() -> a
    49:49:java.util.Locale get(int) -> a
    64:69:int indexOf(java.util.Locale) -> a
    151:157:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> a
    180:189:int matchScore(java.util.Locale,java.util.Locale) -> a
    259:260:java.util.Locale computeFirstMatch(java.util.Collection,boolean) -> a
    265:265:java.util.Locale getFirstMatch(java.lang.String[]) -> a
    117:117:java.lang.String toLanguageTags() -> b
    208:214:int findFirstMatchIndex(java.util.Locale) -> b
    221:253:int computeFirstMatchIndex(java.util.Collection,boolean) -> b
    160:168:java.lang.String getLikelyScript(java.util.Locale) -> c
    175:175:boolean isPseudoLocale(java.util.Locale) -> d
    74:89:boolean equals(java.lang.Object) -> equals
    94:98:int hashCode() -> hashCode
    54:54:boolean isEmpty() -> isEmpty
    59:59:int size() -> size
    103:112:java.lang.String toString() -> toString
androidx.core.os.LocaleListInterface -> a.i.l.h:
    java.util.Locale get(int) -> a
    java.util.Locale getFirstMatch(java.lang.String[]) -> a
    java.lang.Object getLocaleList() -> a
    int indexOf(java.util.Locale) -> a
    java.lang.String toLanguageTags() -> b
androidx.core.os.LocaleListPlatformWrapper -> a.i.l.i:
    android.os.LocaleList mLocaleList -> a
    31:33:void <init>(android.os.LocaleList) -> <init>
    37:37:java.lang.Object getLocaleList() -> a
    42:42:java.util.Locale get(int) -> a
    57:57:int indexOf(java.util.Locale) -> a
    83:83:java.util.Locale getFirstMatch(java.lang.String[]) -> a
    77:77:java.lang.String toLanguageTags() -> b
    62:62:boolean equals(java.lang.Object) -> equals
    67:67:int hashCode() -> hashCode
    47:47:boolean isEmpty() -> isEmpty
    52:52:int size() -> size
    72:72:java.lang.String toString() -> toString
androidx.core.os.MessageCompat -> a.i.l.j:
    boolean sTrySetAsynchronous -> a
    boolean sTryIsAsynchronous -> b
    34:39:void <clinit>() -> <clinit>
    112:113:void <init>() -> <init>
    71:84:void setAsynchronous(android.os.Message,boolean) -> a
    97:109:boolean isAsynchronous(android.os.Message) -> a
androidx.core.os.OperationCanceledException -> a.i.l.k:
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
androidx.core.os.ParcelCompat -> a.i.l.l:
    46:46:void <init>() -> <init>
    32:32:boolean readBoolean(android.os.Parcel) -> a
    43:44:void writeBoolean(android.os.Parcel,boolean) -> a
androidx.core.os.ParcelableCompat -> a.i.l.m:
    68:68:void <init>() -> <init>
    41:41:android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks) -> a
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> a.i.l.m$a:
    androidx.core.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    48:50:void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks) -> <init>
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.ParcelableCompatCreatorCallbacks -> a.i.l.n:
androidx.core.os.TraceCompat -> a.i.l.o:
    64:64:void <init>() -> <init>
    46:49:void beginSection(java.lang.String) -> a
    59:62:void endSection() -> a
androidx.core.os.UserManagerCompat -> a.i.l.p:
    31:32:void <init>() -> <init>
    41:44:boolean isUserUnlocked(android.content.Context) -> a
androidx.core.provider.FontRequest -> a.i.m.a:
    java.lang.String mIdentifier -> f
    java.util.List mCertificates -> d
    java.lang.String mProviderAuthority -> a
    int mCertificatesArray -> e
    java.lang.String mQuery -> c
    java.lang.String mProviderPackage -> b
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    78:87:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    125:125:java.util.List getCertificates() -> a
    137:137:int getCertificatesArrayResId() -> b
    143:143:java.lang.String getIdentifier() -> c
    95:95:java.lang.String getProviderAuthority() -> d
    104:104:java.lang.String getProviderPackage() -> e
    113:113:java.lang.String getQuery() -> f
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> a.i.m.b:
    androidx.collection.LruCache sTypefaceCache -> d
    androidx.core.provider.SelfDestructiveThread sBackgroundThread -> f
    java.lang.Object sLock -> g
    androidx.collection.SimpleArrayMap sPendingReplies -> h
    java.util.Comparator sByteArrayComparator -> i
    java.lang.String PARCEL_FONT_RESULTS -> a
    int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS -> e
    int RESULT_CODE_PROVIDER_NOT_FOUND -> b
    int RESULT_CODE_WRONG_CERTIFICATES -> c
    172:784:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    184:186:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> a
    223:224:void resetCache() -> a
    232:302:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> a
    531:532:void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> a
    670:670:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> a
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> a
    727:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> a
    744:747:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> a
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> a
    801:809:boolean equalsByteArrayList(java.util.List,java.util.List) -> a
    813:817:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> a
    824:878:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> a
    540:653:void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> b
androidx.core.provider.FontsContractCompat$1 -> a.i.m.b$a:
    android.content.Context val$context -> a
    androidx.core.provider.FontRequest val$request -> b
    int val$style -> c
    java.lang.String val$id -> d
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:261:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> a.i.m.b$b:
    android.os.Handler val$handler -> b
    androidx.core.content.res.ResourcesCompat$FontCallback val$fontCallback -> a
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    273:273:void onReply(java.lang.Object) -> a
    276:284:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
androidx.core.provider.FontsContractCompat$3 -> a.i.m.b$c:
    java.lang.String val$id -> a
    303:303:void <init>(java.lang.String) -> <init>
    303:303:void onReply(java.lang.Object) -> a
    307:313:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
androidx.core.provider.FontsContractCompat$4 -> a.i.m.b$d:
    android.content.Context val$appContext -> b
    android.os.Handler val$callerThreadHandler -> d
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> e
    androidx.core.provider.FontRequest val$request -> c
    541:541:void <init>(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> <init>
    547:556:void run() -> run
androidx.core.provider.FontsContractCompat$4$1 -> a.i.m.b$d$a:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    549:549:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    552:554:void run() -> run
androidx.core.provider.FontsContractCompat$4$2 -> a.i.m.b$d$b:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    562:562:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    565:567:void run() -> run
androidx.core.provider.FontsContractCompat$4$3 -> a.i.m.b$d$c:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    571:571:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    574:576:void run() -> run
androidx.core.provider.FontsContractCompat$4$4 -> a.i.m.b$d$d:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    581:581:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    584:586:void run() -> run
androidx.core.provider.FontsContractCompat$4$5 -> a.i.m.b$d$e:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    594:594:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    597:599:void run() -> run
androidx.core.provider.FontsContractCompat$4$6 -> a.i.m.b$d$f:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    611:611:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    614:616:void run() -> run
androidx.core.provider.FontsContractCompat$4$7 -> a.i.m.b$d$g:
    int val$resultCode -> b
    androidx.core.provider.FontsContractCompat$4 this$0 -> c
    619:619:void <init>(androidx.core.provider.FontsContractCompat$4,int) -> <init>
    622:623:void run() -> run
androidx.core.provider.FontsContractCompat$4$8 -> a.i.m.b$d$h:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    635:635:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    638:640:void run() -> run
androidx.core.provider.FontsContractCompat$4$9 -> a.i.m.b$d$i:
    android.graphics.Typeface val$typeface -> b
    androidx.core.provider.FontsContractCompat$4 this$0 -> c
    645:645:void <init>(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface) -> <init>
    648:649:void run() -> run
androidx.core.provider.FontsContractCompat$5 -> a.i.m.b$e:
    784:784:void <init>() -> <init>
    787:795:int compare(byte[],byte[]) -> a
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.core.provider.FontsContractCompat$Columns -> a.i.m.b$f:
    java.lang.String RESULT_CODE -> f
    int RESULT_CODE_MALFORMED_QUERY -> j
    int RESULT_CODE_FONT_NOT_FOUND -> h
    int RESULT_CODE_FONT_UNAVAILABLE -> i
    int RESULT_CODE_OK -> g
    java.lang.String FILE_ID -> a
    java.lang.String VARIATION_SETTINGS -> c
    java.lang.String TTC_INDEX -> b
    java.lang.String ITALIC -> e
    java.lang.String WEIGHT -> d
    82:82:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$FontFamilyResult -> a.i.m.b$g:
    int STATUS_WRONG_CERTIFICATES -> d
    int STATUS_UNEXPECTED_DATA_PROVIDED -> e
    int STATUS_OK -> c
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
    427:430:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> a
    433:433:int getStatusCode() -> b
androidx.core.provider.FontsContractCompat$FontInfo -> a.i.m.b$h:
    int mResultCode -> e
    int mTtcIndex -> b
    int mWeight -> c
    android.net.Uri mUri -> a
    boolean mItalic -> d
    346:352:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> a
    365:365:int getTtcIndex() -> b
    358:358:android.net.Uri getUri() -> c
    372:372:int getWeight() -> d
    379:379:boolean isItalic() -> e
androidx.core.provider.FontsContractCompat$FontRequestCallback -> a.i.m.b$i:
    int FAIL_REASON_MALFORMED_QUERY -> h
    int FAIL_REASON_FONT_NOT_FOUND -> f
    int FAIL_REASON_FONT_UNAVAILABLE -> g
    int FAIL_REASON_FONT_LOAD_ERROR -> d
    int FAIL_REASON_SECURITY_VIOLATION -> e
    int FAIL_REASON_PROVIDER_NOT_FOUND -> b
    int FAIL_REASON_WRONG_CERTIFICATES -> c
    int RESULT_OK -> a
    493:493:void <init>() -> <init>
    501:501:void onTypefaceRetrieved(android.graphics.Typeface) -> a
    514:514:void onTypefaceRequestFailed(int) -> a
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason -> a.i.m.b$i$a:
androidx.core.provider.FontsContractCompat$TypefaceResult -> a.i.m.b$j:
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
    211:214:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> a.i.m.c:
    java.lang.String mThreadName -> h
    int MSG_DESTRUCTION -> j
    android.os.Handler mHandler -> c
    int MSG_INVOKE_RUNNABLE -> i
    android.os.Handler$Callback mCallback -> e
    int mDestructAfterMillisec -> f
    int mPriority -> g
    int mGeneration -> d
    java.lang.Object mLock -> a
    android.os.HandlerThread mThread -> b
    79:84:void <init>(java.lang.String,int,int) -> <init>
    101:103:int getGeneration() -> a
    136:155:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> a
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> a
    214:219:void onInvokeRunnable(java.lang.Runnable) -> a
    91:93:boolean isRunning() -> b
    107:116:void post(java.lang.Runnable) -> b
    223:232:void onDestruction() -> c
androidx.core.provider.SelfDestructiveThread$1 -> a.i.m.c$a:
    androidx.core.provider.SelfDestructiveThread this$0 -> a
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:67:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> a.i.m.c$b:
    android.os.Handler val$callingHandler -> c
    java.util.concurrent.Callable val$callable -> b
    androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply -> d
    androidx.core.provider.SelfDestructiveThread this$0 -> e
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> a.i.m.c$b$a:
    androidx.core.provider.SelfDestructiveThread$2 this$1 -> c
    java.lang.Object val$result -> b
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> a.i.m.c$c:
    androidx.core.provider.SelfDestructiveThread this$0 -> g
    java.util.concurrent.atomic.AtomicBoolean val$running -> e
    java.util.concurrent.locks.Condition val$cond -> f
    java.util.concurrent.locks.ReentrantLock val$lock -> d
    java.util.concurrent.Callable val$callable -> c
    java.util.concurrent.atomic.AtomicReference val$holder -> b
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
androidx.core.provider.SelfDestructiveThread$ReplyCallback -> a.i.m.c$d:
    void onReply(java.lang.Object) -> a
androidx.core.telephony.mbms.MbmsHelper -> a.i.n.a.a:
    36:36:void <init>() -> <init>
    57:75:java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo) -> a
androidx.core.text.BidiFormatter -> a.i.o.a:
    char LRM -> h
    int DEFAULT_FLAGS -> n
    char PDF -> g
    char RLM -> i
    int FLAG_STEREO_RESET -> m
    java.lang.String RLM_STRING -> k
    java.lang.String LRM_STRING -> j
    androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE -> p
    java.lang.String EMPTY_STRING -> l
    androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE -> o
    int mFlags -> b
    androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> d
    androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> c
    int DIR_UNKNOWN -> r
    boolean mIsRtlContext -> a
    int DIR_RTL -> s
    char RLE -> f
    char LRE -> e
    int DIR_LTR -> q
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    245:245:androidx.core.text.BidiFormatter getInstance(boolean) -> a
    254:254:androidx.core.text.BidiFormatter getInstance(java.util.Locale) -> a
    280:280:boolean getStereoReset() -> a
    347:347:boolean isRtl(java.lang.String) -> a
    358:358:boolean isRtl(java.lang.CharSequence) -> a
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> a
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> a
    441:441:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat) -> a
    456:456:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> a
    469:469:java.lang.String unicodeWrap(java.lang.String,boolean) -> a
    483:483:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean) -> a
    272:272:boolean isRtlContext() -> b
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> b
    494:494:java.lang.String unicodeWrap(java.lang.String) -> b
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> b
    516:516:boolean isRtlLocale(java.util.Locale) -> b
    236:236:androidx.core.text.BidiFormatter getInstance() -> c
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> c
    558:558:int getEntryDir(java.lang.CharSequence) -> c
    541:541:int getExitDir(java.lang.CharSequence) -> d
androidx.core.text.BidiFormatter$Builder -> a.i.o.a$a:
    androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    boolean mIsRtlContext -> a
    int mFlags -> b
    139:141:void <init>() -> <init>
    148:150:void <init>(boolean) -> <init>
    157:159:void <init>(java.util.Locale) -> <init>
    177:182:androidx.core.text.BidiFormatter$Builder stereoReset(boolean) -> a
    193:194:androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat) -> a
    205:209:androidx.core.text.BidiFormatter build() -> a
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> b
    167:170:void initialize(boolean) -> c
androidx.core.text.BidiFormatter$DirectionalityEstimator -> a.i.o.a$b:
    java.lang.CharSequence text -> a
    int DIR_TYPE_CACHE_SIZE -> f
    byte[] DIR_TYPE_CACHE -> g
    int charIndex -> d
    boolean isHtml -> b
    int length -> c
    char lastChar -> e
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    803:803:byte getCachedDirectionality(char) -> a
    846:862:byte dirTypeBackward() -> a
    816:832:byte dirTypeForward() -> b
    646:728:int getEntryDir() -> c
    744:792:int getExitDir() -> d
    944:956:byte skipEntityBackward() -> e
    929:930:byte skipEntityForward() -> f
    901:920:byte skipTagBackward() -> g
    872:888:byte skipTagForward() -> h
androidx.core.text.HtmlCompat -> a.i.o.b:
    int FROM_HTML_MODE_LEGACY -> j
    int FROM_HTML_MODE_COMPACT -> k
    int FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE -> h
    int FROM_HTML_OPTION_USE_CSS_COLORS -> i
    int FROM_HTML_SEPARATOR_LINE_BREAK_LIST -> f
    int FROM_HTML_SEPARATOR_LINE_BREAK_DIV -> g
    int FROM_HTML_SEPARATOR_LINE_BREAK_HEADING -> d
    int FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM -> e
    int TO_HTML_PARAGRAPH_LINES_INDIVIDUAL -> b
    int FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH -> c
    int TO_HTML_PARAGRAPH_LINES_CONSECUTIVE -> a
    181:182:void <init>() -> <init>
    146:150:android.text.Spanned fromHtml(java.lang.String,int) -> a
    161:165:android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> a
    174:178:java.lang.String toHtml(android.text.Spanned,int) -> a
androidx.core.text.ICUCompat -> a.i.o.c:
    java.lang.reflect.Method sAddLikelySubtagsMethod -> c
    java.lang.String TAG -> a
    java.lang.reflect.Method sGetScriptMethod -> b
    36:62:void <clinit>() -> <clinit>
    146:146:void <init>() -> <init>
    114:125:java.lang.String getScript(java.lang.String) -> a
    129:143:java.lang.String addLikelySubtags(java.util.Locale) -> a
    89:108:java.lang.String maximizeAndGetScript(java.util.Locale) -> b
androidx.core.text.PrecomputedTextCompat -> a.i.o.d:
    android.text.Spannable mText -> b
    androidx.core.text.PrecomputedTextCompat$Params mParams -> c
    java.lang.Object sLock -> g
    android.text.PrecomputedText mWrapped -> e
    int[] mParagraphEnds -> d
    java.util.concurrent.Executor sExecutor -> h
    char LINE_FEED -> f
    72:73:void <clinit>() -> <clinit>
    479:484:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    487:492:void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params) -> <init>
    426:473:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> a
    519:519:int getParagraphCount() -> a
    534:535:int getParagraphEnd(int) -> a
    627:637:java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor) -> a
    512:512:androidx.core.text.PrecomputedTextCompat$Params getParams() -> b
    526:527:int getParagraphStart(int) -> b
    501:504:android.text.PrecomputedText getPrecomputedText() -> c
    712:712:char charAt(int) -> charAt
    687:687:int getSpanEnd(java.lang.Object) -> getSpanEnd
    692:692:int getSpanFlags(java.lang.Object) -> getSpanFlags
    682:682:int getSpanStart(java.lang.Object) -> getSpanStart
    677:677:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    707:707:int length() -> length
    697:697:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    663:664:void removeSpan(java.lang.Object) -> removeSpan
    651:652:void setSpan(java.lang.Object,int,int,int) -> setSpan
    717:717:java.lang.CharSequence subSequence(int,int) -> subSequence
    722:722:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> a.i.o.d$a:
    android.text.TextPaint mPaint -> a
    android.text.PrecomputedText$Params mWrapped -> e
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    195:201:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    204:210:void <init>(android.text.PrecomputedText$Params) -> <init>
    243:243:int getBreakStrategy() -> a
    266:317:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> a
    255:255:int getHyphenationFrequency() -> b
    231:231:android.text.TextDirectionHeuristic getTextDirection() -> c
    218:218:android.text.TextPaint getTextPaint() -> d
    327:342:boolean equals(java.lang.Object) -> equals
    347:366:int hashCode() -> hashCode
    374:395:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> a.i.o.d$a$a:
    android.text.TextPaint mPaint -> a
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    115:128:void <init>(android.text.TextPaint) -> <init>
    144:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> a
    180:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> a
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> a
    162:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> b
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask -> a.i.o.d$b:
    560:561:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> a.i.o.d$b$a:
    java.lang.CharSequence mText -> b
    androidx.core.text.PrecomputedTextCompat$Params mParams -> a
    547:550:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
    542:542:java.lang.Object call() -> call
    554:554:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.TextDirectionHeuristicCompat -> a.i.o.e:
    boolean isRtl(java.lang.CharSequence,int,int) -> a
    boolean isRtl(char[],int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat -> a.i.o.f:
    androidx.core.text.TextDirectionHeuristicCompat LTR -> a
    int STATE_FALSE -> h
    int STATE_UNKNOWN -> i
    androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR -> e
    androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> d
    int STATE_TRUE -> g
    androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> c
    androidx.core.text.TextDirectionHeuristicCompat RTL -> b
    androidx.core.text.TextDirectionHeuristicCompat LOCALE -> f
    33:68:void <clinit>() -> <clinit>
    257:257:void <init>() -> <init>
    79:81:int isRtlText(int) -> a
    91:95:int isRtlTextOrFormat(int) -> b
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> a.i.o.f$a:
    boolean mLookForRtl -> a
    androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> b
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> a.i.o.f$b:
    androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> a.i.o.f$c:
    int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> a.i.o.f$d:
    androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    boolean defaultIsRtl() -> a
    125:125:boolean isRtl(char[],int,int) -> a
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> a
    140:142:boolean doCheck(java.lang.CharSequence,int,int) -> b
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> a.i.o.f$e:
    boolean mDefaultIsRtl -> b
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> a.i.o.f$f:
    androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> b
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> a
androidx.core.text.TextUtilsCompat -> a.i.o.g:
    java.util.Locale ROOT -> a
    java.lang.String HEBR_SCRIPT_SUBTAG -> c
    java.lang.String ARAB_SCRIPT_SUBTAG -> b
    33:33:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
    45:77:java.lang.String htmlEncode(java.lang.String) -> a
    119:122:int getLayoutDirectionFromFirstChar(java.util.Locale) -> a
    90:104:int getLayoutDirectionFromLocale(java.util.Locale) -> b
androidx.core.text.util.FindAddress -> a.i.o.h.a:
    java.lang.String NL -> g
    androidx.core.text.util.FindAddress$ZipRange[] sStateZipCodeRanges -> f
    java.lang.String WS -> i
    java.lang.String SP -> h
    java.lang.String WORD_END -> k
    java.util.regex.Pattern sLocationNameRe -> s
    java.lang.String WORD_DELIM -> j
    java.util.regex.Pattern sStateRe -> r
    java.lang.String HOUSE_POST_DELIM -> m
    java.util.regex.Pattern sZipCodeRe -> u
    java.util.regex.Pattern sSuffixedNumberRe -> t
    java.lang.String HOUSE_PRE_DELIM -> o
    java.lang.String HOUSE_END -> n
    int kMaxAddressNameWordLength -> d
    java.util.regex.Pattern sHouseNumberRe -> q
    int MAX_LOCATION_NAME_DISTANCE -> e
    java.lang.String HOUSE_COMPONENT -> p
    int MAX_ADDRESS_WORDS -> b
    int MAX_ADDRESS_LINES -> c
    int MIN_ADDRESS_WORDS -> a
    java.util.regex.Pattern sWordRe -> l
    72:267:void <clinit>() -> <clinit>
    517:518:void <init>() -> <init>
    272:297:boolean checkHouseNumber(java.lang.String) -> a
    310:316:java.util.regex.MatchResult matchHouseNumber(java.lang.String,int) -> a
    366:366:boolean isValidZipCode(java.lang.String,java.lang.String) -> a
    401:490:int attemptMatch(java.lang.String,java.util.regex.MatchResult) -> a
    330:332:java.util.regex.MatchResult matchState(java.lang.String,int) -> b
    345:351:boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult) -> b
    500:514:java.lang.String findAddress(java.lang.String) -> b
    388:388:boolean isValidLocationName(java.lang.String) -> c
    377:377:boolean isValidZipCode(java.lang.String) -> d
androidx.core.text.util.FindAddress$ZipRange -> a.i.o.h.a$a:
    int mException2 -> d
    int mHigh -> b
    int mException1 -> c
    int mLow -> a
    43:48:void <init>(int,int,int,int) -> <init>
    51:52:boolean matches(java.lang.String) -> a
androidx.core.text.util.LinkifyCompat -> a.i.o.h.b:
    java.lang.String[] EMPTY_STRING -> a
    java.util.Comparator COMPARATOR -> b
    57:59:void <clinit>() -> <clinit>
    542:542:void <init>() -> <init>
    102:149:boolean addLinks(android.text.Spannable,int) -> a
    164:190:boolean addLinks(android.widget.TextView,int) -> a
    207:212:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String) -> a
    231:236:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> a
    259:271:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> a
    284:287:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String) -> a
    308:311:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> a
    335:372:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> a
    376:376:boolean shouldAddLinksFallbackToFramework() -> a
    380:387:void addLinkMovementMethod(android.widget.TextView) -> a
    391:414:java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter) -> a
    420:437:void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> a
    440:443:void applyLink(java.lang.String,int,int,android.text.Spannable) -> a
    446:482:void gatherMapLinks(java.util.ArrayList,android.text.Spannable) -> a
    487:490:java.lang.String findAddress(java.lang.String) -> a
    495:537:void pruneOverlaps(java.util.ArrayList,android.text.Spannable) -> b
androidx.core.text.util.LinkifyCompat$1 -> a.i.o.h.b$a:
    59:59:void <init>() -> <init>
    62:78:int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec) -> a
    59:59:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.core.text.util.LinkifyCompat$LinkSpec -> a.i.o.h.b$b:
    android.text.style.URLSpan frameworkAddedSpan -> a
    int end -> d
    java.lang.String url -> b
    int start -> c
    550:551:void <init>() -> <init>
androidx.core.text.util.LinkifyCompat$LinkifyMask -> a.i.o.h.b$c:
androidx.core.util.AtomicFile -> a.i.p.a:
    java.io.File mBackupName -> b
    java.io.File mBaseName -> a
    54:57:void <init>(java.io.File) -> <init>
    72:74:void delete() -> a
    144:154:void failWrite(java.io.FileOutputStream) -> a
    65:65:java.io.File getBaseFile() -> b
    127:136:void finishWrite(java.io.FileOutputStream) -> b
    170:174:java.io.FileInputStream openRead() -> c
    212:216:boolean sync(java.io.FileOutputStream) -> c
    183:206:byte[] readFully() -> d
    93:109:java.io.FileOutputStream startWrite() -> e
androidx.core.util.Consumer -> a.i.p.b:
    void accept(java.lang.Object) -> a
androidx.core.util.DebugUtils -> a.i.p.c:
    49:50:void <init>() -> <init>
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
androidx.core.util.LogWriter -> a.i.p.d:
    java.lang.String mTag -> b
    java.lang.StringBuilder mBuilder -> c
    43:45:void <init>(java.lang.String) -> <init>
    68:72:void flushBuilder() -> a
    48:49:void close() -> close
    52:53:void flush() -> flush
    56:65:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> a.i.p.e:
    29:31:void <init>() -> <init>
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> a
    65:65:int hashCode(java.lang.Object) -> a
    92:95:int hash(java.lang.Object[]) -> a
androidx.core.util.Pair -> a.i.p.f:
    java.lang.Object second -> b
    java.lang.Object first -> a
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    82:82:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> a
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.PatternsCompat -> a.i.p.g:
    java.util.regex.Pattern AUTOLINK_WEB_URL -> w
    java.lang.String IRI_LABEL -> f
    java.lang.String TLD -> h
    java.util.regex.Pattern STRICT_DOMAIN_NAME -> s
    java.lang.String WORD_BOUNDARY -> l
    java.lang.String PORT_NUMBER -> n
    java.lang.String STRICT_HOST_NAME -> r
    java.lang.String RELAXED_DOMAIN_NAME -> t
    java.lang.String WEB_URL_WITH_PROTOCOL -> v
    java.lang.String EMAIL_CHAR -> x
    java.util.regex.Pattern IP_ADDRESS -> b
    java.lang.String EMAIL_ADDRESS_DOMAIN -> z
    java.lang.String IANA_TOP_LEVEL_DOMAINS -> a
    java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS -> A
    java.lang.String UCS_CHAR -> c
    java.lang.String TLD_CHAR -> e
    java.lang.String PUNYCODE_TLD -> g
    java.lang.String HOST_NAME -> i
    java.lang.String PROTOCOL -> k
    java.lang.String USER_INFO -> m
    java.lang.String PATH_AND_QUERY -> o
    java.lang.String STRICT_TLD -> q
    java.util.regex.Pattern WEB_URL -> p
    java.util.regex.Pattern DOMAIN_NAME -> j
    java.lang.String WEB_URL_WITHOUT_PROTOCOL -> u
    java.lang.String EMAIL_ADDRESS_LOCAL_PART -> y
    java.util.regex.Pattern EMAIL_ADDRESS -> B
    java.lang.String LABEL_CHAR -> d
    153:337:void <clinit>() -> <clinit>
    351:351:void <init>() -> <init>
androidx.core.util.Pools -> a.i.p.h:
    73:75:void <init>() -> <init>
androidx.core.util.Pools$Pool -> a.i.p.h$a:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
androidx.core.util.Pools$SimplePool -> a.i.p.h$b:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    94:96:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> a
    116:117:boolean release(java.lang.Object) -> a
    128:133:boolean isInPool(java.lang.Object) -> b
androidx.core.util.Pools$SynchronizedPool -> a.i.p.h$c:
    java.lang.Object mLock -> c
    153:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> a
    165:167:boolean release(java.lang.Object) -> a
androidx.core.util.Preconditions -> a.i.p.i:
    171:172:void <init>() -> <init>
    35:36:void checkArgument(boolean) -> a
    49:50:void checkArgument(boolean,java.lang.Object) -> a
    63:64:java.lang.Object checkNotNull(java.lang.Object) -> a
    80:81:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> a
    95:96:void checkState(boolean,java.lang.String) -> a
    121:122:int checkArgumentNonnegative(int,java.lang.String) -> a
    137:138:int checkArgumentNonnegative(int) -> a
    158:160:int checkArgumentInRange(int,int,int,java.lang.String) -> a
    108:109:void checkState(boolean) -> b
androidx.core.util.Supplier -> a.i.p.j:
androidx.core.util.TimeUtils -> a.i.p.k:
    char[] sFormatStr -> f
    java.lang.Object sFormatSync -> e
    int SECONDS_PER_DAY -> d
    int SECONDS_PER_MINUTE -> b
    int SECONDS_PER_HOUR -> c
    int HUNDRED_DAY_FIELD_LEN -> a
    40:41:void <clinit>() -> <clinit>
    185:185:void <init>() -> <init>
    44:45:int accumField(int,int,boolean,int) -> a
    58:77:int printField(char[],int,char,int,boolean,int) -> a
    81:148:int formatDurationLocked(long,int) -> a
    154:157:void formatDuration(long,java.lang.StringBuilder) -> a
    163:166:void formatDuration(long,java.io.PrintWriter,int) -> a
    172:173:void formatDuration(long,java.io.PrintWriter) -> a
    178:183:void formatDuration(long,long,java.io.PrintWriter) -> a
androidx.core.view.AccessibilityDelegateCompat -> a.i.q.a:
    130:130:void <clinit>() -> <clinit>
    139:140:void <init>() -> <init>
    146:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    318:324:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    394:396:java.util.List getActionList(android.view.View) -> getActionList
    155:155:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    381:390:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    256:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    275:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    236:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    344:360:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    364:377:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    173:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    195:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> a.i.q.a$a:
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:120:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:92:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> a.i.q.b:
    android.content.Context mContext -> a
    androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    java.lang.String TAG -> d
    139:141:void <init>(android.content.Context) -> <init>
    147:147:android.content.Context getContext() -> a
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> a
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> a
    279:282:void subUiVisibilityChanged(boolean) -> a
    289:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> a
    299:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> a
    256:256:boolean hasSubMenu() -> b
    196:196:boolean isVisible() -> c
    android.view.View onCreateActionView() -> d
    243:243:boolean onPerformDefaultAction() -> e
    182:182:boolean overridesItemVisibility() -> f
    206:209:void refreshVisibility() -> g
    312:314:void reset() -> h
androidx.core.view.ActionProvider$SubUiVisibilityListener -> a.i.q.b$a:
    void onSubUiVisibilityChanged(boolean) -> a
androidx.core.view.ActionProvider$VisibilityListener -> a.i.q.b$b:
androidx.core.view.DisplayCutoutCompat -> a.i.q.c:
    java.lang.Object mDisplayCutout -> a
    46:47:void <init>(android.graphics.Rect,java.util.List) -> <init>
    49:51:void <init>(java.lang.Object) -> <init>
    99:102:java.util.List getBoundingRects() -> a
    130:130:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> a
    64:67:int getSafeInsetBottom() -> b
    73:76:int getSafeInsetLeft() -> c
    82:85:int getSafeInsetRight() -> d
    55:58:int getSafeInsetTop() -> e
    108:112:boolean equals(java.lang.Object) -> equals
    121:121:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
androidx.core.view.DragAndDropPermissionsCompat -> a.i.q.d:
    java.lang.Object mDragAndDropPermissions -> a
    36:38:void <init>(java.lang.Object) -> <init>
    44:51:androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent) -> a
    58:61:void release() -> a
androidx.core.view.DragStartHelper -> a.i.q.e:
    android.view.View mView -> a
    boolean mDragging -> e
    int mLastTouchY -> d
    android.view.View$OnLongClickListener mLongClickListener -> f
    android.view.View$OnTouchListener mTouchListener -> g
    int mLastTouchX -> c
    androidx.core.view.DragStartHelper$OnDragStartListener mListener -> b
    96:99:void <init>(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener) -> <init>
    107:109:void attach() -> a
    129:161:boolean onTouch(android.view.View,android.view.MotionEvent) -> a
    170:170:boolean onLongClick(android.view.View) -> a
    178:179:void getTouchPosition(android.graphics.Point) -> a
    117:119:void detach() -> b
androidx.core.view.DragStartHelper$1 -> a.i.q.e$a:
    androidx.core.view.DragStartHelper this$0 -> b
    181:181:void <init>(androidx.core.view.DragStartHelper) -> <init>
    184:184:boolean onLongClick(android.view.View) -> onLongClick
androidx.core.view.DragStartHelper$2 -> a.i.q.e$b:
    androidx.core.view.DragStartHelper this$0 -> b
    188:188:void <init>(androidx.core.view.DragStartHelper) -> <init>
    191:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.DragStartHelper$OnDragStartListener -> a.i.q.e$c:
    boolean onDragStart(android.view.View,androidx.core.view.DragStartHelper) -> a
androidx.core.view.GestureDetectorCompat -> a.i.q.f:
    androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    531:531:boolean isLongpressEnabled() -> a
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> a
    556:557:void setIsLongpressEnabled(boolean) -> a
    567:568:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl -> a.i.q.f$a:
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> a.i.q.f$b:
    android.view.MotionEvent mCurrentDownEvent -> m
    boolean mIsDoubleTapping -> o
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> g
    boolean mDeferConfirmSingleTap -> i
    boolean mAlwaysInTapRegion -> k
    int mMaximumFlingVelocity -> d
    int mDoubleTapSlopSquare -> b
    int TAP -> A
    android.os.Handler mHandler -> e
    int SHOW_PRESS -> y
    int TAP_TIMEOUT -> w
    float mDownFocusY -> s
    boolean mStillDown -> h
    float mLastFocusY -> q
    android.view.GestureDetector$OnGestureListener mListener -> f
    android.view.MotionEvent mPreviousUpEvent -> n
    boolean mInLongPress -> j
    boolean mAlwaysInBiggerTapRegion -> l
    int mMinimumFlingVelocity -> c
    int mTouchSlopSquare -> a
    boolean mIsLongpressEnabled -> t
    int LONG_PRESS -> z
    int DOUBLE_TAP_TIMEOUT -> x
    int LONGPRESS_TIMEOUT -> v
    float mDownFocusX -> r
    float mLastFocusX -> p
    android.view.VelocityTracker mVelocityTracker -> u
    62:64:void <clinit>() -> <clinit>
    152:163:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    166:167:void init(android.content.Context) -> a
    193:194:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
    207:208:void setIsLongpressEnabled(boolean) -> a
    215:215:boolean isLongpressEnabled() -> a
    228:410:boolean onTouchEvent(android.view.MotionEvent) -> a
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    458:462:void dispatchLongPress() -> b
    414:427:void cancel() -> c
    430:440:void cancelTaps() -> d
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> a.i.q.f$b$a:
    androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    103:105:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:109:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:136:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> a.i.q.f$c:
    android.view.GestureDetector mDetector -> a
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    475:475:boolean isLongpressEnabled() -> a
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> a
    485:486:void setIsLongpressEnabled(boolean) -> a
    490:491:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
androidx.core.view.GravityCompat -> a.i.q.g:
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> d
    int START -> b
    int END -> c
    int RELATIVE_LAYOUT_DIRECTION -> a
    153:153:void <init>() -> <init>
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    98:103:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    126:131:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
    145:149:int getAbsoluteGravity(int,int) -> a
androidx.core.view.InputDeviceCompat -> a.i.q.h:
    int SOURCE_STYLUS -> n
    int SOURCE_TRACKBALL -> o
    int SOURCE_TOUCHSCREEN -> l
    int SOURCE_MOUSE -> m
    int SOURCE_DPAD -> j
    int SOURCE_GAMEPAD -> k
    int SOURCE_UNKNOWN -> h
    int SOURCE_KEYBOARD -> i
    int SOURCE_CLASS_POSITION -> f
    int SOURCE_CLASS_JOYSTICK -> g
    int SOURCE_CLASS_POINTER -> d
    int SOURCE_CLASS_TRACKBALL -> e
    int SOURCE_CLASS_NONE -> b
    int SOURCE_CLASS_BUTTON -> c
    int SOURCE_CLASS_MASK -> a
    int SOURCE_HDMI -> t
    int SOURCE_ANY -> u
    int SOURCE_ROTARY_ENCODER -> r
    int SOURCE_JOYSTICK -> s
    int SOURCE_TOUCHPAD -> p
    int SOURCE_TOUCH_NAVIGATION -> q
    220:220:void <init>() -> <init>
androidx.core.view.KeyEventDispatcher -> a.i.q.i:
    java.lang.reflect.Field sDialogKeyListenerField -> d
    boolean sActionBarFieldsFetched -> a
    boolean sDialogFieldsFetched -> c
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    46:49:void <clinit>() -> <clinit>
    51:53:void <init>() -> <init>
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> a
    80:91:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> a
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> a
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> a
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> a
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> a
androidx.core.view.KeyEventDispatcher$Component -> a.i.q.i$a:
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
androidx.core.view.LayoutInflaterCompat -> a.i.q.j:
    java.lang.String TAG -> a
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> b
    boolean sCheckedField -> c
    95:96:void <init>() -> <init>
    71:90:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
    111:128:void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory) -> a
    169:173:androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> a
    139:152:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> b
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper -> a.i.q.j$a:
    androidx.core.view.LayoutInflaterFactory mDelegateFactory -> b
    43:45:void <init>(androidx.core.view.LayoutInflaterFactory) -> <init>
    49:49:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    55:55:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    60:60:java.lang.String toString() -> toString
androidx.core.view.LayoutInflaterFactory -> a.i.q.k:
androidx.core.view.MarginLayoutParamsCompat -> a.i.q.l:
    166:166:void <init>() -> <init>
    127:139:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> a
    161:164:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> a
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    150:153:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> b
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> c
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> c
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> d
    112:115:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> d
androidx.core.view.MenuCompat -> a.i.q.m:
    55:55:void <init>() -> <init>
    37:38:void setShowAsAction(android.view.MenuItem,int) -> a
    48:53:void setGroupDividerEnabled(android.view.Menu,boolean) -> a
androidx.core.view.MenuItemCompat -> a.i.q.n:
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> f
    java.lang.String TAG -> a
    int SHOW_AS_ACTION_ALWAYS -> d
    int SHOW_AS_ACTION_WITH_TEXT -> e
    int SHOW_AS_ACTION_NEVER -> b
    int SHOW_AS_ACTION_IF_ROOM -> c
    557:557:void <init>() -> <init>
    153:153:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    175:175:android.view.MenuItem setActionView(android.view.MenuItem,int) -> a
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> a
    268:268:boolean collapseActionView(android.view.MenuItem) -> a
    302:302:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener) -> a
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> a
    397:403:void setShortcut(android.view.MenuItem,char,char,int,int) -> a
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> a
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> a
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> a
    135:136:void setShowAsAction(android.view.MenuItem,int) -> b
    249:249:boolean expandActionView(android.view.MenuItem) -> b
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> b
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> b
    224:230:androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem) -> c
    188:188:android.view.View getActionView(android.view.MenuItem) -> d
    481:487:int getAlphabeticModifiers(android.view.MenuItem) -> e
    335:341:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> f
    515:521:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> g
    548:554:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> h
    436:442:int getNumericModifiers(android.view.MenuItem) -> i
    364:370:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> j
    284:284:boolean isActionViewExpanded(android.view.MenuItem) -> k
androidx.core.view.MenuItemCompat$1 -> a.i.q.n$a:
    androidx.core.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    302:302:void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener) -> <init>
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MenuItemCompat$OnActionExpandListener -> a.i.q.n$b:
androidx.core.view.MotionEventCompat -> a.i.q.o:
    int AXIS_GENERIC_3 -> O
    int AXIS_PRESSURE -> l
    int AXIS_RELATIVE_X -> K
    int ACTION_HOVER_ENTER -> h
    int AXIS_BRAKE -> G
    int ACTION_HOVER_MOVE -> d
    int AXIS_THROTTLE -> C
    int AXIS_GENERIC_12 -> X
    int AXIS_HAT_X -> y
    int AXIS_GENERIC_8 -> T
    int AXIS_Z -> u
    int AXIS_GENERIC_4 -> P
    int AXIS_TOOL_MINOR -> q
    int AXIS_RELATIVE_Y -> L
    int AXIS_GENERIC_16 -> b0
    int AXIS_SIZE -> m
    int AXIS_DISTANCE -> H
    int ACTION_HOVER_EXIT -> i
    int AXIS_RUDDER -> D
    int ACTION_SCROLL -> e
    int ACTION_MASK -> a
    int AXIS_HAT_Y -> z
    int AXIS_GENERIC_13 -> Y
    int AXIS_RX -> v
    int AXIS_GENERIC_9 -> U
    int AXIS_ORIENTATION -> r
    int AXIS_GENERIC_5 -> Q
    int AXIS_TOUCH_MAJOR -> n
    int AXIS_GENERIC_1 -> M
    int AXIS_X -> j
    int AXIS_TILT -> I
    int ACTION_POINTER_INDEX_MASK -> f
    int AXIS_WHEEL -> E
    int ACTION_POINTER_DOWN -> b
    int AXIS_LTRIGGER -> A
    int AXIS_GENERIC_14 -> Z
    int AXIS_GENERIC_10 -> V
    int AXIS_RY -> w
    int AXIS_GENERIC_6 -> R
    int AXIS_VSCROLL -> s
    int AXIS_GENERIC_2 -> N
    int AXIS_TOUCH_MINOR -> o
    int BUTTON_PRIMARY -> c0
    int AXIS_GENERIC_15 -> a0
    int AXIS_SCROLL -> J
    int AXIS_Y -> k
    int AXIS_GAS -> F
    int ACTION_POINTER_INDEX_SHIFT -> g
    int AXIS_RTRIGGER -> B
    int ACTION_POINTER_UP -> c
    int AXIS_RZ -> x
    int AXIS_GENERIC_11 -> W
    int AXIS_HSCROLL -> t
    int AXIS_GENERIC_7 -> S
    int AXIS_TOOL_MAJOR -> p
    602:602:void <init>() -> <init>
    477:477:int getActionIndex(android.view.MotionEvent) -> a
    488:488:int findPointerIndex(android.view.MotionEvent,int) -> a
    590:590:float getAxisValue(android.view.MotionEvent,int,int) -> a
    465:465:int getActionMasked(android.view.MotionEvent) -> b
    570:570:float getAxisValue(android.view.MotionEvent,int) -> b
    499:499:int getPointerId(android.view.MotionEvent,int) -> c
    599:599:int getButtonState(android.view.MotionEvent) -> c
    510:510:float getX(android.view.MotionEvent,int) -> d
    532:532:int getPointerCount(android.view.MotionEvent) -> d
    521:521:float getY(android.view.MotionEvent,int) -> e
    544:544:int getSource(android.view.MotionEvent) -> e
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> f
androidx.core.view.NestedScrollingChild -> a.i.q.r:
androidx.core.view.NestedScrollingChild2 -> a.i.q.p:
androidx.core.view.NestedScrollingChild3 -> a.i.q.q:
androidx.core.view.NestedScrollingChildHelper -> a.i.q.s:
    android.view.ViewParent mNestedScrollingParentTouch -> a
    int[] mTempNestedScrollConsumed -> e
    android.view.View mView -> c
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    boolean mIsNestedScrollingEnabled -> d
    56:58:void <init>(android.view.View) -> <init>
    70:74:void setNestedScrollingEnabled(boolean) -> a
    100:100:boolean hasNestedScrollingParent() -> a
    114:114:boolean hasNestedScrollingParent(int) -> a
    145:164:boolean startNestedScroll(int,int) -> a
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> a
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> a
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> a
    348:355:boolean dispatchNestedFling(float,float,boolean) -> a
    368:375:boolean dispatchNestedPreFling(float,float) -> a
    400:401:void onStopNestedScroll(android.view.View) -> a
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> a
    86:86:boolean isNestedScrollingEnabled() -> b
    129:129:boolean startNestedScroll(int) -> b
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> b
    186:191:void stopNestedScroll(int) -> c
    387:388:void onDetachedFromWindow() -> c
    175:176:void stopNestedScroll() -> d
    404:406:android.view.ViewParent getNestedScrollingParentForType(int) -> d
    425:428:int[] getTempNestedScrollConsumed() -> e
androidx.core.view.NestedScrollingParent -> a.i.q.v:
androidx.core.view.NestedScrollingParent2 -> a.i.q.t:
androidx.core.view.NestedScrollingParent3 -> a.i.q.u:
androidx.core.view.NestedScrollingParentHelper -> a.i.q.w:
    int mNestedScrollAxesNonTouch -> b
    int mNestedScrollAxesTouch -> a
    50:51:void <init>(android.view.ViewGroup) -> <init>
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    92:92:int getNestedScrollAxes() -> a
    103:104:void onStopNestedScroll(android.view.View) -> a
    114:119:void onStopNestedScroll(android.view.View,int) -> a
androidx.core.view.OnApplyWindowInsetsListener -> a.i.q.x:
androidx.core.view.OneShotPreDrawListener -> a.i.q.y:
    java.lang.Runnable mRunnable -> d
    android.view.ViewTreeObserver mViewTreeObserver -> c
    android.view.View mView -> b
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:59:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> a
    80:86:void removeListener() -> a
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.PointerIconCompat -> a.i.q.z:
    int TYPE_NO_DROP -> n
    int TYPE_ALL_SCROLL -> o
    int TYPE_ALIAS -> l
    int TYPE_COPY -> m
    int TYPE_TEXT -> j
    int TYPE_VERTICAL_TEXT -> k
    int TYPE_CELL -> h
    int TYPE_CROSSHAIR -> i
    int TYPE_HELP -> f
    int TYPE_WAIT -> g
    int TYPE_CONTEXT_MENU -> d
    int TYPE_HAND -> e
    int TYPE_NULL -> b
    int TYPE_ARROW -> c
    int TYPE_DEFAULT -> x
    int TYPE_GRAB -> v
    int TYPE_GRABBING -> w
    int TYPE_ZOOM_IN -> t
    int TYPE_ZOOM_OUT -> u
    java.lang.Object mPointerIcon -> a
    int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW -> r
    int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW -> s
    int TYPE_HORIZONTAL_DOUBLE_ARROW -> p
    int TYPE_VERTICAL_DOUBLE_ARROW -> q
    107:109:void <init>(java.lang.Object) -> <init>
    116:116:java.lang.Object getPointerIcon() -> a
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> a
    151:154:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> a
    180:183:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> a
androidx.core.view.ScaleGestureDetectorCompat -> a.i.q.a0:
    26:26:void <init>() -> <init>
    40:42:void setQuickScaleEnabled(java.lang.Object,boolean) -> a
    53:56:void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> a
    68:68:boolean isQuickScaleEnabled(java.lang.Object) -> a
    78:81:boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> a
androidx.core.view.ScrollingView -> a.i.q.b0:
androidx.core.view.TintableBackgroundView -> a.i.q.c0:
androidx.core.view.VelocityTrackerCompat -> a.i.q.d0:
    52:52:void <init>() -> <init>
    37:37:float getXVelocity(android.view.VelocityTracker,int) -> a
    49:49:float getYVelocity(android.view.VelocityTracker,int) -> b
androidx.core.view.ViewCompat -> a.i.q.e0:
    int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS -> V
    int LAYER_TYPE_NONE -> l
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> h
    boolean sMinHeightFieldFetched -> L
    int SCROLL_INDICATOR_END -> G
    int OVER_SCROLL_NEVER -> d
    int SCROLL_INDICATOR_BOTTOM -> C
    java.util.WeakHashMap sTransitionNameMap -> P
    boolean sAccessibilityDelegateCheckFailed -> T
    java.lang.reflect.Field sMinHeightField -> K
    int SCROLL_AXIS_VERTICAL -> y
    java.lang.String TAG -> a
    int MEASURED_HEIGHT_STATE_SHIFT -> u
    java.lang.reflect.Field sAccessibilityDelegateField -> S
    int LAYOUT_DIRECTION_INHERIT -> q
    int LAYER_TYPE_SOFTWARE -> m
    int ACCESSIBILITY_LIVE_REGION_NONE -> i
    int SCROLL_INDICATOR_LEFT -> D
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> e
    java.util.WeakHashMap sViewPropertyAnimatorMap -> Q
    int TYPE_TOUCH -> z
    int MEASURED_STATE_TOO_SMALL -> v
    int LAYOUT_DIRECTION_LOCALE -> r
    int LAYER_TYPE_HARDWARE -> n
    java.lang.reflect.Method sDispatchStartTemporaryDetach -> M
    int ACCESSIBILITY_LIVE_REGION_POLITE -> j
    boolean sMinWidthFieldFetched -> J
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> f
    int SCROLL_INDICATOR_RIGHT -> E
    int OVER_SCROLL_ALWAYS -> b
    int TYPE_NON_TOUCH -> A
    java.lang.reflect.Field sMinWidthField -> I
    int SCROLL_AXIS_NONE -> w
    int MEASURED_SIZE_MASK -> s
    int LAYOUT_DIRECTION_LTR -> o
    boolean sTempDetachBound -> O
    java.lang.reflect.Method sDispatchFinishTemporaryDetach -> N
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> k
    int SCROLL_INDICATOR_START -> F
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> g
    int SCROLL_INDICATOR_TOP -> B
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> c
    java.util.concurrent.atomic.AtomicInteger sNextGeneratedId -> H
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> R
    int SCROLL_AXIS_HORIZONTAL -> x
    java.lang.ThreadLocal sThreadLocalRect -> U
    androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager -> W
    int MEASURED_STATE_MASK -> t
    int LAYOUT_DIRECTION_RTL -> p
    458:4051:void <clinit>() -> <clinit>
    3730:3730:void <init>() -> <init>
    1665:1665:int getMeasuredState(android.view.View) -> A
    1634:1634:int getMeasuredWidthAndState(android.view.View) -> B
    1938:1961:int getMinimumHeight(android.view.View) -> C
    1904:1927:int getMinimumWidth(android.view.View) -> D
    3482:3485:int getNextClusterForwardId(android.view.View) -> E
    896:901:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> F
    534:534:int getOverScrollMode(android.view.View) -> G
    1760:1763:int getPaddingEnd(android.view.View) -> H
    1744:1747:int getPaddingStart(android.view.View) -> I
    1553:1556:android.view.ViewParent getParentForAccessibility(android.view.View) -> J
    2137:2137:float getPivotX(android.view.View) -> K
    2166:2166:float getPivotY(android.view.View) -> L
    2190:2190:float getRotation(android.view.View) -> M
    2198:2198:float getRotationX(android.view.View) -> N
    2206:2206:float getRotationY(android.view.View) -> O
    2214:2214:float getScaleX(android.view.View) -> P
    2222:2222:float getScaleY(android.view.View) -> Q
    3391:3394:int getScrollIndicators(android.view.View) -> R
    2313:2319:java.lang.String getTransitionName(android.view.View) -> S
    1857:1857:float getTranslationX(android.view.View) -> T
    1871:1871:float getTranslationY(android.view.View) -> U
    2277:2280:float getTranslationZ(android.view.View) -> V
    2326:2329:int getWindowSystemUiVisibility(android.view.View) -> W
    2230:2230:float getX(android.view.View) -> X
    2238:2238:float getY(android.view.View) -> Y
    3146:3149:float getZ(android.view.View) -> Z
    502:502:boolean canScrollHorizontally(android.view.View,int) -> a
    625:626:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    656:657:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    686:691:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> a
    723:726:void setAutofillHints(android.view.View,java.lang.String[]) -> a
    992:997:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    1010:1015:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    1032:1037:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    1154:1157:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    1180:1186:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> a
    1258:1259:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> a
    1263:1270:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
    1288:1295:void removeActionWithId(int,android.view.View) -> a
    1406:1407:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    1492:1501:void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    1617:1617:int resolveSizeAndState(int,int,int) -> a
    1680:1680:int combineMeasuredStates(int,int) -> a
    1972:1980:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> a
    2029:2030:void setAlpha(android.view.View,float) -> a
    2291:2299:void setTransitionName(android.view.View,java.lang.String) -> a
    2357:2375:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    2421:2436:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> a
    2477:2485:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> a
    2559:2564:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
    2589:2608:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    2636:2655:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    2784:2792:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> a
    2815:2822:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> a
    2941:2948:void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[]) -> a
    2977:2984:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> a
    3009:3015:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> a
    3039:3046:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> a
    3082:3088:boolean dispatchNestedPreFling(android.view.View,float,float) -> a
    3284:3287:void setClipBounds(android.view.View,android.graphics.Rect) -> a
    3373:3376:void setScrollIndicators(android.view.View,int,int) -> a
    3402:3406:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> a
    3450:3453:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> a
    3470:3473:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> a
    3574:3577:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> a
    3590:3593:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> a
    3662:3694:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> a
    3758:3761:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> a
    3848:3856:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> a
    3931:3932:void setAccessibilityHeading(android.view.View,boolean) -> a
    3935:3935:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> a
    870:870:boolean hasAccessibilityDelegate(android.view.View) -> a0
    516:516:boolean canScrollVertically(android.view.View,int) -> b
    593:594:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    1781:1786:void setPaddingRelative(android.view.View,int,int,int,int) -> b
    1790:1798:void bindTempDetach() -> b
    2245:2248:void setElevation(android.view.View,float) -> b
    2452:2460:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> b
    2515:2516:void setActivated(android.view.View,boolean) -> b
    2866:2871:boolean startNestedScroll(android.view.View,int,int) -> b
    3440:3443:void setTooltipText(android.view.View,java.lang.CharSequence) -> b
    3461:3464:void cancelDragAndDrop(android.view.View) -> b
    3705:3728:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> b
    3750:3753:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> b
    3626:3629:boolean hasExplicitFocusable(android.view.View) -> b0
    1827:1844:void dispatchFinishTemporaryDetach(android.view.View) -> c
    2153:2154:void setPivotX(android.view.View,float) -> c
    2398:2399:void setFitsSystemWindows(android.view.View,boolean) -> c
    3255:3264:void compatOffsetLeftAndRight(android.view.View,int) -> c
    3639:3650:int generateViewId() -> c
    2755:2761:boolean hasNestedScrollingParent(android.view.View) -> c0
    479:488:android.graphics.Rect getEmptyTempRect() -> d
    1804:1821:void dispatchStartTemporaryDetach(android.view.View) -> d
    2182:2183:void setPivotY(android.view.View,float) -> d
    3207:3216:void compatOffsetTopAndBottom(android.view.View,int) -> d
    3556:3559:void setFocusedByDefault(android.view.View,boolean) -> d
    3321:3324:boolean hasOnClickListeners(android.view.View) -> d0
    955:958:void setHasTransientState(android.view.View,boolean) -> e
    1318:1321:void enableAccessibleClickableSpanSupport(android.view.View) -> e
    2072:2073:void setRotation(android.view.View,float) -> e
    2900:2905:boolean hasNestedScrollingParent(android.view.View,int) -> e
    3878:3878:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> e
    2533:2536:boolean hasOverlappingRendering(android.view.View) -> e0
    884:891:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> f
    2086:2087:void setRotationX(android.view.View,float) -> f
    3522:3525:void setKeyboardNavigationCluster(android.view.View,boolean) -> f
    3806:3806:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> f
    4026:4049:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> f
    941:944:boolean hasTransientState(android.view.View) -> f0
    907:928:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> g
    2100:2101:void setRotationY(android.view.View,float) -> g
    2674:2681:void setNestedScrollingEnabled(android.view.View,boolean) -> g
    3224:3252:void offsetLeftAndRight(android.view.View,int) -> g
    3914:3915:boolean isAccessibilityHeading(android.view.View) -> g0
    1693:1696:int getAccessibilityLiveRegion(android.view.View) -> h
    2113:2114:void setScaleX(android.view.View,float) -> h
    2499:2500:void setSaveFromParentEnabled(android.view.View,boolean) -> h
    3176:3204:void offsetTopAndBottom(android.view.View,int) -> h
    3309:3312:boolean isAttachedToWindow(android.view.View) -> h0
    1280:1285:void removeAccessibilityAction(android.view.View,int) -> i
    1347:1353:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> i
    2126:2127:void setScaleY(android.view.View,float) -> i
    3782:3783:void setScreenReaderFocusable(android.view.View,boolean) -> i
    3537:3540:boolean isFocusedByDefault(android.view.View) -> i0
    1576:1582:android.view.View requireViewById(android.view.View,int) -> j
    1995:1996:void setTranslationX(android.view.View,float) -> j
    3874:3874:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> j
    1132:1135:boolean isImportantForAccessibility(android.view.View) -> j0
    1298:1304:java.util.List getActionList(android.view.View) -> k
    1729:1732:void setAccessibilityLiveRegion(android.view.View,int) -> k
    2012:2013:void setTranslationY(android.view.View,float) -> k
    857:860:boolean isImportantForAutofill(android.view.View) -> k0
    1081:1093:void setImportantForAccessibility(android.view.View,int) -> l
    1367:1367:float getAlpha(android.view.View) -> l
    2266:2269:void setTranslationZ(android.view.View,float) -> l
    3104:3107:boolean isInLayout(android.view.View) -> l0
    788:791:void setImportantForAutofill(android.view.View,int) -> m
    1224:1237:int getAvailableActionIdFromResources(android.view.View) -> m
    2044:2045:void setX(android.view.View,float) -> m
    3508:3511:boolean isKeyboardNavigationCluster(android.view.View) -> m0
    1456:1459:void setLabelFor(android.view.View,int) -> n
    2059:2060:void setY(android.view.View,float) -> n
    2573:2576:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> n
    3115:3118:boolean isLaidOut(android.view.View) -> n0
    1539:1542:void setLayoutDirection(android.view.View,int) -> o
    2618:2621:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> o
    3165:3168:void setZ(android.view.View,float) -> o
    3132:3135:boolean isLayoutDirectionResolved(android.view.View) -> o0
    3299:3302:android.graphics.Rect getClipBounds(android.view.View) -> p
    3496:3499:void setNextClusterForwardId(android.view.View,int) -> p
    2697:2703:boolean isNestedScrollingEnabled(android.view.View) -> p0
    553:554:void setOverScrollMode(android.view.View,int) -> q
    3420:3428:android.view.Display getDisplay(android.view.View) -> q
    1597:1597:boolean isOpaque(android.view.View) -> q0
    2256:2259:float getElevation(android.view.View) -> r
    3339:3342:void setScrollIndicators(android.view.View,int) -> r
    2546:2549:boolean isPaddingRelative(android.view.View) -> r0
    2382:2385:boolean getFitsSystemWindows(android.view.View) -> s
    2719:2725:boolean startNestedScroll(android.view.View,int) -> s
    3801:3802:boolean isScreenReaderFocusable(android.view.View) -> s0
    1054:1057:int getImportantForAccessibility(android.view.View) -> t
    2883:2888:void stopNestedScroll(android.view.View,int) -> t
    2412:2413:void jumpDrawablesToCurrentState(android.view.View) -> t0
    744:747:int getImportantForAutofill(android.view.View) -> u
    970:975:void postInvalidateOnAnimation(android.view.View) -> u0
    1442:1445:int getLabelFor(android.view.View) -> v
    2337:2342:void requestApplyInsets(android.view.View) -> v0
    1431:1431:int getLayerType(android.view.View) -> w
    3604:3607:boolean restoreDefaultFocus(android.view.View) -> w0
    1515:1518:int getLayoutDirection(android.view.View) -> x
    2738:2743:void stopNestedScroll(android.view.View) -> x0
    1893:1893:android.graphics.Matrix getMatrix(android.view.View) -> y
    3267:3270:void tickleInvalidationFlag(android.view.View) -> y0
    1651:1651:int getMeasuredHeightAndState(android.view.View) -> z
androidx.core.view.ViewCompat$1 -> a.i.q.e0$a:
    androidx.core.view.OnApplyWindowInsetsListener val$listener -> a
    2427:2427:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2430:2432:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$2 -> a.i.q.e0$b:
    androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat val$listener -> a
    3672:3672:void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
    3675:3675:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
androidx.core.view.ViewCompat$3 -> a.i.q.e0$c:
    3807:3807:void <init>(int,java.lang.Class,int) -> <init>
    3807:3807:java.lang.Object frameworkGet(android.view.View) -> a
    3807:3807:void frameworkSet(android.view.View,java.lang.Object) -> a
    3807:3807:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    3812:3812:java.lang.Boolean frameworkGet(android.view.View) -> a
    3818:3819:void frameworkSet(android.view.View,java.lang.Boolean) -> a
    3823:3823:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> b
androidx.core.view.ViewCompat$4 -> a.i.q.e0$d:
    3879:3879:void <init>(int,java.lang.Class,int,int) -> <init>
    3879:3879:java.lang.Object frameworkGet(android.view.View) -> a
    3879:3879:void frameworkSet(android.view.View,java.lang.Object) -> a
    3879:3879:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    3884:3884:java.lang.CharSequence frameworkGet(android.view.View) -> a
    3890:3891:void frameworkSet(android.view.View,java.lang.CharSequence) -> a
    3895:3895:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> a
androidx.core.view.ViewCompat$5 -> a.i.q.e0$e:
    3936:3936:void <init>(int,java.lang.Class,int) -> <init>
    3936:3936:java.lang.Object frameworkGet(android.view.View) -> a
    3936:3936:void frameworkSet(android.view.View,java.lang.Object) -> a
    3936:3936:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    3941:3941:java.lang.Boolean frameworkGet(android.view.View) -> a
    3947:3948:void frameworkSet(android.view.View,java.lang.Boolean) -> a
    3952:3952:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> b
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> a.i.q.e0$f:
    java.util.WeakHashMap mPanesToVisible -> b
    4054:4056:void <init>() -> <init>
    4080:4085:void addAccessibilityPane(android.view.View) -> a
    4096:4104:void checkPaneVisibility(android.view.View,boolean) -> a
    4089:4092:void removeAccessibilityPane(android.view.View) -> b
    4108:4109:void registerForLayoutCallback(android.view.View) -> c
    4113:4114:void unregisterForLayoutCallback(android.view.View) -> d
    4061:4064:void onGlobalLayout() -> onGlobalLayout
    4070:4071:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4076:4076:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewCompat$AccessibilityViewProperty -> a.i.q.e0$g:
    int mContentChangeType -> d
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mTagKey -> a
    3965:3967:void <init>(int,java.lang.Class,int) -> <init>
    3970:3975:void <init>(int,java.lang.Class,int,int) -> <init>
    java.lang.Object frameworkGet(android.view.View) -> a
    void frameworkSet(android.view.View,java.lang.Object) -> a
    4007:4007:boolean extrasAvailable() -> a
    4011:4011:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    4018:4020:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> a
    3978:3989:void set(android.view.View,java.lang.Object) -> b
    3992:4000:java.lang.Object get(android.view.View) -> b
    4003:4003:boolean frameworkAvailable() -> b
androidx.core.view.ViewCompat$FocusDirection -> a.i.q.e0$h:
androidx.core.view.ViewCompat$FocusRealDirection -> a.i.q.e0$i:
androidx.core.view.ViewCompat$FocusRelativeDirection -> a.i.q.e0$j:
androidx.core.view.ViewCompat$NestedScrollType -> a.i.q.e0$k:
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> a.i.q.e0$l:
androidx.core.view.ViewCompat$ScrollAxis -> a.i.q.e0$m:
androidx.core.view.ViewCompat$ScrollIndicators -> a.i.q.e0$n:
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> a.i.q.e0$o:
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    java.util.WeakHashMap mViewsContainingListeners -> a
    4121:4121:void <clinit>() -> <clinit>
    4117:4136:void <init>() -> <init>
    4139:4142:android.util.SparseArray getCapturedKeys() -> a
    4146:4152:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> a
    4156:4170:boolean dispatch(android.view.View,android.view.KeyEvent) -> a
    4201:4229:boolean preDispatch(android.view.KeyEvent) -> a
    4175:4176:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> b
    4252:4259:void registerListeningView(android.view.View) -> b
    4274:4298:void recalcViewsWithUnhandled() -> b
    4234:4244:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> c
    4263:4270:void unregisterListeningView(android.view.View) -> c
androidx.core.view.ViewConfigurationCompat -> a.i.q.f0:
    java.lang.String TAG -> a
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> b
    39:47:void <clinit>() -> <clinit>
    150:150:void <init>() -> <init>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> a
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> a
    57:57:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> b
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> b
    68:68:boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> c
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> c
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> d
androidx.core.view.ViewGroupCompat -> a.i.q.g0:
    int LAYOUT_MODE_OPTICAL_BOUNDS -> b
    int LAYOUT_MODE_CLIP_BOUNDS -> a
    52:52:void <init>() -> <init>
    75:75:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    98:99:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
    114:117:int getLayoutMode(android.view.ViewGroup) -> a
    130:133:void setLayoutMode(android.view.ViewGroup,int) -> a
    144:149:void setTransitionGroup(android.view.ViewGroup,boolean) -> b
    181:187:int getNestedScrollAxes(android.view.ViewGroup) -> b
    157:161:boolean isTransitionGroup(android.view.ViewGroup) -> c
androidx.core.view.ViewParentCompat -> a.i.q.h0:
    int[] sTempNestedScrollConsumed -> b
    java.lang.String TAG -> a
    41:41:void <init>() -> <init>
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    114:115:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    132:134:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    160:162:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> a
    178:179:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> a
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> a
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> a
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> a
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
    492:495:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    498:504:int[] getTempNestedScrollConsumed() -> a
    102:103:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> b
    85:85:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> c
androidx.core.view.ViewPropertyAnimatorCompat -> a.i.q.i0:
    java.lang.Runnable mEndAction -> c
    java.lang.Runnable mStartAction -> b
    int mOldLayerType -> d
    int LISTENER_TAG_ID -> e
    java.lang.ref.WeakReference mView -> a
    36:38:void <init>(android.view.View) -> <init>
    121:124:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> a
    136:139:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> a
    214:222:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> a
    252:255:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> a
    462:465:void cancel() -> a
    726:734:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> a
    738:758:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> a
    773:787:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> a
    151:154:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> b
    235:238:long getDuration() -> b
    284:287:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> b
    705:713:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> b
    265:270:android.view.animation.Interpolator getInterpolator() -> c
    316:319:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> c
    300:303:long getStartDelay() -> d
    331:334:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> d
    346:349:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> e
    642:645:void start() -> e
    361:364:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> f
    677:685:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> f
    376:379:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> g
    391:394:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> h
    406:409:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> i
    421:424:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> j
    436:439:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> k
    451:454:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> l
    166:169:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> m
    536:539:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> n
    181:184:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> o
    551:554:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> p
    587:592:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> q
    568:573:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> r
    476:479:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> s
    491:494:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> t
    506:509:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> u
    521:524:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> v
    606:611:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> w
    625:630:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> x
androidx.core.view.ViewPropertyAnimatorCompat$1 -> a.i.q.i0$a:
    androidx.core.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    androidx.core.view.ViewPropertyAnimatorCompat this$0 -> c
    739:739:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    742:743:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    747:748:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    752:753:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> a.i.q.i0$b:
    androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    androidx.core.view.ViewPropertyAnimatorCompat this$0 -> c
    777:777:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    780:781:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> a.i.q.i0$c:
    androidx.core.view.ViewPropertyAnimatorCompat mVpa -> a
    boolean mAnimEndCalled -> b
    44:46:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    73:95:void onAnimationEnd(android.view.View) -> a
    51:69:void onAnimationStart(android.view.View) -> b
    99:107:void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListener -> a.i.q.j0:
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> a.i.q.k0:
    27:27:void <init>() -> <init>
    41:41:void onAnimationEnd(android.view.View) -> a
    34:34:void onAnimationStart(android.view.View) -> b
    48:48:void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorUpdateListener -> a.i.q.l0:
    void onAnimationUpdate(android.view.View) -> a
androidx.core.view.WindowCompat -> a.i.q.m0:
    int FEATURE_ACTION_BAR_OVERLAY -> b
    int FEATURE_ACTION_MODE_OVERLAY -> c
    int FEATURE_ACTION_BAR -> a
    65:65:void <init>() -> <init>
    85:91:android.view.View requireViewById(android.view.Window,int) -> a
androidx.core.view.WindowInsetsCompat -> a.i.q.n0:
    java.lang.Object mInsets -> a
    35:37:void <init>(java.lang.Object) -> <init>
    44:50:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    213:217:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> a
    230:234:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> a
    368:371:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> a
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> a
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> a
    340:343:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> b
    195:198:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> c
    355:358:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> d
    308:311:int getStableInsetBottom() -> e
    377:381:boolean equals(java.lang.Object) -> equals
    269:272:int getStableInsetLeft() -> f
    288:291:int getStableInsetRight() -> g
    250:253:int getStableInsetTop() -> h
    389:389:int hashCode() -> hashCode
    113:116:int getSystemWindowInsetBottom() -> i
    62:65:int getSystemWindowInsetLeft() -> j
    96:99:int getSystemWindowInsetRight() -> k
    79:82:int getSystemWindowInsetTop() -> l
    143:146:boolean hasInsets() -> m
    327:330:boolean hasStableInsets() -> n
    130:133:boolean hasSystemWindowInsets() -> o
    164:167:boolean isConsumed() -> p
    182:185:boolean isRound() -> q
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> a.i.q.o0.a:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> c
    int mClickableSpanActionId -> d
    int mOriginalClickableSpanId -> b
    java.lang.String SPAN_ID -> e
    54:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    68:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> a.i.q.o0.b:
    int TYPE_TOUCH_INTERACTION_START -> n
    int TYPE_GESTURE_DETECTION_START -> l
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> j
    int TYPE_ANNOUNCEMENT -> h
    int TYPE_VIEW_SCROLLED -> f
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> d
    int TYPE_VIEW_HOVER_EXIT -> b
    int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED -> y
    int CONTENT_CHANGE_TYPE_PANE_TITLE -> w
    int CONTENT_CHANGE_TYPE_TEXT -> u
    int CONTENT_CHANGE_TYPE_UNDEFINED -> s
    int TYPE_VIEW_CONTEXT_CLICKED -> q
    int TYPE_TOUCH_INTERACTION_END -> o
    int TYPE_GESTURE_DETECTION_END -> m
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> k
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> i
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> g
    int TYPE_WINDOW_CONTENT_CHANGED -> e
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> c
    int TYPE_VIEW_HOVER_ENTER -> a
    int TYPES_ALL_MASK -> z
    int CONTENT_CHANGE_TYPE_PANE_APPEARED -> x
    int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION -> v
    int CONTENT_CHANGE_TYPE_SUBTREE -> t
    int TYPE_ASSIST_READING_CONTEXT -> r
    int TYPE_WINDOWS_CHANGED -> p
    215:217:void <init>() -> <init>
    243:244:void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat) -> a
    256:256:androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    276:276:androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> a
    358:361:void setAction(android.view.accessibility.AccessibilityEvent,int) -> b
    369:372:int getAction(android.view.accessibility.AccessibilityEvent) -> b
    288:291:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> c
    307:310:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> c
    322:325:void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> d
    333:336:int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> d
    228:228:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> e
androidx.core.view.accessibility.AccessibilityManagerCompat -> a.i.q.o0.c:
    274:274:void <init>() -> <init>
    46:49:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> a
    117:117:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    140:140:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    165:172:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> a
    66:69:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> b
    153:153:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
    184:191:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> b
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener -> a.i.q.o0.c$a:
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> a.i.q.o0.c$b:
    236:236:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> a.i.q.o0.c$c:
    androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener mListener -> a
    78:80:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> <init>
    89:93:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    102:103:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener -> a.i.q.o0.c$d:
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> a.i.q.o0.c$e:
    androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener mListener -> a
    201:203:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    212:216:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    225:226:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> a.i.q.o0.d:
    java.lang.String TOOLTIP_TEXT_KEY -> f
    java.lang.String SPANS_START_KEY -> j
    int ACTION_COLLAPSE -> K
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    int ACTION_PASTE -> G
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> Q
    int ACTION_PREVIOUS_HTML_ELEMENT -> C
    java.lang.String ACTION_ARGUMENT_COLUMN_INT -> U
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> y
    int ACTION_CLEAR_SELECTION -> u
    java.lang.String PANE_TITLE_KEY -> e
    int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY -> q
    int MOVEMENT_GRANULARITY_PARAGRAPH -> d0
    java.lang.String SPANS_ID_KEY -> i
    int ACTION_DISMISS -> L
    int MOVEMENT_GRANULARITY_WORD -> b0
    java.lang.String SPANS_ACTION_ID_KEY -> m
    int ACTION_CUT -> H
    int sClickableSpanId -> f0
    int ACTION_SCROLL_FORWARD -> D
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> P
    java.lang.String ACTION_ARGUMENT_ROW_INT -> T
    java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y -> X
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> z
    int FOCUS_INPUT -> Y
    int ACTION_CLICK -> v
    int ACTION_FOCUS -> r
    java.lang.String ROLE_DESCRIPTION_KEY -> d
    int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE -> n
    java.lang.String BOOLEAN_PROPERTY_KEY -> h
    int ACTION_SET_TEXT -> M
    java.lang.String SPANS_FLAGS_KEY -> l
    int ACTION_SET_SELECTION -> I
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> O
    int ACTION_SCROLL_BACKWARD -> E
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> S
    int mParentVirtualDescendantId -> b
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> A
    java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X -> W
    int FOCUS_ACCESSIBILITY -> Z
    int ACTION_LONG_CLICK -> w
    int ACTION_CLEAR_FOCUS -> s
    java.lang.String HINT_TEXT_KEY -> g
    int BOOLEAN_PROPERTY_IS_HEADING -> o
    int MOVEMENT_GRANULARITY_LINE -> c0
    int MOVEMENT_GRANULARITY_CHARACTER -> a0
    java.lang.String SPANS_END_KEY -> k
    int ACTION_EXPAND -> J
    int MOVEMENT_GRANULARITY_PAGE -> e0
    int ACTION_COPY -> F
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> N
    int ACTION_NEXT_HTML_ELEMENT -> B
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> R
    int mVirtualDescendantId -> c
    java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE -> V
    int ACTION_ACCESSIBILITY_FOCUS -> x
    int ACTION_SELECT -> t
    int BOOLEAN_PROPERTY_IS_SHOWING_HINT -> p
    1453:1453:void <clinit>() -> <clinit>
    1477:1479:void <init>(java.lang.Object) -> <init>
    1481:1483:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    3247:3250:int getTextSelectionStart() -> A
    3506:3511:java.lang.CharSequence getTooltipText() -> B
    3342:3345:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> C
    3277:3280:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> D
    2639:2642:java.lang.String getViewIdResourceName() -> E
    3403:3406:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> F
    1649:1649:int getWindowId() -> G
    2189:2192:boolean isAccessibilityFocused() -> H
    2062:2062:boolean isCheckable() -> I
    2086:2086:boolean isChecked() -> J
    2244:2244:boolean isClickable() -> K
    2859:2862:boolean isContentInvalid() -> L
    2872:2875:boolean isContextClickable() -> M
    3416:3419:boolean isDismissable() -> N
    3445:3448:boolean isEditable() -> O
    2292:2292:boolean isEnabled() -> P
    2110:2110:boolean isFocusable() -> Q
    2134:2134:boolean isFocused() -> R
    3651:3656:boolean isHeading() -> S
    2367:2370:boolean isImportantForAccessibility() -> T
    2268:2268:boolean isLongClickable() -> U
    3476:3479:boolean isMultiLine() -> V
    2316:2316:boolean isPassword() -> W
    3581:3584:boolean isScreenReaderFocusable() -> X
    2340:2340:boolean isScrollable() -> Y
    2220:2220:boolean isSelected() -> Z
    1492:1492:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> a
    1559:1559:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1690:1691:void addChild(android.view.View) -> a
    1708:1711:void addChild(android.view.View,int) -> a
    1778:1779:void addAction(int) -> a
    1824:1827:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
    1886:1889:boolean performAction(int,android.os.Bundle) -> a
    1938:1945:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> a
    2014:2015:void getBoundsInParent(android.graphics.Rect) -> a
    2209:2212:void setAccessibilityFocused(boolean) -> a
    2436:2437:void setClassName(java.lang.CharSequence) -> a
    2483:2498:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> a
    2528:2536:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> a
    2553:2557:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> a
    2743:2749:void setCollectionInfo(java.lang.Object) -> a
    2801:2804:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> a
    3076:3079:boolean canOpenPopup() -> a
    3236:3239:void setTextSelection(int,int) -> a
    3840:3847:void setBooleanProperty(int,boolean) -> a
    3615:3618:boolean isShowingHintText() -> a0
    1614:1617:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
    1728:1731:boolean removeChild(android.view.View) -> b
    1746:1749:boolean removeChild(android.view.View,int) -> b
    1849:1852:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> b
    2038:2039:void getBoundsInScreen(android.graphics.Rect) -> b
    2595:2596:void setContentDescription(java.lang.CharSequence) -> b
    2752:2757:void setCollectionItemInfo(java.lang.Object) -> b
    2818:2831:java.util.List getActionList() -> b
    3094:3097:void setCanOpenPopup(boolean) -> b
    3122:3130:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> b
    3685:3685:boolean isTextEntryKey() -> b0
    1462:1465:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> c
    1636:1639:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> c
    1763:1763:int getActions() -> c
    2029:2030:void setBoundsInParent(android.graphics.Rect) -> c
    2077:2078:void setCheckable(boolean) -> c
    2621:2624:void setViewIdResourceName(java.lang.String) -> c
    2945:2948:void setError(java.lang.CharSequence) -> c
    2970:2973:void setLabelFor(android.view.View) -> c
    2990:2993:void setLabelFor(android.view.View,int) -> c
    2158:2161:boolean isVisibleToUser() -> c0
    1658:1658:int getChildCount() -> d
    1675:1675:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> d
    1782:1791:java.util.List extrasCharSequenceList(java.lang.String) -> d
    2053:2054:void setBoundsInScreen(android.graphics.Rect) -> d
    2101:2102:void setChecked(boolean) -> d
    2924:2929:void setHintText(java.lang.CharSequence) -> d
    3021:3024:void setLabeledBy(android.view.View) -> d
    3046:3049:void setLabeledBy(android.view.View,int) -> d
    2606:2607:void recycle() -> d0
    1795:1804:java.util.List extrasIntList(java.lang.String) -> e
    1869:1869:boolean performAction(int) -> e
    1974:1977:void setParent(android.view.View) -> e
    2001:2006:void setParent(android.view.View,int) -> e
    2259:2260:void setClickable(boolean) -> e
    2412:2413:void setPackageName(java.lang.CharSequence) -> e
    2421:2421:java.lang.CharSequence getClassName() -> e
    3713:3716:boolean refresh() -> e0
    3769:3792:boolean equals(java.lang.Object) -> equals
    1568:1571:void setSource(android.view.View) -> f
    1595:1600:void setSource(android.view.View,int) -> f
    2721:2724:void setDrawingOrder(int) -> f
    2733:2739:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> f
    2847:2850:void setContentInvalid(boolean) -> f
    3548:3553:void setPaneTitle(java.lang.CharSequence) -> f
    1499:1499:android.view.accessibility.AccessibilityNodeInfo unwrap() -> f0
    2766:2772:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> g
    2891:2894:void setContextClickable(boolean) -> g
    3182:3185:void setInputType(int) -> g
    3364:3367:void setTraversalAfter(android.view.View) -> g
    3390:3393:void setTraversalAfter(android.view.View,int) -> g
    3757:3760:void setRoleDescription(java.lang.CharSequence) -> g
    2544:2550:void clearExtrasSpans() -> g0
    2475:2476:void setText(java.lang.CharSequence) -> h
    2580:2580:java.lang.CharSequence getContentDescription() -> h
    2685:2688:void setLiveRegion(int) -> h
    3299:3302:void setTraversalBefore(android.view.View) -> h
    3326:3329:void setTraversalBefore(android.view.View,int) -> h
    3434:3437:void setDismissable(boolean) -> h
    2540:2540:boolean hasSpans() -> h0
    3764:3764:int hashCode() -> hashCode
    1534:1538:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> i
    2501:2506:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> i
    2702:2705:int getDrawingOrder() -> i
    3203:3206:void setMaxTextLength(int) -> i
    3465:3468:void setEditable(boolean) -> i
    3528:3533:void setTooltipText(java.lang.CharSequence) -> i
    1548:1548:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> i0
    1906:1909:void setMovementGranularities(int) -> j
    2307:2308:void setEnabled(boolean) -> j
    2510:2510:android.util.SparseArray getSpansFromViewTags(android.view.View) -> j
    2519:2523:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> j
    2956:2959:java.lang.CharSequence getError() -> j
    1520:1520:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> k
    2125:2126:void setFocusable(boolean) -> k
    3148:3151:android.os.Bundle getExtras() -> k
    3856:3858:java.lang.String getActionSymbolicName(int) -> k
    2149:2150:void setFocused(boolean) -> l
    2560:2572:void removeCollectedSpans(android.view.View) -> l
    2902:2907:java.lang.CharSequence getHintText() -> l
    3850:3852:boolean getBooleanProperty(int) -> l
    1509:1509:java.lang.Object getInfo() -> m
    3671:3676:void setHeading(boolean) -> m
    2386:2389:void setImportantForAccessibility(boolean) -> n
    3161:3164:int getInputType() -> n
    2283:2284:void setLongClickable(boolean) -> o
    3007:3010:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> o
    3063:3066:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> p
    3494:3497:void setMultiLine(boolean) -> p
    2331:2332:void setPassword(boolean) -> q
    2665:2668:int getLiveRegion() -> q
    3215:3218:int getMaxTextLength() -> r
    3600:3605:void setScreenReaderFocusable(boolean) -> r
    1917:1920:int getMovementGranularities() -> s
    2355:2356:void setScrollable(boolean) -> s
    2235:2236:void setSelected(boolean) -> t
    2397:2397:java.lang.CharSequence getPackageName() -> t
    3797:3836:java.lang.String toString() -> toString
    3562:3567:java.lang.CharSequence getPaneTitle() -> u
    3635:3640:void setShowingHintText(boolean) -> u
    1959:1959:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> v
    3700:3701:void setTextEntryKey(boolean) -> v
    2178:2181:void setVisibleToUser(boolean) -> w
    2781:2787:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> w
    3725:3728:java.lang.CharSequence getRoleDescription() -> x
    2445:2459:java.lang.CharSequence getText() -> y
    3260:3263:int getTextSelectionEnd() -> z
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> a.i.q.o0.d$a:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS -> J
    java.lang.String TAG -> f
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> k
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT -> H
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> i
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT -> F
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> g
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION -> D
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> s
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> q
    int mId -> b
    androidx.core.view.accessibility.AccessibilityViewCommand mCommand -> e
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> o
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP -> L
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> m
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> y
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> w
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> u
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN -> C
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> A
    java.lang.Class mViewCommandArgumentClass -> d
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> j
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW -> K
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> h
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK -> I
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN -> G
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP -> E
    java.lang.CharSequence mLabel -> c
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> r
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> p
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> n
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> l
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP -> M
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> z
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> x
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> v
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> t
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> B
    java.lang.Object mAction -> a
    99:502:void <clinit>() -> <clinit>
    525:526:void <init>(int,java.lang.CharSequence) -> <init>
    539:540:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    543:544:void <init>(java.lang.Object) -> <init>
    548:549:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    553:563:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    571:574:int getId() -> a
    601:617:boolean perform(android.view.View,android.os.Bundle) -> a
    626:626:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> a
    585:588:java.lang.CharSequence getLabel() -> b
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> a.i.q.o0.d$b:
    int SELECTION_MODE_MULTIPLE -> d
    java.lang.Object mInfo -> a
    int SELECTION_MODE_NONE -> b
    int SELECTION_MODE_SINGLE -> c
    701:703:void <init>(java.lang.Object) -> <init>
    671:678:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> a
    693:697:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> a
    711:714:int getColumnCount() -> a
    724:727:int getRowCount() -> b
    755:758:int getSelectionMode() -> c
    737:740:boolean isHierarchical() -> d
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> a.i.q.o0.d$c:
    java.lang.Object mInfo -> a
    825:827:void <init>(java.lang.Object) -> <init>
    792:799:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
    817:821:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> a
    835:838:int getColumnIndex() -> a
    848:851:int getColumnSpan() -> b
    861:864:int getRowIndex() -> c
    874:877:int getRowSpan() -> d
    890:893:boolean isHeading() -> e
    903:906:boolean isSelected() -> f
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> a.i.q.o0.d$d:
    int RANGE_TYPE_PERCENT -> d
    java.lang.Object mInfo -> a
    int RANGE_TYPE_INT -> b
    int RANGE_TYPE_FLOAT -> c
    942:944:void <init>(java.lang.Object) -> <init>
    932:936:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> a
    952:955:float getCurrent() -> a
    965:968:float getMax() -> b
    978:981:float getMin() -> c
    995:998:int getType() -> d
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> a.i.q.o0.e:
    java.lang.Object mProvider -> a
    int HOST_VIEW_ID -> b
    104:112:void <init>() -> <init>
    120:122:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> a
    155:155:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    172:172:boolean performAction(int,int,android.os.Bundle) -> a
    192:192:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    208:208:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> a.i.q.o0.e$a:
    androidx.core.view.accessibility.AccessibilityNodeProviderCompat mCompat -> a
    38:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:67:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> a.i.q.o0.e$b:
    80:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> a.i.q.o0.f:
    android.view.accessibility.AccessibilityRecord mRecord -> a
    43:45:void <init>(java.lang.Object) -> <init>
    69:69:androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat) -> a
    96:97:void setSource(android.view.View) -> a
    117:118:void setSource(android.view.View,int) -> a
    137:140:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> a
    196:197:void setChecked(boolean) -> a
    480:483:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> a
    506:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> a
    570:570:int getAddedCount() -> a
    584:585:void setAddedCount(int) -> a
    675:676:void setBeforeText(java.lang.CharSequence) -> a
    727:728:void setParcelableData(android.os.Parcelable) -> a
    222:223:void setEnabled(boolean) -> b
    352:353:void setCurrentItemIndex(int) -> b
    530:533:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> b
    556:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> b
    636:637:void setClassName(java.lang.CharSequence) -> b
    661:661:java.lang.CharSequence getBeforeText() -> b
    274:275:void setFullScreen(boolean) -> c
    384:385:void setFromIndex(int) -> c
    622:622:java.lang.CharSequence getClassName() -> c
    701:702:void setContentDescription(java.lang.CharSequence) -> c
    248:249:void setPassword(boolean) -> d
    326:327:void setItemCount(int) -> d
    687:687:java.lang.CharSequence getContentDescription() -> d
    300:301:void setScrollable(boolean) -> e
    338:338:int getCurrentItemIndex() -> e
    496:497:void setMaxScrollX(int) -> e
    761:778:boolean equals(java.lang.Object) -> equals
    367:367:int getFromIndex() -> f
    546:547:void setMaxScrollY(int) -> f
    55:55:java.lang.Object getImpl() -> g
    610:611:void setRemovedCount(int) -> g
    312:312:int getItemCount() -> h
    434:435:void setScrollX(int) -> h
    752:752:int hashCode() -> hashCode
    458:459:void setScrollY(int) -> i
    470:470:int getMaxScrollX() -> i
    410:411:void setToIndex(int) -> j
    520:520:int getMaxScrollY() -> j
    713:713:android.os.Parcelable getParcelableData() -> k
    596:596:int getRemovedCount() -> l
    422:422:int getScrollX() -> m
    446:446:int getScrollY() -> n
    158:158:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource() -> o
    649:649:java.util.List getText() -> p
    397:397:int getToIndex() -> q
    170:170:int getWindowId() -> r
    182:182:boolean isChecked() -> s
    208:208:boolean isEnabled() -> t
    260:260:boolean isFullScreen() -> u
    234:234:boolean isPassword() -> v
    286:286:boolean isScrollable() -> w
    743:744:void recycle() -> x
    82:82:androidx.core.view.accessibility.AccessibilityRecordCompat obtain() -> y
androidx.core.view.accessibility.AccessibilityViewCommand -> a.i.q.o0.g:
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> a.i.q.o0.g$a:
    android.os.Bundle mBundle -> a
    android.os.Bundle sEmptyBundle -> b
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    56:57:void setBundle(android.os.Bundle) -> a
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> a.i.q.o0.g$b:
    66:66:void <init>() -> <init>
    90:90:boolean getExtendSelection() -> a
    82:82:int getGranularity() -> b
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> a.i.q.o0.g$c:
    100:100:void <init>() -> <init>
    106:106:java.lang.String getHTMLElement() -> a
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> a.i.q.o0.g$d:
    185:185:void <init>() -> <init>
    191:191:int getX() -> a
    198:198:int getY() -> b
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> a.i.q.o0.g$e:
    150:150:void <init>() -> <init>
    163:163:int getColumn() -> a
    156:156:int getRow() -> b
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> a.i.q.o0.g$f:
    171:171:void <init>() -> <init>
    177:177:float getProgress() -> a
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> a.i.q.o0.g$g:
    115:115:void <init>() -> <init>
    128:128:int getEnd() -> a
    121:121:int getStart() -> b
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> a.i.q.o0.g$h:
    135:135:void <init>() -> <init>
    141:141:java.lang.CharSequence getText() -> a
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> a.i.q.o0.h:
    int TYPE_ACCESSIBILITY_OVERLAY -> f
    int TYPE_SPLIT_SCREEN_DIVIDER -> g
    int TYPE_INPUT_METHOD -> d
    int TYPE_SYSTEM -> e
    java.lang.Object mInfo -> a
    int UNDEFINED -> b
    int TYPE_APPLICATION -> c
    82:84:void <init>(java.lang.Object) -> <init>
    76:79:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    164:167:void getBoundsInScreen(android.graphics.Rect) -> a
    230:233:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> a
    257:261:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> a
    288:294:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> a
    216:219:int getChildCount() -> b
    358:360:java.lang.String typeToString(int) -> b
    151:154:int getId() -> c
    111:114:int getLayer() -> d
    138:141:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> e
    319:336:boolean equals(java.lang.Object) -> equals
    124:128:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> f
    244:247:java.lang.CharSequence getTitle() -> g
    97:100:int getType() -> h
    314:314:int hashCode() -> hashCode
    203:206:boolean isAccessibilityFocused() -> i
    177:180:boolean isActive() -> j
    190:193:boolean isFocused() -> k
    307:310:void recycle() -> l
    272:275:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> m
    341:354:java.lang.String toString() -> toString
androidx.core.view.animation.PathInterpolatorApi14 -> a.i.q.p0.a:
    float PRECISION -> c
    float[] mX -> a
    float[] mY -> b
    36:53:void <init>(android.graphics.Path) -> <init>
    56:57:void <init>(float,float) -> <init>
    61:62:void <init>(float,float,float,float) -> <init>
    99:102:android.graphics.Path createQuad(float,float) -> a
    107:110:android.graphics.Path createCubic(float,float,float,float) -> a
    66:95:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> a.i.q.p0.b:
    31:33:void <init>() -> <init>
    48:51:android.view.animation.Interpolator create(android.graphics.Path) -> a
    63:66:android.view.animation.Interpolator create(float,float) -> a
    81:84:android.view.animation.Interpolator create(float,float,float,float) -> a
androidx.core.view.inputmethod.EditorInfoCompat -> a.i.q.q0.a:
    int IME_FLAG_FORCE_ASCII -> b
    java.lang.String[] EMPTY_STRING_ARRAY -> c
    java.lang.String CONTENT_MIME_TYPES_INTEROP_KEY -> e
    int IME_FLAG_NO_PERSONALIZED_LEARNING -> a
    java.lang.String CONTENT_MIME_TYPES_KEY -> d
    76:76:void <clinit>() -> <clinit>
    182:183:void <init>() -> <init>
    112:121:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> a
    135:146:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> a
    159:176:int getProtocol(android.view.inputmethod.EditorInfo) -> b
androidx.core.view.inputmethod.InputConnectionCompat -> a.i.q.q0.b:
    java.lang.String COMMIT_CONTENT_LINK_URI_KEY -> g
    java.lang.String COMMIT_CONTENT_DESCRIPTION_INTEROP_KEY -> f
    int INPUT_CONTENT_GRANT_READ_URI_PERMISSION -> o
    java.lang.String COMMIT_CONTENT_OPTS_KEY -> i
    java.lang.String COMMIT_CONTENT_LINK_URI_INTEROP_KEY -> h
    java.lang.String COMMIT_CONTENT_FLAGS_KEY -> k
    java.lang.String COMMIT_CONTENT_OPTS_INTEROP_KEY -> j
    java.lang.String COMMIT_CONTENT_RESULT_RECEIVER_KEY -> m
    java.lang.String COMMIT_CONTENT_FLAGS_INTEROP_KEY -> l
    java.lang.String COMMIT_CONTENT_RESULT_INTEROP_RECEIVER_KEY -> n
    java.lang.String COMMIT_CONTENT_ACTION -> a
    java.lang.String COMMIT_CONTENT_CONTENT_URI_KEY -> c
    java.lang.String COMMIT_CONTENT_INTEROP_ACTION -> b
    java.lang.String COMMIT_CONTENT_DESCRIPTION_KEY -> e
    java.lang.String COMMIT_CONTENT_CONTENT_URI_INTEROP_KEY -> d
    303:304:void <init>() -> <init>
    72:82:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> a
    132:185:boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> a
    260:261:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> a
androidx.core.view.inputmethod.InputConnectionCompat$1 -> a.i.q.q0.b$a:
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
    271:271:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> a.i.q.q0.b$b:
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
    288:288:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener -> a.i.q.q0.b$c:
    boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> a
androidx.core.view.inputmethod.InputContentInfoCompat -> a.i.q.q0.c:
    androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl -> a
    169:175:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:179:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> a
    219:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> a
    196:196:android.content.ClipDescription getDescription() -> b
    204:204:android.net.Uri getLinkUri() -> c
    256:257:void releasePermission() -> d
    247:248:void requestPermission() -> e
    238:238:java.lang.Object unwrap() -> f
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> a.i.q.q0.c$a:
    android.view.inputmethod.InputContentInfo mObject -> a
    109:111:void <init>(java.lang.Object) -> <init>
    114:116:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    144:145:void requestPermission() -> a
    149:150:void releasePermission() -> b
    133:133:android.net.Uri getLinkUri() -> c
    127:127:android.content.ClipDescription getDescription() -> d
    139:139:java.lang.Object getInputContentInfo() -> e
    121:121:android.net.Uri getContentUri() -> f
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> a.i.q.q0.c$b:
    android.content.ClipDescription mDescription -> b
    android.net.Uri mLinkUri -> c
    android.net.Uri mContentUri -> a
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    94:94:void requestPermission() -> a
    99:99:void releasePermission() -> b
    83:83:android.net.Uri getLinkUri() -> c
    77:77:android.content.ClipDescription getDescription() -> d
    89:89:java.lang.Object getInputContentInfo() -> e
    71:71:android.net.Uri getContentUri() -> f
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl -> a.i.q.q0.c$c:
    void requestPermission() -> a
    void releasePermission() -> b
    android.net.Uri getLinkUri() -> c
    android.content.ClipDescription getDescription() -> d
    java.lang.Object getInputContentInfo() -> e
    android.net.Uri getContentUri() -> f
androidx.core.widget.AutoScrollHelper -> a.i.r.a:
    boolean mAlreadyDelayed -> m
    boolean mNeedsCancel -> o
    float[] mMaximumVelocity -> l
    float[] mRelativeVelocity -> j
    float DEFAULT_RELATIVE_VELOCITY -> F
    int mEdgeType -> h
    int DEFAULT_RAMP_DOWN_DURATION -> I
    float DEFAULT_MAXIMUM_EDGE -> D
    int DEFAULT_ACTIVATION_DELAY -> G
    float[] mRelativeEdges -> f
    boolean mEnabled -> q
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> C
    int DEFAULT_EDGE_TYPE -> A
    java.lang.Runnable mRunnable -> e
    float NO_MIN -> u
    int HORIZONTAL -> y
    float RELATIVE_UNSPECIFIED -> s
    int EDGE_TYPE_INSIDE_EXTEND -> w
    boolean mNeedsReset -> n
    float[] mMinimumVelocity -> k
    boolean mAnimating -> p
    int DEFAULT_RAMP_UP_DURATION -> H
    android.view.animation.Interpolator mEdgeInterpolator -> c
    float[] mMaximumEdges -> g
    float DEFAULT_RELATIVE_EDGE -> E
    int mActivationDelay -> i
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> B
    boolean mExclusive -> r
    int VERTICAL -> z
    int EDGE_TYPE_OUTSIDE -> x
    float NO_MAX -> t
    int EDGE_TYPE_INSIDE -> v
    android.view.View mTarget -> d
    androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller -> b
    195:195:void <clinit>() -> <clinit>
    210:226:void <init>(android.view.View) -> <init>
    boolean canTargetScrollHorizontally(int) -> a
    void scrollTargetBy(int,int) -> a
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> a
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> a
    549:568:float computeTargetVelocity(int,float,float,float) -> a
    617:627:float getEdgeValue(float,float,float,float) -> a
    663:668:int constrain(int,int,int) -> a
    673:678:float constrain(float,float,float) -> a
    687:692:void cancelTargetTouch() -> a
    boolean canTargetScrollVertically(int) -> b
    248:248:boolean isEnabled() -> b
    264:265:androidx.core.widget.AutoScrollHelper setExclusive(boolean) -> b
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> b
    277:277:boolean isExclusive() -> c
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> c
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> c
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> d
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> d
    502:506:boolean shouldAnimate() -> d
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> e
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> e
    538:545:void requestStop() -> e
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> f
    514:530:void startAnimating() -> f
    634:659:float constrainEdgeValue(float,float) -> f
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.widget.AutoScrollHelper$ClampedScroller -> a.i.r.a$a:
    long mStopTime -> i
    float mStopValue -> j
    long mDeltaTime -> f
    long mStartTime -> e
    int mEffectiveRampDown -> k
    int mDeltaY -> h
    float mTargetVelocityY -> d
    float mTargetVelocityX -> c
    int mDeltaX -> g
    int mRampDownDuration -> b
    int mRampUpDuration -> a
    756:762:void <init>() -> <init>
    769:770:void setRampDownDuration(int) -> a
    800:804:float getValueAt(long) -> a
    820:820:float interpolateValue(float) -> a
    831:832:void computeScrollDelta() -> a
    852:854:void setTargetVelocity(float,float) -> a
    765:766:void setRampUpDuration(int) -> b
    869:869:int getDeltaX() -> b
    877:877:int getDeltaY() -> c
    857:857:int getHorizontalDirection() -> d
    861:861:int getVerticalDirection() -> e
    795:795:boolean isFinished() -> f
    788:792:void requestStop() -> g
    776:782:void start() -> h
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> a.i.r.a$b:
    androidx.core.widget.AutoScrollHelper this$0 -> b
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:712:void run() -> run
androidx.core.widget.AutoSizeableTextView -> a.i.r.b:
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> a
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> a.i.r.c:
    java.lang.String TAG -> a
    java.lang.reflect.Field sButtonDrawableField -> b
    boolean sButtonDrawableFieldFetched -> c
    41:41:void <init>() -> <init>
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> a
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> a
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> a
    71:77:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> b
    107:113:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> c
androidx.core.widget.ContentLoadingProgressBar -> a.i.r.d:
    int MIN_SHOW_TIME -> h
    java.lang.Runnable mDelayedShow -> g
    int MIN_DELAY -> i
    java.lang.Runnable mDelayedHide -> f
    long mStartTime -> b
    boolean mDismissed -> e
    boolean mPostedHide -> c
    boolean mPostedShow -> d
    68:69:void <init>(android.content.Context) -> <init>
    72:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:97:void hide() -> a
    124:123:void show() -> b
    88:90:void removeCallbacks() -> c
    77:79:void onAttachedToWindow() -> onAttachedToWindow
    83:85:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.core.widget.ContentLoadingProgressBar$1 -> a.i.r.d$a:
    androidx.core.widget.ContentLoadingProgressBar this$0 -> b
    45:45:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    49:52:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> a.i.r.d$b:
    androidx.core.widget.ContentLoadingProgressBar this$0 -> b
    55:55:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    59:64:void run() -> run
androidx.core.widget.EdgeEffectCompat -> a.i.r.e:
    android.widget.EdgeEffect mEdgeEffect -> a
    47:49:void <init>(android.content.Context) -> <init>
    61:62:void setSize(int,int) -> a
    86:87:void finish() -> a
    104:105:boolean onPull(float) -> a
    129:130:boolean onPull(float,float) -> a
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> a
    190:191:boolean onAbsorb(int) -> a
    208:208:boolean draw(android.graphics.Canvas) -> a
    75:75:boolean isFinished() -> b
    171:172:boolean onRelease() -> c
androidx.core.widget.ImageViewCompat -> a.i.r.f:
    107:107:void <init>() -> <init>
    37:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> a
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> a
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> a
    74:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> b
androidx.core.widget.ListPopupWindowCompat -> a.i.r.g:
    31:33:void <init>() -> <init>
    65:65:android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> a
    97:100:android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View) -> a
androidx.core.widget.ListViewAutoScrollHelper -> a.i.r.h:
    android.widget.ListView mTarget -> J
    33:36:void <init>(android.widget.ListView) -> <init>
    40:41:void scrollTargetBy(int,int) -> a
    46:46:boolean canTargetScrollHorizontally(int) -> a
    51:80:boolean canTargetScrollVertically(int) -> b
androidx.core.widget.ListViewCompat -> a.i.r.i:
    90:90:void <init>() -> <init>
    67:85:boolean canScrollList(android.widget.ListView,int) -> a
    37:55:void scrollListBy(android.widget.ListView,int) -> b
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    boolean mFillViewport -> m
    boolean mIsLaidOut -> i
    int[] mScrollOffset -> s
    boolean mIsBeingDragged -> k
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> x
    int INVALID_POINTER -> E
    android.graphics.Rect mTempRect -> c
    android.widget.OverScroller mScroller -> d
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> F
    int[] SCROLLVIEW_STYLEABLE -> G
    android.widget.EdgeEffect mEdgeGlowTop -> e
    boolean mIsLayoutDirty -> h
    int mNestedYOffset -> u
    java.lang.String TAG -> D
    int mMaximumVelocity -> q
    boolean mSmoothScrollingEnabled -> n
    int mTouchSlop -> o
    android.view.VelocityTracker mVelocityTracker -> l
    int[] mScrollConsumed -> t
    long mLastScroll -> b
    float MAX_SCROLL_FACTOR -> C
    int mLastMotionY -> g
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> w
    int ANIMATED_SCROLL_GAP -> B
    android.widget.EdgeEffect mEdgeGlowBottom -> f
    float mVerticalScrollFactor -> z
    android.view.View mChildToScrollTo -> j
    int mLastScrollerY -> v
    androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> A
    int mActivePointerId -> r
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> y
    int mMinimumVelocity -> p
    175:177:void <clinit>() -> <clinit>
    189:190:void <init>(android.content.Context) -> <init>
    193:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    314:324:void onNestedScrollInternal(int,int,int[]) -> a
    537:537:boolean isFillViewport() -> a
    629:667:boolean executeKeyEvent(android.view.KeyEvent) -> a
    988:1001:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    1058:1108:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    1140:1201:android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    1319:1365:boolean arrowScroll(int) -> a
    1373:1373:boolean isOffScreen(android.view.View) -> a
    1381:1384:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    1410:1432:void smoothScrollBy(int,int) -> a
    1596:1603:void runAnimatedScroll(boolean) -> a
    1637:1646:boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    1658:1719:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    1854:1859:boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    1981:1997:int clamp(int,int,int) -> a
    468:469:void addView(android.view.View) -> addView
    477:478:void addView(android.view.View,int) -> addView
    486:487:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    495:496:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    559:559:boolean isSmoothScrollingEnabled() -> b
    1287:1308:boolean scrollAndFocus(int,int,int) -> b
    1441:1442:void smoothScrollTo(int,int) -> b
    1616:1626:void scrollToChild(android.view.View) -> b
    1870:1879:void fling(int) -> b
    671:679:boolean inChild(int,int) -> c
    1255:1271:boolean fullScroll(int) -> c
    1606:1608:void abortAnimatedScroll() -> c
    1504:1504:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1497:1497:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1490:1490:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1540:1593:void computeScroll() -> computeScroll
    1483:1483:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1476:1476:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1452:1469:int computeVerticalScrollRange() -> computeVerticalScrollRange
    519:526:boolean canScroll() -> d
    1217:1239:boolean pageScroll(int) -> d
    617:617:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    297:297:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    302:302:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    253:253:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    292:292:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    222:224:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    246:246:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    286:286:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1931:1978:void draw(android.graphics.Canvas) -> draw
    1394:1401:void doScrollY(int) -> e
    1882:1891:void endDrag() -> e
    1917:1927:void ensureGlows() -> f
    683:688:void initOrResetVelocityTracker() -> g
    431:444:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    452:452:int getMaxScrollAmount() -> getMaxScrollAmount
    404:404:int getNestedScrollAxes() -> getNestedScrollAxes
    1112:1120:int getScrollRange() -> getScrollRange
    416:426:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1033:1044:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    456:464:void initScrollView() -> h
    240:240:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    280:280:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    691:694:void initVelocityTrackerIfNotExists() -> i
    265:265:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    697:701:void recycleVelocityTracker() -> j
    1510:1521:void measureChild(android.view.View,int,int) -> measureChild
    1526:1535:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1825:1828:void onAttachedToWindow() -> onAttachedToWindow
    1005:1029:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    724:819:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1787:1821:void onLayout(boolean,int,int,int,int) -> onLayout
    581:612:void onMeasure(int,int) -> onMeasure
    389:394:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    399:399:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    356:357:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    384:385:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    310:311:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    350:351:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    379:380:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    337:339:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    368:369:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1050:1051:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1747:1766:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2012:2021:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2025:2028:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    572:577:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1832:1836:void onSizeChanged(int,int,int,int) -> onSizeChanged
    331:331:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    363:363:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    343:345:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    373:374:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    824:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1724:1731:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1773:1776:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    705:709:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1781:1783:void requestLayout() -> requestLayout
    1901:1914:void scrollTo(int,int) -> scrollTo
    549:553:void setFillViewport(boolean) -> setFillViewport
    260:261:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    512:513:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    567:568:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    411:411:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    230:230:boolean startNestedScroll(int,int) -> startNestedScroll
    270:270:boolean startNestedScroll(int) -> startNestedScroll
    235:236:void stopNestedScroll(int) -> stopNestedScroll
    275:276:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$a:
    2070:2070:void <init>() -> <init>
    2127:2136:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2108:2123:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2073:2091:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$b:
    void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> a
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$c:
    int scrollPosition -> b
    2056:2056:void <clinit>() -> <clinit>
    2035:2036:void <init>(android.os.Parcelable) -> <init>
    2039:2041:void <init>(android.os.Parcel) -> <init>
    2051:2051:java.lang.String toString() -> toString
    2045:2047:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$c$a:
    2057:2057:void <init>() -> <init>
    2057:2057:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2060:2060:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2057:2057:java.lang.Object[] newArray(int) -> newArray
    2065:2065:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupMenuCompat -> a.i.r.j:
    30:32:void <init>() -> <init>
    55:58:android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> a
androidx.core.widget.PopupWindowCompat -> a.i.r.k:
    java.lang.reflect.Field sOverlapAnchorField -> f
    boolean sGetWindowLayoutTypeMethodAttempted -> e
    java.lang.reflect.Method sGetWindowLayoutTypeMethod -> d
    java.lang.String TAG -> a
    boolean sOverlapAnchorFieldAttempted -> g
    boolean sSetWindowLayoutTypeMethodAttempted -> c
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> b
    46:48:void <init>() -> <init>
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    119:140:boolean getOverlapAnchor(android.widget.PopupWindow) -> a
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> a
    183:204:int getWindowLayoutType(android.widget.PopupWindow) -> b
androidx.core.widget.ScrollerCompat -> a.i.r.l:
    android.widget.OverScroller mScroller -> a
    56:59:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    41:41:androidx.core.widget.ScrollerCompat create(android.content.Context) -> a
    49:49:androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    163:164:void startScroll(int,int,int,int) -> a
    183:184:void startScroll(int,int,int,int,int) -> a
    210:211:void fling(int,int,int,int,int,int,int,int) -> a
    242:244:void fling(int,int,int,int,int,int,int,int,int,int) -> a
    262:262:boolean springBack(int,int,int,int,int,int) -> a
    273:274:void abortAnimation() -> a
    294:295:void notifyHorizontalEdgeReached(int,int,int) -> a
    142:142:boolean computeScrollOffset() -> b
    314:315:void notifyVerticalEdgeReached(int,int,int) -> b
    130:130:float getCurrVelocity() -> c
    82:82:int getCurrX() -> d
    94:94:int getCurrY() -> e
    104:104:int getFinalX() -> f
    114:114:int getFinalY() -> g
    70:70:boolean isFinished() -> h
    334:334:boolean isOverScrolled() -> i
androidx.core.widget.TextViewCompat -> a.i.r.m:
    java.lang.reflect.Field sMinModeField -> j
    int LINES -> l
    java.lang.reflect.Field sMinimumField -> h
    boolean sMinimumFieldFetched -> i
    java.lang.reflect.Field sMaxModeField -> f
    boolean sMinModeFieldFetched -> k
    java.lang.reflect.Field sMaximumField -> d
    boolean sMaximumFieldFetched -> e
    java.lang.String LOG_TAG -> a
    boolean sMaxModeFieldFetched -> g
    int AUTO_SIZE_TEXT_TYPE_NONE -> b
    int AUTO_SIZE_TEXT_TYPE_UNIFORM -> c
    111:111:void <init>() -> <init>
    114:121:java.lang.reflect.Field retrieveField(java.lang.String) -> a
    126:130:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> a
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    326:331:void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> a
    361:368:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> a
    387:393:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> a
    456:462:int getAutoSizeMaxTextSize(android.widget.TextView) -> a
    506:508:void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> a
    842:869:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> a
    884:886:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> a
    957:974:int getTextDirection(android.text.TextDirectionHeuristic) -> a
    987:993:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> a
    1021:1028:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> a
    178:187:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> b
    210:219:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> b
    439:445:int getAutoSizeMinTextSize(android.widget.TextView) -> b
    519:523:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> b
    693:718:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> b
    422:428:int getAutoSizeStepGranularity(android.widget.TextView) -> c
    738:759:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> c
    473:479:int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> d
    796:804:void setLineHeight(android.widget.TextView,int) -> d
    283:288:void setTextAppearance(android.widget.TextView,int) -> e
    406:412:int getAutoSizeTextType(android.widget.TextView) -> e
    1003:1009:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> f
    1038:1044:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> g
    295:310:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> h
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> i
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> j
    226:244:int getMaxLines(android.widget.TextView) -> k
    252:270:int getMinLines(android.widget.TextView) -> l
    901:935:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> m
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> n
androidx.core.widget.TextViewCompat$AutoSizeTextType -> a.i.r.m$a:
androidx.core.widget.TextViewCompat$OreoCallback -> a.i.r.m$b:
    android.widget.TextView mTextView -> b
    boolean mCanUseMenuBuilderReferences -> e
    int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START -> g
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mInitializedMenuBuilderReferences -> f
    android.view.ActionMode$Callback mCallback -> a
    java.lang.Class mMenuBuilderClass -> c
    549:553:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    577:612:void recomputeProcessTextMenuItems(android.view.Menu) -> a
    630:642:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> a
    646:652:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> a
    659:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> a
    665:665:boolean isEditable(android.widget.TextView) -> a
    671:671:android.content.Intent createProcessTextIntent() -> a
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:574:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.core.widget.TintableCompoundButton -> a.i.r.n:
androidx.core.widget.TintableCompoundDrawablesView -> a.i.r.o:
androidx.core.widget.TintableImageSourceView -> a.i.r.p:
androidx.cursoradapter.R -> a.j.a:
    668:668:void <init>() -> <init>
androidx.cursoradapter.widget.CursorAdapter -> a.j.b.a:
    androidx.cursoradapter.widget.CursorFilter mCursorFilter -> i
    int FLAG_REGISTER_CONTENT_OBSERVER -> l
    androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver -> g
    android.database.Cursor mCursor -> d
    int FLAG_AUTO_REQUERY -> k
    android.database.DataSetObserver mDataSetObserver -> h
    int mRowIDColumn -> f
    android.widget.FilterQueryProvider mFilterQueryProvider -> j
    android.content.Context mContext -> e
    boolean mDataValid -> b
    boolean mAutoRequery -> c
    134:136:void <init>(android.content.Context,android.database.Cursor) -> <init>
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    163:165:void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    173:174:void init(android.content.Context,android.database.Cursor,boolean) -> a
    177:200:void init(android.content.Context,android.database.Cursor,int) -> a
    208:208:android.database.Cursor getCursor() -> a
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> a
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    458:459:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    334:338:void changeCursor(android.database.Cursor) -> b
    442:442:android.widget.FilterQueryProvider getFilterQueryProvider() -> b
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> c
    469:473:void onContentChanged() -> c
    216:219:int getCount() -> getCount
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    254:254:boolean hasStableIds() -> hasStableIds
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> a.j.b.a$a:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> a.j.b.a$b:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> a.j.b.b:
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> a.j.b.b$a:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
    android.database.Cursor getCursor() -> a
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void changeCursor(android.database.Cursor) -> b
androidx.cursoradapter.widget.ResourceCursorAdapter -> a.j.b.c:
    int mDropDownLayout -> n
    int mLayout -> m
    android.view.LayoutInflater mInflater -> o
    54:57:void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    99:102:void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    135:136:void setDropDownViewResource(int) -> a
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    126:127:void setViewResource(int) -> b
androidx.cursoradapter.widget.SimpleCursorAdapter -> a.j.b.d:
    androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> t
    java.lang.String[] mOriginalFrom -> u
    int[] mFrom -> p
    int[] mTo -> q
    int mStringConversionColumn -> r
    androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> s
    69:73:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    95:99:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    126:156:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    180:181:void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder) -> a
    200:204:void setViewImage(android.widget.ImageView,java.lang.String) -> a
    218:219:void setViewText(android.widget.TextView,java.lang.String) -> a
    283:284:void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter) -> a
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> a
    316:328:void findColumns(android.database.Cursor,java.lang.String[]) -> a
    351:358:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> a
    251:252:void setStringConversionColumn(int) -> c
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> c
    267:267:androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> d
    233:233:int getStringConversionColumn() -> e
    167:167:androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> f
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter -> a.j.b.d$a:
    java.lang.CharSequence convertToString(android.database.Cursor) -> a
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder -> a.j.b.d$b:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> a
androidx.customview.R -> a.k.a:
    668:668:void <init>() -> <init>
androidx.customview.R$attr -> a.k.a$a:
    455:455:void <init>() -> <init>
androidx.customview.R$color -> a.k.a$b:
    471:471:void <init>() -> <init>
androidx.customview.R$dimen -> a.k.a$c:
    750:750:void <init>() -> <init>
androidx.customview.R$drawable -> a.k.a$d:
    806:806:void <init>() -> <init>
androidx.customview.R$id -> a.k.a$e:
    785:785:void <init>() -> <init>
androidx.customview.R$integer -> a.k.a$f:
    388:388:void <init>() -> <init>
androidx.customview.R$layout -> a.k.a$g:
    476:476:void <init>() -> <init>
androidx.customview.R$string -> a.k.a$h:
    304:304:void <init>() -> <init>
androidx.customview.R$style -> a.k.a$i:
    384:384:void <init>() -> <init>
androidx.customview.R$styleable -> a.k.a$j:
    656:648:void <clinit>() -> <clinit>
    88:88:void <init>() -> <init>
androidx.customview.view.AbsSavedState -> a.k.b.a:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    59:60:void <init>(android.os.Parcel) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> a.k.b.a$a:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> a.k.b.a$b:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> a.k.c.a:
    100:347:void <clinit>() -> <clinit>
    135:137:void <init>(android.view.View) -> <init>
    998:1005:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1056:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    637:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:655:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:750:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:183:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:436:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    589:589:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    450:471:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    526:527:void invalidateRoot() -> invalidateRoot
    542:544:void invalidateVirtualView(int) -> invalidateVirtualView
    566:576:void invalidateVirtualView(int,int) -> invalidateVirtualView
    932:933:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:313:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    719:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:664:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:759:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1128:1128:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1116:1116:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    1206:1206:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    601:601:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    895:897:boolean performAction(int,int,android.os.Bundle) -> performAction
    908:914:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:969:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1035:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:506:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> a.k.c.a$a:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> a
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> a
androidx.customview.widget.ExploreByTouchHelper$2 -> a.k.c.a$b:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> a
    349:349:int size(java.lang.Object) -> a
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> a
    358:358:int size(androidx.collection.SparseArrayCompat) -> a
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> a.k.c.a$c:
    androidx.customview.widget.ExploreByTouchHelper this$0 -> c
    1238:1239:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> a
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
androidx.customview.widget.FocusStrategy -> a.k.c.b:
    454:455:void <init>() -> <init>
    40:53:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> a
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> a
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> a
    243:248:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> a
    283:283:int getWeightedDistanceFor(int,int) -> a
    297:299:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> a
    326:329:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> a
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> b
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> b
    343:345:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> b
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> c
    370:372:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> d
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> e
    398:400:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> f
    423:427:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> g
androidx.customview.widget.FocusStrategy$BoundsAdapter -> a.k.c.b$a:
    void obtainBounds(java.lang.Object,android.graphics.Rect) -> a
androidx.customview.widget.FocusStrategy$CollectionAdapter -> a.k.c.b$b:
    java.lang.Object get(java.lang.Object,int) -> a
    int size(java.lang.Object) -> a
androidx.customview.widget.FocusStrategy$SequentialComparator -> a.k.c.b$c:
    androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter -> e
    android.graphics.Rect mTemp2 -> c
    android.graphics.Rect mTemp1 -> b
    boolean mIsLayoutRtl -> d
    101:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> a.k.c.c:
    int BASE_SETTLE_DURATION -> K
    android.view.ViewGroup mParentView -> u
    int DIRECTION_ALL -> I
    java.lang.Runnable mSetIdleRunnable -> v
    int DIRECTION_HORIZONTAL -> G
    float[] mLastMotionX -> f
    int EDGE_BOTTOM -> E
    float[] mInitialMotionX -> d
    int mTouchSlop -> b
    int EDGE_RIGHT -> C
    int STATE_SETTLING -> A
    android.view.animation.Interpolator sInterpolator -> M
    int[] mInitialEdgesTouched -> h
    int STATE_IDLE -> y
    int[] mEdgeDragsLocked -> j
    float mMaxVelocity -> m
    int mEdgeSize -> o
    int MAX_SETTLE_DURATION -> L
    int EDGE_SIZE -> J
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    int DIRECTION_VERTICAL -> H
    float[] mLastMotionY -> g
    int EDGE_ALL -> F
    float[] mInitialMotionY -> e
    int EDGE_TOP -> D
    android.view.View mCapturedView -> s
    int EDGE_LEFT -> B
    int mActivePointerId -> c
    androidx.customview.widget.ViewDragHelper$Callback mCallback -> r
    int mDragState -> a
    boolean mReleaseInProgress -> t
    java.lang.String TAG -> w
    android.widget.OverScroller mScroller -> q
    int[] mEdgeDragsInProgress -> i
    int STATE_DRAGGING -> z
    int INVALID_POINTER -> x
    float mMinVelocity -> n
    int mTrackingEdges -> p
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> a
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> a
    411:412:void setMinVelocity(float) -> a
    471:472:void captureChildView(android.view.View,int) -> a
    525:535:void abort() -> a
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> a
    670:673:int clampMag(int,int,int) -> a
    687:690:float clampMag(float,float,float) -> a
    710:711:void flingCapturedView(int,int,int,int) -> a
    735:769:boolean continueSettling(boolean) -> a
    779:787:void dispatchViewReleased(float,float) -> a
    933:952:boolean canScroll(android.view.View,boolean,int,int,int,int) -> a
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> a
    1255:1273:void reportNewEdgeDrags(float,float,int) -> a
    1276:1283:boolean checkNewEdgeDrag(float,float,int,int) -> a
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> a
    1334:1340:boolean checkTouchSlop(int) -> a
    1359:1376:boolean checkTouchSlop(int,int) -> a
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> a
    511:518:void cancel() -> b
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> b
    638:656:int computeAxisDuration(int,int,int) -> b
    694:696:float distanceInfluenceForSnapDuration(float) -> b
    848:853:void saveInitialMotion(float,float,int) -> b
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> b
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> b
    1389:1395:boolean isEdgeTouched(int) -> b
    1424:1443:void dragTo(int,int,int,int) -> b
    1487:1495:android.view.View findTopChildUnder(int,int) -> b
    495:495:int getActivePointerId() -> c
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> c
    856:868:void saveLastMotion(android.view.MotionEvent) -> c
    884:884:boolean isPointerDown(int) -> c
    1455:1455:boolean isCapturedViewUnder(int,int) -> c
    487:487:android.view.View getCapturedView() -> d
    888:896:void setDragState(int) -> d
    1409:1409:boolean isEdgeTouched(int,int) -> d
    447:448:void setEdgeTrackingEnabled(int) -> e
    459:459:int getEdgeSize() -> e
    577:578:boolean settleCapturedViewAt(int,int) -> e
    422:422:float getMinVelocity() -> f
    804:805:void clearMotionHistory(int) -> f
    1499:1506:int getEdgesTouched(int,int) -> f
    503:503:int getTouchSlop() -> g
    818:845:void ensureMotionHistorySizeForId(int) -> g
    431:431:int getViewDragState() -> h
    1510:1516:boolean isValidPointerForActionMove(int) -> h
    790:801:void clearMotionHistory() -> i
    1413:1421:void releaseViewForPointerUp() -> j
androidx.customview.widget.ViewDragHelper$1 -> a.k.c.c$a:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> a.k.c.c$b:
    androidx.customview.widget.ViewDragHelper this$0 -> b
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> a.k.c.c$c:
    152:152:void <init>() -> <init>
    310:310:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    325:325:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
    163:163:void onViewDragStateChanged(int) -> onViewDragStateChanged
    176:176:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    207:207:void onViewReleased(android.view.View,float,float) -> onViewReleased
androidx.drawerlayout.R -> a.l.a:
    668:668:void <init>() -> <init>
androidx.drawerlayout.R$attr -> a.l.a$a:
    455:455:void <init>() -> <init>
androidx.drawerlayout.R$color -> a.l.a$b:
    471:471:void <init>() -> <init>
androidx.drawerlayout.R$dimen -> a.l.a$c:
    750:750:void <init>() -> <init>
androidx.drawerlayout.R$drawable -> a.l.a$d:
    806:806:void <init>() -> <init>
androidx.drawerlayout.R$id -> a.l.a$e:
    785:785:void <init>() -> <init>
androidx.drawerlayout.R$integer -> a.l.a$f:
    388:388:void <init>() -> <init>
androidx.drawerlayout.R$layout -> a.l.a$g:
    476:476:void <init>() -> <init>
androidx.drawerlayout.R$string -> a.l.a$h:
    304:304:void <init>() -> <init>
androidx.drawerlayout.R$style -> a.l.a$i:
    384:384:void <init>() -> <init>
androidx.drawerlayout.R$styleable -> a.l.a$j:
    656:648:void <clinit>() -> <clinit>
    88:88:void <init>() -> <init>
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    boolean ALLOW_EDGE_LOCK -> d0
    boolean mInLayout -> m
    int STATE_IDLE -> O
    int mDrawerState -> l
    android.graphics.drawable.Drawable mShadowStart -> F
    java.lang.String TAG -> M
    java.lang.CharSequence mTitleRight -> C
    float mDrawerElevation -> c
    androidx.customview.widget.ViewDragHelper mRightDragger -> i
    int mMinDrawerMargin -> d
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback -> k
    android.graphics.Rect mChildHitRect -> K
    float mInitialMotionX -> w
    int LOCK_MODE_LOCKED_OPEN -> T
    int STATE_DRAGGING -> P
    int mLockModeStart -> q
    boolean mFirstLayout -> n
    int PEEK_DELAY -> b0
    android.graphics.drawable.Drawable mShadowEnd -> G
    java.lang.CharSequence mTitleLeft -> B
    java.lang.Object mLastInsets -> D
    int mScrimColor -> e
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback -> j
    android.graphics.Paint mScrimPaint -> g
    float mInitialMotionY -> x
    android.graphics.drawable.Drawable mStatusBarBackground -> y
    int LOCK_MODE_UNDEFINED -> U
    boolean CAN_HIDE_DESCENDANTS -> h0
    int mLockModeEnd -> r
    int STATE_SETTLING -> Q
    boolean CHILDREN_DISALLOW_INTERCEPT -> e0
    float TOUCH_SLOP_SENSITIVITY -> f0
    java.util.List mListeners -> v
    android.graphics.drawable.Drawable mShadowLeft -> H
    boolean mDisallowInterceptRequested -> s
    java.util.ArrayList mNonDrawerViews -> J
    android.graphics.drawable.Drawable mShadowLeftResolved -> z
    int MIN_DRAWER_MARGIN -> V
    boolean mDrawStatusBarBackground -> E
    int LOCK_MODE_UNLOCKED -> R
    android.graphics.Matrix mChildInvertedMatrix -> L
    int MIN_FLING_VELOCITY -> c0
    int mLockModeLeft -> o
    int DEFAULT_SCRIM_COLOR -> a0
    float mScrimOpacity -> f
    androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener -> u
    android.graphics.drawable.Drawable mShadowRight -> I
    androidx.customview.widget.ViewDragHelper mLeftDragger -> h
    android.graphics.drawable.Drawable mShadowRightResolved -> A
    boolean mChildrenCanceledTouch -> t
    int[] LAYOUT_ATTRS -> g0
    androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int[] THEME_ATTRS -> N
    int DRAWER_ELEVATION -> W
    int LOCK_MODE_LOCKED_CLOSED -> S
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> i0
    int mLockModeRight -> p
    104:192:void <clinit>() -> <clinit>
    306:307:void <init>(android.content.Context) -> <init>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    314:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    405:409:void setChildInsets(java.lang.Object,boolean) -> a
    431:444:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> a
    576:614:void setDrawerLockMode(int,int) -> a
    635:636:void setDrawerLockMode(int,android.view.View) -> a
    727:734:void setDrawerTitle(int,java.lang.CharSequence) -> a
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> a
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> a
    814:847:void updateDrawerState(int,int,android.view.View) -> a
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> a
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    1641:1670:void closeDrawers(boolean) -> a
    1747:1748:void closeDrawer(android.view.View) -> a
    1757:1758:void closeDrawer(android.view.View,boolean) -> a
    1789:1790:void closeDrawer(int) -> a
    1800:1803:void closeDrawer(int,boolean) -> a
    1961:1972:void cancelChildViewTouch() -> a
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    465:466:void setDrawerShadow(int,int) -> b
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> b
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> b
    850:875:void dispatchOnDrawerClosed(android.view.View) -> b
    967:976:void moveDrawerToOffset(android.view.View,float) -> b
    985:995:android.view.View findDrawerWithGravity(int) -> b
    1208:1209:boolean mirror(android.graphics.drawable.Drawable,int) -> b
    1637:1638:void closeDrawers() -> b
    1688:1689:void openDrawer(android.view.View,boolean) -> b
    1733:1736:void openDrawer(int,boolean) -> b
    652:697:int getDrawerLockMode(int) -> c
    878:897:void dispatchOnDrawerOpened(android.view.View) -> c
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> c
    927:934:void setDrawerViewOffset(android.view.View,float) -> c
    955:963:android.view.View findOpenDrawer() -> c
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1309:1322:void computeScroll() -> computeScroll
    709:710:int getDrawerLockMode(android.view.View) -> d
    746:753:java.lang.CharSequence getDrawerTitle(int) -> d
    1949:1956:android.view.View findVisibleDrawer() -> d
    1536:1539:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> e
    1836:1840:boolean isDrawerOpen(int) -> e
    1875:1882:boolean hasPeekingDrawer() -> e
    937:937:float getDrawerViewOffset(android.view.View) -> f
    1867:1871:boolean isDrawerVisible(int) -> f
    1945:1945:boolean hasVisibleDrawer() -> f
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> g
    1464:1464:boolean isContentView(android.view.View) -> g
    1722:1723:void openDrawer(int) -> g
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    1005:1011:java.lang.String gravityToString(int) -> h
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> h
    1819:1820:boolean isDrawerOpen(android.view.View) -> h
    1158:1163:void resolveShadowDrawables() -> i
    1468:1479:boolean isDrawerView(android.view.View) -> i
    1852:1853:boolean isDrawerVisible(android.view.View) -> j
    1678:1679:void openDrawer(android.view.View) -> k
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> l
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> m
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1053:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$a:
    androidx.drawerlayout.widget.DrawerLayout this$0 -> a
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$b:
    androidx.drawerlayout.widget.DrawerLayout this$0 -> b
    android.graphics.Rect mTmpRect -> a
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2420:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$c:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$DrawerListener -> androidx.drawerlayout.widget.DrawerLayout$d:
    void onDrawerOpened(android.view.View) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerStateChanged(int) -> a
    void onDrawerClosed(android.view.View) -> b
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$e:
    int FLAG_IS_OPENING -> f
    int FLAG_IS_CLOSING -> g
    float onScreen -> b
    int openState -> d
    int FLAG_IS_OPENED -> e
    boolean isPeeking -> c
    int gravity -> a
    2319:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2327:2328:void <init>(int,int) -> <init>
    2331:2333:void <init>(int,int,int) -> <init>
    2336:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2341:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2345:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$f:
    int lockModeEnd -> f
    int lockModeRight -> d
    int lockModeStart -> e
    int openDrawerGravity -> b
    int lockModeLeft -> c
    2124:2124:void <clinit>() -> <clinit>
    2102:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2111:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$f$a:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$g:
    287:287:void <init>() -> <init>
    290:290:void onDrawerSlide(android.view.View,float) -> a
    294:294:void onDrawerOpened(android.view.View) -> a
    302:302:void onDrawerStateChanged(int) -> a
    298:298:void onDrawerClosed(android.view.View) -> b
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$h:
    androidx.customview.widget.ViewDragHelper mDragger -> b
    java.lang.Runnable mPeekRunnable -> c
    androidx.drawerlayout.widget.DrawerLayout this$0 -> d
    int mAbsGravity -> a
    2152:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> a
    2237:2259:void peekDrawer() -> a
    2161:2162:void removeCallbacks() -> b
    2203:2208:void closeOtherDrawer() -> c
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2276:2285:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2270:2270:boolean onEdgeLock(int) -> onEdgeLock
    2231:2232:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2200:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2175:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2227:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$h$a:
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback this$1 -> b
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.fragment.R -> a.m.a:
    668:668:void <init>() -> <init>
androidx.fragment.R$attr -> a.m.a$a:
    455:455:void <init>() -> <init>
androidx.fragment.R$color -> a.m.a$b:
    471:471:void <init>() -> <init>
androidx.fragment.R$dimen -> a.m.a$c:
    750:750:void <init>() -> <init>
androidx.fragment.R$drawable -> a.m.a$d:
    806:806:void <init>() -> <init>
androidx.fragment.R$id -> a.m.a$e:
    785:785:void <init>() -> <init>
androidx.fragment.R$integer -> a.m.a$f:
    790:790:void <init>() -> <init>
androidx.fragment.R$layout -> a.m.a$g:
    134:134:void <init>() -> <init>
androidx.fragment.R$string -> a.m.a$h:
    871:871:void <init>() -> <init>
androidx.fragment.R$style -> a.m.a$i:
    551:551:void <init>() -> <init>
androidx.fragment.R$styleable -> a.m.a$j:
    287:272:void <clinit>() -> <clinit>
    126:126:void <init>() -> <init>
androidx.fragment.app.BackStackRecord -> a.m.b.a:
    int mIndex -> M
    boolean mCommitted -> L
    java.lang.String TAG -> N
    androidx.fragment.app.FragmentManagerImpl mManager -> K
    140:142:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    59:60:void dump(java.lang.String,java.io.PrintWriter) -> a
    63:138:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    162:165:java.lang.CharSequence getBreadCrumbTitle() -> a
    179:181:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> a
    243:244:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    332:341:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
    357:381:boolean interactsWith(java.util.ArrayList,int,int) -> a
    528:593:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> a
    643:649:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> a
    151:151:int getBreadCrumbTitleRes() -> b
    219:224:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> b
    607:629:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> b
    652:653:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> b
    156:156:int getBreadCrumbShortTitleRes() -> c
    197:202:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> c
    303:303:int commitInternal(boolean) -> c
    171:174:java.lang.CharSequence getBreadCrumbShortTitle() -> d
    186:191:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> d
    451:502:void executePopOps(boolean) -> d
    230:236:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> e
    255:269:void bumpBackStackNesting(int) -> e
    660:660:java.lang.String getName() -> e
    208:213:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> f
    282:282:int commit() -> f
    345:353:boolean interactsWith(int) -> f
    287:287:int commitAllowingStateLoss() -> g
    146:146:int getId() -> getId
    292:294:void commitNow() -> h
    298:300:void commitNowAllowingStateLoss() -> i
    665:665:boolean isEmpty() -> l
    389:441:void executeOps() -> m
    633:639:boolean isPostponed() -> n
    272:278:void runOnCommitRunnables() -> o
    43:55:java.lang.String toString() -> toString
androidx.fragment.app.BackStackState -> a.m.b.b:
    int mBreadCrumbShortTitleRes -> l
    java.lang.String mName -> h
    boolean mReorderingAllowed -> p
    int mBreadCrumbTitleRes -> j
    int mIndex -> i
    int mTransition -> f
    int mTransitionStyle -> g
    java.util.ArrayList mFragmentWhos -> c
    java.lang.CharSequence mBreadCrumbTitleText -> k
    java.util.ArrayList mSharedElementTargetNames -> o
    java.lang.CharSequence mBreadCrumbShortTitleText -> m
    java.util.ArrayList mSharedElementSourceNames -> n
    int[] mOps -> b
    int[] mOldMaxLifecycleStates -> d
    int[] mCurrentMaxLifecycleStates -> e
    170:170:void <clinit>() -> <clinit>
    47:52:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:99:void <init>(android.os.Parcel) -> <init>
    102:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> a
    148:148:int describeContents() -> describeContents
    153:168:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> a.m.b.b$a:
    171:171:void <init>() -> <init>
    171:171:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    171:171:java.lang.Object[] newArray(int) -> newArray
    179:179:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> a.m.b.c:
    112:113:void <init>() -> <init>
    202:203:void dismiss() -> dismiss
    212:213:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    216:253:void dismissInternal(boolean,boolean) -> dismissInternal
    262:262:android.app.Dialog getDialog() -> getDialog
    332:332:boolean getShowsDialog() -> getShowsDialog
    283:283:int getTheme() -> getTheme
    304:304:boolean isCancelable() -> isCancelable
    451:478:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    337:343:void onAttach(android.content.Context) -> onAttach
    436:436:void onCancel(android.content.DialogInterface) -> onCancel
    358:371:void onCreate(android.os.Bundle) -> onCreate
    431:431:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    529:547:void onDestroyView() -> onDestroyView
    347:354:void onDetach() -> onDetach
    440:447:void onDismiss(android.content.DialogInterface) -> onDismiss
    376:388:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    492:514:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    482:488:void onStart() -> onStart
    518:522:void onStop() -> onStop
    274:276:android.app.Dialog requireDialog() -> requireDialog
    296:298:void setCancelable(boolean) -> setCancelable
    325:326:void setShowsDialog(boolean) -> setShowsDialog
    130:137:void setStyle(int,int) -> setStyle
    395:405:void setupDialog(android.app.Dialog,int) -> setupDialog
    151:156:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    168:173:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    188:193:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
androidx.fragment.app.DialogFragment$1 -> a.m.b.c$a:
    androidx.fragment.app.DialogFragment this$0 -> b
    93:93:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    96:99:void run() -> run
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    98:98:void <clinit>() -> <clinit>
    450:452:void <init>() -> <init>
    463:465:void <init>(int) -> <init>
    2451:2461:void callStartTransitionListener() -> callStartTransitionListener
    2474:2547:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2873:2876:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    570:570:boolean equals(java.lang.Object) -> equals
    2551:2554:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    788:788:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2315:2315:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2340:2340:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2931:2934:android.view.View getAnimatingAway() -> getAnimatingAway
    2946:2949:android.animation.Animator getAnimator() -> getAnimator
    636:636:android.os.Bundle getArguments() -> getArguments
    922:923:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    761:761:android.content.Context getContext() -> getContext
    2098:2101:java.lang.Object getEnterTransition() -> getEnterTransition
    2917:2920:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2177:2180:java.lang.Object getExitTransition() -> getExitTransition
    2924:2927:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    890:890:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    815:815:java.lang.Object getHost() -> getHost
    605:605:int getId() -> getId
    1396:1399:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1430:1431:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    283:283:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1165:1165:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    2880:2883:int getNextAnim() -> getNextAnim
    2894:2897:int getNextTransition() -> getNextTransition
    2910:2913:int getNextTransitionStyle() -> getNextTransitionStyle
    934:934:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2215:2218:java.lang.Object getReenterTransition() -> getReenterTransition
    838:838:android.content.res.Resources getResources() -> getResources
    1073:1073:boolean getRetainInstance() -> getRetainInstance
    2137:2140:java.lang.Object getReturnTransition() -> getReturnTransition
    370:370:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2248:2251:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2286:2289:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2953:2956:int getStateAfterAnimating() -> getStateAfterAnimating
    860:860:java.lang.String getString(int) -> getString
    873:873:java.lang.String getString(int,java.lang.Object[]) -> getString
    613:613:java.lang.String getTag() -> getTag
    736:744:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    751:751:int getTargetRequestCode() -> getTargetRequestCode
    849:849:java.lang.CharSequence getText(int) -> getText
    1153:1153:boolean getUserVisibleHint() -> getUserVisibleHint
    1686:1686:android.view.View getView() -> getView
    324:325:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    345:345:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    361:362:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1028:1028:boolean hasOptionsMenu() -> hasOptionsMenu
    577:577:int hashCode() -> hashCode
    468:483:void initLifecycle() -> initLifecycle
    1877:1893:void initState() -> initState
    495:495:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    521:530:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    964:964:boolean isAdded() -> isAdded
    973:973:boolean isDetached() -> isDetached
    1022:1022:boolean isHidden() -> isHidden
    2971:2974:boolean isHideReplaced() -> isHideReplaced
    563:563:boolean isInBackStack() -> isInBackStack
    993:993:boolean isInLayout() -> isInLayout
    1034:1034:boolean isMenuVisible() -> isMenuVisible
    2964:2967:boolean isPostponed() -> isPostponed
    982:982:boolean isRemoving() -> isRemoving
    1001:1001:boolean isResumed() -> isResumed
    663:666:boolean isStateSaved() -> isStateSaved
    1010:1010:boolean isVisible() -> isVisible
    2663:2664:void noteStateNotSaved() -> noteStateNotSaved
    1720:1721:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1238:1238:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1523:1529:void onAttach(android.content.Context) -> onAttach
    1540:1541:void onAttach(android.app.Activity) -> onAttach
    1515:1515:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    1804:1805:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2045:2045:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1603:1608:void onCreate(android.os.Bundle) -> onCreate
    1560:1560:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1581:1581:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    1999:2000:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1918:1918:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1659:1662:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1867:1868:void onDestroy() -> onDestroy
    1945:1945:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1858:1859:void onDestroyView() -> onDestroyView
    1901:1902:void onDetach() -> onDetach
    1380:1380:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1044:1044:void onHiddenChanged(boolean) -> onHiddenChanged
    1484:1490:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1502:1503:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1844:1845:void onLowMemory() -> onLowMemory
    1790:1790:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    1966:1966:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1977:1977:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1828:1829:void onPause() -> onPause
    1799:1799:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1935:1935:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1819:1819:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1340:1340:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1757:1758:void onResume() -> onResume
    1780:1780:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1746:1747:void onStart() -> onStart
    1838:1839:void onStop() -> onStop
    1676:1676:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1736:1737:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2616:2621:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2558:2576:void performAttach() -> performAttach
    2688:2690:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2745:2753:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2582:2589:void performCreate(android.os.Bundle) -> performCreate
    2707:2715:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2597:2608:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2825:2832:void performDestroy() -> performDestroy
    2805:2813:void performDestroyView() -> performDestroyView
    2838:2842:void performDetach() -> performDetach
    1412:1414:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2693:2695:void performLowMemory() -> performLowMemory
    2678:2680:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2731:2741:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2757:2763:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2775:2784:void performPause() -> performPause
    2683:2685:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2719:2727:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2667:2675:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    2645:2651:void performResume() -> performResume
    2766:2772:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2628:2634:void performStart() -> performStart
    2790:2799:void performStop() -> performStop
    2375:2376:void postponeEnterTransition() -> postponeEnterTransition
    2409:2418:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    2013:2014:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1314:1315:void requestPermissions(java.lang.String[],int) -> requestPermissions
    800:802:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    647:649:android.os.Bundle requireArguments() -> requireArguments
    772:774:android.content.Context requireContext() -> requireContext
    908:910:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    826:828:java.lang.Object requireHost() -> requireHost
    946:957:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1697:1699:android.view.View requireView() -> requireView
    1623:1631:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    547:554:void restoreViewState(android.os.Bundle) -> restoreViewState
    2303:2304:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2328:2329:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    2938:2939:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2942:2943:void setAnimator(android.animation.Animator) -> setAnimator
    624:628:void setArguments(android.os.Bundle) -> setArguments
    2056:2057:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2084:2085:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2067:2068:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2160:2161:void setExitTransition(java.lang.Object) -> setExitTransition
    1084:1090:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    2978:2979:void setHideReplaced(boolean) -> setHideReplaced
    678:679:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1102:1108:void setMenuVisibility(boolean) -> setMenuVisibility
    2887:2891:void setNextAnim(int) -> setNextAnim
    2901:2907:void setNextTransition(int,int) -> setNextTransition
    2856:2870:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2199:2200:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1060:1070:void setRetainInstance(boolean) -> setRetainInstance
    2120:2121:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2234:2235:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    2269:2270:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    2960:2961:void setStateAfterAnimating(int) -> setStateAfterAnimating
    702:729:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1131:1142:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1363:1366:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1173:1174:void startActivity(android.content.Intent) -> startActivity
    1182:1183:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1194:1195:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1203:1204:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1216:1217:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2431:2443:void startPostponedEnterTransition() -> startPostponedEnterTransition
    582:596:java.lang.String toString() -> toString
    2024:2025:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$a:
    androidx.fragment.app.Fragment this$0 -> b
    230:230:void <init>(androidx.fragment.app.Fragment) -> <init>
    233:234:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    androidx.fragment.app.Fragment this$0 -> a
    471:471:void <init>(androidx.fragment.app.Fragment) -> <init>
    475:480:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$b:
    androidx.fragment.app.Fragment this$0 -> b
    2434:2434:void <init>(androidx.fragment.app.Fragment) -> <init>
    2437:2438:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$c:
    androidx.fragment.app.Fragment this$0 -> a
    2558:2558:void <init>(androidx.fragment.app.Fragment) -> <init>
    2562:2563:android.view.View onFindViewById(int) -> a
    2570:2570:boolean onHasView() -> b
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$d:
    java.lang.Object mReenterTransition -> j
    java.lang.Object mSharedElementEnterTransition -> k
    java.lang.Object mReturnTransition -> h
    java.lang.Object mExitTransition -> i
    androidx.core.app.SharedElementCallback mEnterTransitionCallback -> o
    java.lang.Object mEnterTransition -> g
    androidx.core.app.SharedElementCallback mExitTransitionCallback -> p
    int mNextTransitionStyle -> f
    int mNextAnim -> d
    java.lang.Boolean mAllowReturnTransitionOverlap -> m
    int mNextTransition -> e
    java.lang.Boolean mAllowEnterTransitionOverlap -> n
    boolean mEnterTransitionPostponed -> q
    int mStateAfterAnimating -> c
    java.lang.Object mSharedElementReturnTransition -> l
    boolean mIsHideReplaced -> s
    androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> r
    android.animation.Animator mAnimator -> b
    android.view.View mAnimatingAway -> a
    2995:3028:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$e:
    430:431:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.Fragment$f:
    void onStartEnterTransition() -> a
    void startListening() -> b
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$g:
    android.os.Bundle mState -> b
    404:404:void <clinit>() -> <clinit>
    382:384:void <init>(android.os.Bundle) -> <init>
    386:391:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    395:395:int describeContents() -> describeContents
    400:401:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$g$a:
    405:405:void <init>() -> <init>
    405:405:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    405:405:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    408:408:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    413:413:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    405:405:java.lang.Object[] newArray(int) -> newArray
    418:418:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    boolean mStopped -> m
    boolean mRequestedPermissionsFromFragment -> n
    androidx.fragment.app.FragmentController mFragments -> i
    boolean mStartedIntentSenderFromFragment -> o
    boolean mStartedActivityFromFragment -> p
    boolean mCreated -> k
    androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry -> j
    boolean mResumed -> l
    java.lang.String TAG -> s
    java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG -> u
    java.lang.String FRAGMENTS_TAG -> t
    java.lang.String REQUEST_FRAGMENT_WHO_TAG -> w
    java.lang.String ALLOCATED_REQUEST_INDICIES_TAG -> v
    int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS -> x
    androidx.collection.SparseArrayCompat mPendingFragmentActivityResults -> r
    int mNextCandidateRequestIndex -> q
    127:128:void <init>() -> <init>
    142:143:void <init>(int) -> <init>
    206:207:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> a
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    502:502:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    628:628:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    728:732:void validateRequestPermissionsRequestCode(int) -> a
    779:780:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> a
    788:800:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> a
    810:824:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> a
    853:865:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> a
    995:1011:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> a
    219:220:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> b
    714:715:void checkForValidRequestCode(int) -> b
    830:831:int allocateRequestIndex(androidx.fragment.app.Fragment) -> b
    599:613:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    636:636:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> f
    646:646:androidx.loader.app.LoaderManager getSupportLoaderManager() -> g
    478:480:void onResumeFragments() -> h
    194:195:void supportFinishAfterTransition() -> i
    583:584:void supportInvalidateOptionsMenu() -> j
    227:228:void supportPostponeEnterTransition() -> k
    235:236:void supportStartPostponedEnterTransition() -> l
    990:991:void markFragmentsCreated() -> m
    155:182:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    273:276:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    284:317:void onCreate(android.os.Bundle) -> onCreate
    324:329:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    336:340:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    347:351:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    365:368:void onDestroy() -> onDestroy
    375:377:void onLowMemory() -> onLowMemory
    384:390:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:251:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    437:439:void onNewIntent(android.content.Intent) -> onNewIntent
    405:411:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    418:422:void onPause() -> onPause
    265:266:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    467:469:void onPostResume() -> onPostResume
    487:492:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    754:772:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    456:460:void onResume() -> onResume
    510:529:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    536:552:void onStart() -> onStart
    446:447:void onStateNotSaved() -> onStateNotSaved
    559:566:void onStop() -> onStop
    658:664:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    671:677:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    685:692:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    700:707:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$a:
    androidx.fragment.app.FragmentActivity this$0 -> g
    871:873:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    894:894:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> a
    900:901:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    927:928:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> a
    933:934:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> a
    941:943:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> a
    948:950:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> a
    954:954:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> a
    971:972:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    977:977:android.view.View onFindViewById(int) -> a
    905:905:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> b
    982:983:boolean onHasView() -> b
    868:868:java.lang.Object onGetHost() -> f
    916:916:androidx.fragment.app.FragmentActivity onGetHost() -> f
    911:911:android.view.LayoutInflater onGetLayoutInflater() -> g
    882:882:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    888:888:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    965:966:int onGetWindowAnimations() -> h
    960:960:boolean onHasWindowAnimations() -> i
    921:922:void onSupportInvalidateOptionsMenu() -> j
androidx.fragment.app.FragmentContainer -> a.m.b.d:
    31:31:void <init>() -> <init>
    android.view.View onFindViewById(int) -> a
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean onHasView() -> b
androidx.fragment.app.FragmentController -> a.m.b.e:
    androidx.fragment.app.FragmentHostCallback mHost -> a
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> a
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    108:108:java.util.List getActiveFragments(java.util.List) -> a
    116:118:void attachHost(androidx.fragment.app.Fragment) -> a
    134:134:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    165:167:void restoreAllState(android.os.Parcelable,java.util.List) -> a
    180:181:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> a
    190:191:void restoreSaveState(android.os.Parcelable) -> a
    246:247:void dispatchActivityCreated() -> a
    340:341:void dispatchMultiWindowModeChanged(boolean) -> a
    362:363:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    386:386:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    424:424:boolean dispatchContextItemSelected(android.view.MenuItem) -> a
    435:436:void dispatchOptionsMenuClosed(android.view.Menu) -> a
    521:521:void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap) -> a
    531:531:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    235:236:void dispatchCreate() -> b
    351:352:void dispatchPictureInPictureModeChanged(boolean) -> b
    398:398:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    411:411:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> b
    329:330:void dispatchDestroy() -> c
    469:469:void doLoaderStop(boolean) -> c
    308:309:void dispatchDestroyView() -> d
    374:375:void dispatchLowMemory() -> e
    279:280:void dispatchPause() -> f
    298:298:void dispatchReallyStop() -> g
    268:269:void dispatchResume() -> h
    257:258:void dispatchStart() -> i
    290:291:void dispatchStop() -> j
    487:487:void doLoaderDestroy() -> k
    478:478:void doLoaderRetain() -> l
    456:456:void doLoaderStart() -> m
    446:446:boolean execPendingActions() -> n
    99:99:int getActiveFragmentsCount() -> o
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> p
    83:83:androidx.loader.app.LoaderManager getSupportLoaderManager() -> q
    141:142:void noteStateNotSaved() -> r
    496:496:void reportLoaderStart() -> s
    507:507:androidx.collection.SimpleArrayMap retainLoaderNonConfig() -> t
    224:224:androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig() -> u
    208:209:java.util.List retainNonConfig() -> v
    151:151:android.os.Parcelable saveAllState() -> w
androidx.fragment.app.FragmentFactory -> a.m.b.f:
    androidx.collection.SimpleArrayMap sClassMap -> a
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    114:117:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
    64:67:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> b
    44:50:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> c
    88:91:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> d
androidx.fragment.app.FragmentHostCallback -> a.m.b.g:
    android.content.Context mContext -> c
    android.os.Handler mHandler -> d
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> f
    int mWindowAnimations -> e
    android.app.Activity mActivity -> b
    53:55:void <init>(android.content.Context,android.os.Handler,int) -> <init>
    58:59:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    62:67:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    80:80:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    119:120:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> a
    129:130:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> a
    144:145:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> a
    158:158:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> a
    165:165:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> a
    185:185:android.view.View onFindViewById(int) -> a
    209:209:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    86:86:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> b
    190:190:boolean onHasView() -> b
    195:195:android.app.Activity getActivity() -> c
    200:200:android.content.Context getContext() -> d
    205:205:android.os.Handler getHandler() -> e
    java.lang.Object onGetHost() -> f
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> g
    179:179:int onGetWindowAnimations() -> h
    172:172:boolean onHasWindowAnimations() -> i
    111:111:void onSupportInvalidateOptionsMenu() -> j
androidx.fragment.app.FragmentManager -> a.m.b.h:
    androidx.fragment.app.FragmentFactory mFragmentFactory -> b
    androidx.fragment.app.FragmentFactory DEFAULT_FACTORY -> c
    int POP_BACK_STACK_INCLUSIVE -> d
    49:49:void <clinit>() -> <clinit>
    48:117:void <init>() -> <init>
    void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> a
    androidx.fragment.app.FragmentTransaction beginTransaction() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    androidx.fragment.app.Fragment findFragmentById(int) -> a
    androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> a
    androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    void popBackStack(int,int) -> a
    void popBackStack(java.lang.String,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> a
    void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> a
    androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> a
    void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> a
    401:402:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> a
    434:435:void enableDebugLogging(boolean) -> a
    boolean executePendingTransactions() -> b
    androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> b
    boolean popBackStackImmediate(int,int) -> b
    boolean popBackStackImmediate(java.lang.String,int) -> b
    void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> b
    int getBackStackEntryCount() -> c
    411:414:androidx.fragment.app.FragmentFactory getFragmentFactory() -> d
    java.util.List getFragments() -> e
    androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> f
    boolean isDestroyed() -> g
    boolean isStateSaved() -> h
    143:143:androidx.fragment.app.FragmentTransaction openTransaction() -> i
    void popBackStack() -> j
    boolean popBackStackImmediate() -> k
androidx.fragment.app.FragmentManager$BackStackEntry -> a.m.b.h$a:
    java.lang.CharSequence getBreadCrumbTitle() -> a
    int getBreadCrumbTitleRes() -> b
    int getBreadCrumbShortTitleRes() -> c
    java.lang.CharSequence getBreadCrumbShortTitle() -> d
    java.lang.String getName() -> e
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> a.m.b.h$b:
    454:454:void <init>() -> <init>
    476:476:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> a
    512:512:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> a
    524:524:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> a
    589:589:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> a
    465:465:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> b
    500:500:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> b
    598:598:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> b
    488:488:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> c
    551:551:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> c
    542:542:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> d
    571:571:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> d
    533:533:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> e
    560:560:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> f
    580:580:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> g
androidx.fragment.app.FragmentManager$OnBackStackChangedListener -> a.m.b.h$c:
    void onBackStackChanged() -> a
androidx.fragment.app.FragmentManagerImpl -> a.m.b.i:
    java.util.HashMap mActive -> i
    java.lang.String TAG -> K
    boolean DEBUG -> J
    java.lang.String TARGET_STATE_TAG -> M
    java.lang.String USER_VISIBLE_HINT_TAG -> O
    java.util.ArrayList mPendingActions -> e
    boolean mNeedMenuInvalidate -> w
    java.util.ArrayList mTmpAddedFragments -> D
    java.util.ArrayList mTmpRecords -> B
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> q
    androidx.fragment.app.Fragment mParent -> u
    java.util.ArrayList mAvailBackStackIndices -> o
    android.view.animation.Interpolator DECELERATE_CUBIC -> Q
    java.util.ArrayList mCreatedMenus -> k
    boolean mStopped -> y
    int ANIM_STYLE_FADE_EXIT -> X
    int ANIM_STYLE_CLOSE_EXIT -> V
    boolean mExecutingActions -> f
    int ANIM_STYLE_OPEN_EXIT -> T
    androidx.fragment.app.FragmentContainer mContainer -> t
    int ANIM_DUR -> R
    boolean mHavePendingDeferredStart -> A
    android.os.Bundle mStateBundle -> E
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> L
    java.util.ArrayList mPostponedTransactions -> G
    java.lang.String VIEW_STATE_TAG -> N
    int mNextFragmentIndex -> g
    boolean mStateSaved -> x
    java.util.ArrayList mTmpIsPop -> C
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> l
    androidx.fragment.app.Fragment mPrimaryNav -> v
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> m
    java.util.ArrayList mBackStackIndices -> n
    androidx.fragment.app.FragmentHostCallback mHost -> s
    java.lang.Runnable mExecCommit -> I
    android.view.animation.Interpolator DECELERATE_QUINT -> P
    java.util.ArrayList mBackStack -> j
    boolean mDestroyed -> z
    java.util.ArrayList mAdded -> h
    int ANIM_STYLE_FADE_ENTER -> W
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> H
    int ANIM_STYLE_CLOSE_ENTER -> U
    android.util.SparseArray mStateArray -> F
    int mCurState -> r
    int ANIM_STYLE_OPEN_ENTER -> S
    java.util.ArrayList mBackStackChangeListeners -> p
    76:575:void <clinit>() -> <clinit>
    75:147:void <init>() -> <init>
    3252:3252:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> A
    230:243:void handleOnBackPressed() -> B
    2593:2602:void noteStateNotSaved() -> C
    2183:2188:void reportBackStackChanged() -> D
    2260:2264:androidx.fragment.app.FragmentManagerNonConfig retainNonConfig() -> E
    2320:2426:android.os.Parcelable saveAllState() -> F
    1584:1593:void scheduleCommit() -> G
    1323:1328:void startPendingDeferredFragments() -> H
    2555:2559:void burpActive() -> I
    1535:1536:void checkStateLoss() -> J
    1712:1715:void cleanupExec() -> K
    2125:2145:void endAnimatingAwayFragments() -> L
    2113:2118:void forcePostponedTransactions() -> M
    192:201:void updateOnBackPressedCallbackEnabled() -> N
    155:172:void throwException(java.lang.RuntimeException) -> a
    178:178:androidx.fragment.app.FragmentTransaction beginTransaction() -> a
    258:259:void popBackStack(java.lang.String,int) -> a
    269:270:void popBackStack(int,int) -> a
    293:319:boolean popBackStackImmediate(java.lang.String,int,int) -> a
    334:338:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> a
    349:354:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> a
    359:368:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    441:449:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> a
    475:544:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    581:591:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> a
    595:598:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float) -> a
    603:702:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> a
    725:1064:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> a
    1076:1130:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> a
    1289:1320:void moveToState(int,boolean) -> a
    1375:1396:void addFragment(androidx.fragment.app.Fragment,boolean) -> a
    1487:1499:androidx.fragment.app.Fragment findFragmentById(int) -> a
    1505:1522:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> a
    1557:1573:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> a
    1617:1638:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> a
    1747:1776:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> a
    1935:1968:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> a
    1989:2021:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> a
    2068:2082:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> a
    2091:2107:void addAddedFragments(androidx.collection.ArraySet) -> a
    2191:2195:void addBackStackState(androidx.fragment.app.BackStackRecord) -> a
    2200:2251:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> a
    2430:2436:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> a
    2440:2547:void restoreSaveState(android.os.Parcelable) -> a
    2563:2563:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> a
    2685:2691:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    2703:2732:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    2767:2778:boolean dispatchContextItemSelected(android.view.MenuItem) -> a
    2782:2791:void dispatchOptionsMenuClosed(android.view.Menu) -> a
    2825:2827:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    2861:2862:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> a
    2866:2873:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> a
    2894:2906:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> a
    2942:2954:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> a
    2958:2970:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> a
    183:185:boolean executePendingTransactions() -> b
    263:264:boolean popBackStackImmediate(java.lang.String,int) -> b
    277:280:boolean popBackStackImmediate(int,int) -> b
    329:329:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> b
    342:345:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> b
    393:403:void addRetainedFragment(androidx.fragment.app.Fragment) -> b
    1526:1531:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> b
    1597:1613:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> b
    1688:1705:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> b
    1844:1899:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> b
    1909:1918:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> b
    2159:2171:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> b
    2667:2673:void dispatchMultiWindowModeChanged(boolean) -> b
    2736:2748:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    2752:2763:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> b
    2878:2890:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> b
    2926:2938:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> b
    3064:3076:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> b
    3137:3149:int transitToStyleIndex(int,boolean) -> b
    324:324:int getBackStackEntryCount() -> c
    1464:1481:void attachFragment(androidx.fragment.app.Fragment) -> c
    1642:1649:void freeBackStackIndex(int) -> c
    1794:1795:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> c
    2676:2682:void dispatchPictureInPictureModeChanged(boolean) -> c
    2910:2922:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> c
    3079:3091:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> c
    718:718:boolean isStateAtLeast(int) -> d
    1163:1211:void completeShowHideFragment(androidx.fragment.app.Fragment) -> d
    1659:1660:void ensureExecReady(boolean) -> d
    2836:2855:androidx.fragment.app.FragmentFactory getFragmentFactory() -> d
    3003:3015:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> d
    3034:3046:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> d
    374:379:java.util.List getFragments() -> e
    1446:1461:void detachFragment(androidx.fragment.app.Fragment) -> e
    2658:2662:void dispatchStateChange(int) -> e
    2988:3000:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> e
    1137:1150:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> f
    2821:2821:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> f
    2973:2985:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> f
    3113:3125:int reverseTransit(int) -> f
    389:389:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> g
    454:454:boolean isDestroyed() -> g
    3018:3030:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> g
    384:384:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> h
    1546:1546:boolean isStateSaved() -> h
    3049:3061:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> h
    1420:1427:void hideFragment(androidx.fragment.app.Fragment) -> i
    211:220:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> j
    247:248:void popBackStack() -> j
    252:253:boolean popBackStackImmediate() -> k
    1331:1345:void makeActive(androidx.fragment.app.Fragment) -> k
    1348:1372:void makeInactive(androidx.fragment.app.Fragment) -> l
    3096:3105:boolean checkForMenus() -> l
    1220:1277:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> m
    2611:2614:void dispatchActivityCreated() -> m
    1133:1134:void moveToState(androidx.fragment.app.Fragment) -> n
    2605:2608:void dispatchCreate() -> n
    706:715:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> o
    2642:2654:void dispatchDestroy() -> o
    3156:3172:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3248:3248:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1399:1404:void removeFragment(androidx.fragment.app.Fragment) -> p
    2638:2639:void dispatchDestroyView() -> p
    406:416:void removeRetainedFragment(androidx.fragment.app.Fragment) -> q
    2694:2700:void dispatchLowMemory() -> q
    2284:2314:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> r
    2629:2630:void dispatchPause() -> r
    2268:2281:void saveFragmentViewState(androidx.fragment.app.Fragment) -> s
    2813:2816:void dispatchPrimaryNavigationFragmentChanged() -> s
    2623:2626:void dispatchResume() -> t
    2795:2804:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> t
    459:469:java.lang.String toString() -> toString
    1436:1443:void showFragment(androidx.fragment.app.Fragment) -> u
    2617:2620:void dispatchStart() -> u
    2633:2635:void dispatchStop() -> v
    2807:2810:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> v
    2040:2044:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> w
    2176:2180:void doPendingDeferredStart() -> w
    1721:1738:boolean execPendingActions() -> x
    3109:3109:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> x
    435:435:int getActiveFragmentCount() -> y
    426:426:java.util.List getActiveFragments() -> z
androidx.fragment.app.FragmentManagerImpl$1 -> a.m.b.i$a:
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    105:105:void <init>(androidx.fragment.app.FragmentManagerImpl,boolean) -> <init>
    108:109:void handleOnBackPressed() -> a
androidx.fragment.app.FragmentManagerImpl$2 -> a.m.b.i$b:
    androidx.fragment.app.FragmentManagerImpl this$0 -> b
    147:147:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    150:151:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> a.m.b.i$c:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    androidx.fragment.app.Fragment val$fragment -> b
    1084:1084:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1094:1104:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1108:1108:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1087:1087:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$3$1 -> a.m.b.i$c$a:
    androidx.fragment.app.FragmentManagerImpl$3 this$1 -> b
    1094:1094:void <init>(androidx.fragment.app.FragmentManagerImpl$3) -> <init>
    1097:1102:void run() -> run
androidx.fragment.app.FragmentManagerImpl$4 -> a.m.b.i$d:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    android.view.View val$viewToAnimate -> b
    androidx.fragment.app.Fragment val$fragment -> c
    1114:1114:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1117:1125:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$5 -> a.m.b.i$e:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    android.view.View val$animatingView -> b
    androidx.fragment.app.Fragment val$fragment -> c
    1177:1177:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1180:1185:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$6 -> a.m.b.i$f:
    androidx.fragment.app.FragmentManagerImpl this$0 -> b
    2845:2845:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    2851:2851:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> a.m.b.i$g:
    android.view.animation.Animation animation -> a
    android.animation.Animator animator -> b
    3401:3405:void <init>(android.view.animation.Animation) -> <init>
    3409:3413:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> a.m.b.i$h:
    android.view.ViewGroup mParent -> b
    boolean mTransitionEnded -> e
    boolean mAnimating -> f
    android.view.View mChild -> c
    boolean mEnded -> d
    3433:3440:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    3444:3453:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    3459:3468:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    3473:3481:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> a.m.b.i$i:
    boolean mRecursive -> b
    androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback -> a
    88:91:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> a.m.b.i$j:
    int Fragment_tag -> d
    int[] Fragment -> a
    int Fragment_id -> b
    int Fragment_name -> c
    3256:3256:void <clinit>() -> <clinit>
    3263:3264:void <init>() -> <init>
androidx.fragment.app.FragmentManagerImpl$OpGenerator -> a.m.b.i$k:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> a.m.b.i$l:
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    java.lang.String mName -> a
    int mId -> b
    int mFlags -> c
    3295:3299:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3304:3314:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> a.m.b.i$m:
    boolean mIsBack -> a
    int mNumPostponed -> c
    androidx.fragment.app.BackStackRecord mRecord -> b
    3329:3332:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3341:3346:void onStartEnterTransition() -> a
    3355:3356:void startListening() -> b
    3390:3391:void cancelTransaction() -> c
    3372:3383:void completeTransaction() -> d
    3362:3362:boolean isReady() -> e
androidx.fragment.app.FragmentManagerNonConfig -> a.m.b.j:
    java.util.Map mChildNonConfigs -> b
    java.util.Map mViewModelStores -> c
    java.util.Collection mFragments -> a
    49:53:void <init>(java.util.Collection,java.util.Map,java.util.Map) -> <init>
    57:60:boolean isRetaining(androidx.fragment.app.Fragment) -> a
    76:76:java.util.Map getChildNonConfigs() -> a
    68:68:java.util.Collection getFragments() -> b
    84:84:java.util.Map getViewModelStores() -> c
androidx.fragment.app.FragmentManagerState -> a.m.b.k:
    int mNextFragmentIndex -> f
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mActive -> b
    androidx.fragment.app.BackStackState[] mBackStack -> d
    java.lang.String mPrimaryNavActiveWho -> e
    58:58:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    36:42:void <init>(android.os.Parcel) -> <init>
    46:46:int describeContents() -> describeContents
    51:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> a.m.b.k$a:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> a.m.b.l:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> i
    java.util.HashSet mRetainedFragments -> c
    boolean mStateAutomaticallySaved -> f
    boolean mHasBeenCleared -> g
    boolean mHasSavedSnapshot -> h
    java.util.HashMap mViewModelStores -> e
    java.util.HashMap mChildNonConfigs -> d
    40:40:void <clinit>() -> <clinit>
    82:84:void <init>(boolean) -> <init>
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> a
    99:99:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> a
    172:196:void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig) -> a
    88:92:void onCleared() -> b
    148:163:void clearNonConfigState(androidx.fragment.app.Fragment) -> b
    104:104:java.util.Collection getRetainedFragments() -> c
    129:134:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> c
    139:144:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> d
    205:222:androidx.fragment.app.FragmentManagerNonConfig getSnapshot() -> d
    95:95:boolean isCleared() -> e
    124:124:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> e
    230:231:boolean equals(java.lang.Object) -> equals
    108:119:boolean shouldDestroy(androidx.fragment.app.Fragment) -> f
    242:245:int hashCode() -> hashCode
    251:278:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> a.m.b.l$a:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.fragment.app.FragmentPagerAdapter -> a.m.b.m:
    androidx.fragment.app.Fragment mCurrentPrimaryItem -> h
    java.lang.String TAG -> i
    int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT -> l
    boolean DEBUG -> j
    int BEHAVIOR_SET_USER_VISIBLE_HINT -> k
    androidx.fragment.app.FragmentTransaction mCurTransaction -> g
    androidx.fragment.app.FragmentManager mFragmentManager -> e
    int mBehavior -> f
    118:119:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    134:137:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    157:184:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    189:200:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    234:238:void finishUpdate(android.view.ViewGroup) -> a
    242:242:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    253:253:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    269:269:java.lang.String makeFragmentName(int,long) -> a
    147:148:void startUpdate(android.view.ViewGroup) -> b
    205:230:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    androidx.fragment.app.Fragment getItem(int) -> c
    248:248:android.os.Parcelable saveState() -> c
    265:265:long getItemId(int) -> d
androidx.fragment.app.FragmentState -> a.m.b.n:
    java.lang.String mTag -> g
    int mMaxLifecycleState -> m
    boolean mRemoving -> i
    boolean mDetached -> j
    boolean mHidden -> l
    int mContainerId -> f
    androidx.fragment.app.Fragment mInstance -> o
    int mFragmentId -> e
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> n
    boolean mRetainInstance -> h
    java.lang.String mWho -> c
    java.lang.String mClassName -> b
    boolean mFromLayout -> d
    173:173:void <clinit>() -> <clinit>
    47:60:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:76:void <init>(android.os.Parcel) -> <init>
    80:113:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory) -> a
    153:153:int describeContents() -> describeContents
    119:148:java.lang.String toString() -> toString
    158:171:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> a.m.b.n$a:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    177:177:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:java.lang.Object[] newArray(int) -> newArray
    182:182:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> a.m.b.o:
    int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT -> n
    androidx.fragment.app.Fragment mCurrentPrimaryItem -> j
    int BEHAVIOR_SET_USER_VISIBLE_HINT -> m
    java.lang.String TAG -> k
    androidx.fragment.app.FragmentTransaction mCurTransaction -> g
    java.util.ArrayList mFragments -> i
    boolean DEBUG -> l
    androidx.fragment.app.FragmentManager mFragmentManager -> e
    java.util.ArrayList mSavedState -> h
    int mBehavior -> f
    124:125:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    140:143:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    167:201:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    206:224:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    258:262:void finishUpdate(android.view.ViewGroup) -> a
    266:266:boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    294:322:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    153:154:void startUpdate(android.view.ViewGroup) -> b
    229:254:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    androidx.fragment.app.Fragment getItem(int) -> c
    272:289:android.os.Parcelable saveState() -> c
androidx.fragment.app.FragmentTabHost -> a.m.b.p:
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> g
    boolean mAttached -> i
    androidx.fragment.app.FragmentManager mFragmentManager -> e
    int mContainerId -> f
    androidx.fragment.app.FragmentTabHost$TabInfo mLastTab -> h
    java.util.ArrayList mTabs -> b
    android.widget.FrameLayout mRealTabContent -> c
    android.content.Context mContext -> d
    137:139:void <init>(android.content.Context) -> <init>
    148:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    153:159:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    164:187:void ensureHierarchy(android.content.Context) -> a
    209:214:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> a
    226:239:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> a
    242:249:void ensureContent() -> a
    270:289:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    402:428:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> a
    433:439:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> a
    299:334:void onAttachedToWindow() -> onAttachedToWindow
    344:346:void onDetachedFromWindow() -> onDetachedFromWindow
    371:378:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:360:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:397:void onTabChanged(java.lang.String) -> onTabChanged
    259:260:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
androidx.fragment.app.FragmentTabHost$DummyTabFactory -> a.m.b.p$a:
    android.content.Context mContext -> a
    76:78:void <init>(android.content.Context) -> <init>
    82:85:android.view.View createTabContent(java.lang.String) -> createTabContent
androidx.fragment.app.FragmentTabHost$SavedState -> a.m.b.p$b:
    java.lang.String curTab -> b
    114:114:void <clinit>() -> <clinit>
    93:94:void <init>(android.os.Parcelable) -> <init>
    97:99:void <init>(android.os.Parcel) -> <init>
    109:109:java.lang.String toString() -> toString
    103:105:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> a.m.b.p$b$a:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> a.m.b.p$c:
    android.os.Bundle args -> c
    java.lang.String tag -> a
    java.lang.Class clss -> b
    androidx.fragment.app.Fragment fragment -> d
    66:70:void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
androidx.fragment.app.FragmentTransaction -> a.m.b.q:
    boolean mAllowAddToBackStack -> i
    java.lang.String mName -> j
    int TRANSIT_FRAGMENT_CLOSE -> I
    int mTransition -> f
    int TRANSIT_NONE -> G
    int mPopEnterAnim -> d
    int TRANSIT_EXIT_MASK -> E
    int mEnterAnim -> b
    boolean mReorderingAllowed -> q
    int OP_SET_MAX_LIFECYCLE -> C
    java.util.ArrayList mOps -> a
    int OP_SET_PRIMARY_NAV -> A
    java.util.ArrayList mSharedElementSourceNames -> o
    int OP_DETACH -> y
    int OP_HIDE -> w
    int OP_REPLACE -> u
    boolean mAddToBackStack -> h
    int OP_NULL -> s
    int mBreadCrumbShortTitleRes -> m
    int TRANSIT_FRAGMENT_FADE -> J
    int mBreadCrumbTitleRes -> k
    int TRANSIT_FRAGMENT_OPEN -> H
    int TRANSIT_UNSET -> F
    int mTransitionStyle -> g
    int TRANSIT_ENTER_MASK -> D
    int mPopExitAnim -> e
    int OP_UNSET_PRIMARY_NAV -> B
    int mExitAnim -> c
    java.lang.CharSequence mBreadCrumbTitleText -> l
    java.lang.CharSequence mBreadCrumbShortTitleText -> n
    int OP_ATTACH -> z
    int OP_SHOW -> x
    int OP_REMOVE -> v
    int OP_ADD -> t
    java.util.ArrayList mCommitRunnables -> r
    java.util.ArrayList mSharedElementTargetNames -> p
    48:108:void <init>() -> <init>
    113:118:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> a
    125:126:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> a
    134:135:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> a
    156:157:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> a
    161:165:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> a
    306:308:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> a
    350:351:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    403:403:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int) -> a
    427:431:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    448:468:androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> a
    505:506:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    573:575:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int) -> a
    585:587:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> a
    630:630:androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean) -> a
    656:661:androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> a
    200:200:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> b
    222:223:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> b
    289:291:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> b
    548:550:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int) -> b
    560:562:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> b
    620:621:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> b
    255:257:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> c
    478:479:androidx.fragment.app.FragmentTransaction setTransition(int) -> c
    239:241:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> d
    488:489:androidx.fragment.app.FragmentTransaction setTransitionStyle(int) -> d
    329:331:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> e
    int commit() -> f
    271:273:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> f
    int commitAllowingStateLoss() -> g
    void commitNow() -> h
    void commitNowAllowingStateLoss() -> i
    532:533:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> j
    522:522:boolean isAddToBackStackAllowed() -> k
    359:359:boolean isEmpty() -> l
androidx.fragment.app.FragmentTransaction$Op -> a.m.b.q$a:
    int mPopExitAnim -> f
    androidx.fragment.app.Fragment mFragment -> b
    int mExitAnim -> d
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> h
    int mPopEnterAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> g
    int mEnterAnim -> c
    int mCmd -> a
    72:73:void <init>() -> <init>
    75:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    82:87:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> a.m.b.r:
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    45:63:void <clinit>() -> <clinit>
    1265:1266:void <init>() -> <init>
    68:74:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> a
    107:143:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> a
    163:193:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> a
    279:292:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> a
    312:369:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> a
    394:417:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    425:465:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> a
    471:476:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> a
    493:494:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> a
    507:510:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> a
    648:654:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> a
    691:695:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> a
    840:844:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> a
    891:897:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> a
    913:922:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> a
    937:949:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> a
    958:964:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> a
    980:997:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> a
    1003:1018:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> a
    1026:1033:void setViewVisibility(java.util.ArrayList,int) -> a
    1042:1063:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> a
    1077:1082:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> a
    1125:1212:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> a
    1222:1226:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> a
    214:269:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> b
    520:523:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> b
    562:568:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> b
    784:786:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> b
    1094:1102:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> b
    1105:1105:boolean supportsTransition() -> b
androidx.fragment.app.FragmentTransition$1 -> a.m.b.r$a:
    java.util.ArrayList val$exitingViews -> b
    285:285:void <init>(java.util.ArrayList) -> <init>
    288:289:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> a.m.b.r$b:
    java.lang.Object val$exitTransition -> i
    androidx.fragment.app.FragmentTransitionImpl val$impl -> c
    java.util.ArrayList val$exitingViews -> h
    java.lang.Object val$enterTransition -> b
    java.util.ArrayList val$enteringViews -> g
    java.util.ArrayList val$sharedElementsIn -> f
    android.view.View val$nonExistentView -> d
    androidx.fragment.app.Fragment val$inFragment -> e
    394:394:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    397:415:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> a.m.b.r$c:
    androidx.collection.ArrayMap val$inSharedElements -> e
    androidx.fragment.app.FragmentTransitionImpl val$impl -> g
    android.graphics.Rect val$epicenter -> h
    androidx.fragment.app.Fragment val$inFragment -> b
    androidx.fragment.app.Fragment val$outFragment -> c
    boolean val$inIsPop -> d
    android.view.View val$epicenterView -> f
    624:624:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    627:632:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> a.m.b.r$d:
    androidx.fragment.app.Fragment val$inFragment -> h
    android.graphics.Rect val$inEpicenter -> m
    androidx.fragment.app.Fragment val$outFragment -> i
    androidx.fragment.app.FragmentTransitionImpl val$impl -> b
    java.util.ArrayList val$sharedElementsOut -> k
    boolean val$inIsPop -> j
    java.lang.Object val$finalSharedElementTransition -> d
    java.util.ArrayList val$sharedElementsIn -> f
    androidx.collection.ArrayMap val$nameOverrides -> c
    androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments -> e
    android.view.View val$nonExistentView -> g
    java.lang.Object val$enterTransition -> l
    736:736:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    739:761:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> a.m.b.r$e:
    androidx.fragment.app.BackStackRecord firstOutTransaction -> f
    boolean firstOutIsPop -> e
    androidx.fragment.app.Fragment lastIn -> a
    androidx.fragment.app.Fragment firstOut -> d
    boolean lastInIsPop -> b
    androidx.fragment.app.BackStackRecord lastInTransaction -> c
    1233:1233:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> a.m.b.s:
    32:32:void <init>() -> <init>
    36:36:boolean canHandle(java.lang.Object) -> a
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> a
    119:119:boolean hasSimpleTarget(android.transition.Transition) -> a
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    214:246:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    262:284:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    288:292:void addTarget(java.lang.Object,android.view.View) -> a
    304:316:void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> b
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    251:257:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
    296:300:void removeTarget(java.lang.Object,android.view.View) -> b
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> c
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> c
androidx.fragment.app.FragmentTransitionCompat21$1 -> a.m.b.s$a:
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> b
    android.graphics.Rect val$epicenter -> a
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> a.m.b.s$b:
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> c
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> a.m.b.s$c:
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    236:236:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:232:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    240:240:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    244:244:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> a.m.b.s$d:
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> b
    android.graphics.Rect val$epicenter -> a
    306:306:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    309:310:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> a.m.b.t:
    42:42:void <init>() -> <init>
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    boolean canHandle(java.lang.Object) -> a
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    79:82:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> a
    134:141:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> a
    153:182:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> a
    193:209:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> a
    216:230:void findNamedViews(java.util.Map,android.view.View) -> a
    237:251:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> a
    296:308:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> a
    315:333:void bfsAddViewChildren(java.util.List,android.view.View) -> a
    340:345:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> a
    352:352:boolean isNullOrEmpty(java.util.List) -> a
    360:365:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> b
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void removeTarget(java.lang.Object,android.view.View) -> b
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
    void setEpicenter(java.lang.Object,android.view.View) -> c
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> c
androidx.fragment.app.FragmentTransitionImpl$1 -> a.m.b.t$a:
    java.util.ArrayList val$outNames -> f
    androidx.fragment.app.FragmentTransitionImpl this$0 -> g
    java.util.ArrayList val$sharedElementsOut -> e
    java.util.ArrayList val$inNames -> d
    int val$numSharedElements -> b
    java.util.ArrayList val$sharedElementsIn -> c
    173:173:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    176:180:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> a.m.b.t$b:
    java.util.Map val$nameOverrides -> c
    androidx.fragment.app.FragmentTransitionImpl this$0 -> d
    java.util.ArrayList val$sharedElementsIn -> b
    237:237:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    240:249:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> a.m.b.t$c:
    java.util.Map val$nameOverrides -> c
    androidx.fragment.app.FragmentTransitionImpl this$0 -> d
    java.util.ArrayList val$sharedElementsIn -> b
    296:296:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    299:306:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> a.m.b.u:
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    24:25:void <init>() -> <init>
    51:52:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    31:34:void initialize() -> b
    40:40:boolean isInitialized() -> c
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.fragment.app.ListFragment -> a.m.b.v:
    int INTERNAL_PROGRESS_CONTAINER_ID -> n
    int INTERNAL_LIST_CONTAINER_ID -> o
    int INTERNAL_EMPTY_ID -> m
    boolean mListShown -> l
    java.lang.CharSequence mEmptyText -> k
    android.view.View mProgressContainer -> i
    java.lang.Runnable mRequestFocus -> c
    android.widget.ListAdapter mAdapter -> e
    android.view.View mListContainer -> j
    android.os.Handler mHandler -> b
    android.widget.TextView mStandardEmptyView -> h
    android.widget.ListView mList -> f
    android.view.View mEmptyView -> g
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> d
    76:77:void <init>() -> <init>
    179:179:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    185:195:void setListAdapter(android.widget.ListAdapter) -> a
    204:206:void setSelection(int) -> a
    239:241:void setEmptyText(java.lang.CharSequence) -> a
    265:266:void setListShown(boolean) -> a
    287:289:void setListShown(boolean,boolean) -> a
    273:274:void setListShownNoAnimation(boolean) -> b
    329:329:android.widget.ListAdapter getListAdapter() -> b
    229:230:android.widget.ListView getListView() -> c
    220:221:long getSelectedItemId() -> d
    212:213:int getSelectedItemPosition() -> e
    340:342:android.widget.ListAdapter requireListAdapter() -> f
    349:354:void ensureList() -> g
    97:142:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    159:165:void onDestroyView() -> onDestroyView
    150:152:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
androidx.fragment.app.ListFragment$1 -> a.m.b.v$a:
    androidx.fragment.app.ListFragment this$0 -> b
    52:52:void <init>(androidx.fragment.app.ListFragment) -> <init>
    55:56:void run() -> run
androidx.fragment.app.ListFragment$2 -> a.m.b.v$b:
    androidx.fragment.app.ListFragment this$0 -> b
    60:60:void <init>(androidx.fragment.app.ListFragment) -> <init>
    63:64:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.SuperNotCalledException -> a.m.b.w:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.R -> a.n.a:
    668:668:void <init>() -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> a.n.b.a.a:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> a.n.b.a.b:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> a.n.b.a.c:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> a.n.b.a.d:
    float mStepSize -> b
    float[] mValues -> a
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.AndroidViewModel -> a.o.a:
    android.app.Application mApplication -> c
    34:36:void <init>(android.app.Application) -> <init>
    45:45:android.app.Application getApplication() -> c
androidx.lifecycle.ClassesInfoCache -> a.o.b:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    int CALL_TYPE_PROVIDER_WITH_EVENT -> f
    int CALL_TYPE_NO_ARG -> d
    int CALL_TYPE_PROVIDER -> e
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    81:86:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> a
    91:102:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> a
    105:161:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> a
    45:65:boolean hasLifecycleMethods(java.lang.Class) -> b
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> c
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> a.o.b$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    169:181:void <init>(java.util.Map) -> <init>
    185:188:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
    192:197:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
androidx.lifecycle.ClassesInfoCache$MethodReference -> a.o.b$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    205:209:void <init>(int,java.lang.reflect.Method) -> <init>
    214:226:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
    234:238:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    24:26:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    30:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ComputableLiveData -> a.o.c:
    java.lang.Runnable mRefreshRunnable -> e
    androidx.lifecycle.LiveData mLiveData -> b
    java.util.concurrent.atomic.AtomicBoolean mComputing -> d
    java.util.concurrent.Executor mExecutor -> a
    java.util.concurrent.atomic.AtomicBoolean mInvalid -> c
    java.lang.Runnable mInvalidationRunnable -> f
    56:57:void <init>() -> <init>
    65:73:void <init>(java.util.concurrent.Executor) -> <init>
    java.lang.Object compute() -> a
    83:83:androidx.lifecycle.LiveData getLiveData() -> b
    143:144:void invalidate() -> c
androidx.lifecycle.ComputableLiveData$1 -> a.o.c$a:
    androidx.lifecycle.ComputableLiveData this$0 -> l
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:71:void onActive() -> e
androidx.lifecycle.ComputableLiveData$2 -> a.o.c$b:
    androidx.lifecycle.ComputableLiveData this$0 -> b
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    93:119:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> a.o.c$c:
    androidx.lifecycle.ComputableLiveData this$0 -> b
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:134:void run() -> run
androidx.lifecycle.FullLifecycleObserver -> a.o.d:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> b
    void onCreate(androidx.lifecycle.LifecycleOwner) -> c
    void onPause(androidx.lifecycle.LifecycleOwner) -> d
    void onStop(androidx.lifecycle.LifecycleOwner) -> e
    void onStart(androidx.lifecycle.LifecycleOwner) -> f
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    25:28:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    32:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
    32:32:void <clinit>() -> <clinit>
androidx.lifecycle.GeneratedAdapter -> a.o.e:
    void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger) -> a
androidx.lifecycle.GenericLifecycleObserver -> a.o.f:
androidx.lifecycle.Lifecycle -> a.o.g:
    java.util.concurrent.atomic.AtomicReference mInternalScopeRef -> a
    78:85:void <init>() -> <init>
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
    androidx.lifecycle.Lifecycle$State getCurrentState() -> a
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
androidx.lifecycle.Lifecycle$Event -> a.o.g$a:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> a.o.g$b:
    androidx.lifecycle.Lifecycle$State DESTROYED -> b
    androidx.lifecycle.Lifecycle$State[] $VALUES -> g
    androidx.lifecycle.Lifecycle$State RESUMED -> f
    androidx.lifecycle.Lifecycle$State STARTED -> e
    androidx.lifecycle.Lifecycle$State CREATED -> d
    androidx.lifecycle.Lifecycle$State INITIALIZED -> c
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> a
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleEventObserver -> a.o.h:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleObserver -> a.o.i:
androidx.lifecycle.LifecycleOwner -> a.o.j:
androidx.lifecycle.LifecycleRegistry -> a.o.k:
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> b
    androidx.lifecycle.Lifecycle$State mState -> c
    java.util.ArrayList mParentStates -> h
    java.lang.ref.WeakReference mLifecycleOwner -> d
    boolean mHandlingEvent -> f
    boolean mNewEventOccurred -> g
    int mAddingObserverCounter -> e
    94:97:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    108:109:void markState(androidx.lifecycle.Lifecycle$State) -> a
    130:132:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    169:199:void addObserver(androidx.lifecycle.LifecycleObserver) -> a
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> a
    307:320:void backwardPass(androidx.lifecycle.LifecycleOwner) -> a
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> a
    118:119:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> b
    223:224:void removeObserver(androidx.lifecycle.LifecycleObserver) -> b
    233:233:int getObserverCount() -> b
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> b
    292:304:void forwardPass(androidx.lifecycle.LifecycleOwner) -> b
    150:155:boolean isSynced() -> c
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> c
    261:263:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> c
    135:142:void moveToState(androidx.lifecycle.Lifecycle$State) -> d
    202:203:void popParentState() -> d
    206:207:void pushParentState(androidx.lifecycle.Lifecycle$State) -> e
    325:327:void sync() -> e
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> f
androidx.lifecycle.LifecycleRegistry$1 -> a.o.k$a:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$State -> b
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event -> a
    261:243:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> a.o.k$b:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    353:356:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:363:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleRegistryOwner -> a.o.l:
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    java.util.Map sCallbackCache -> c
    java.util.Map sClassToAdapters -> d
    int GENERATED_CALLBACK -> b
    int REFLECTIVE_CALLBACK -> a
    42:43:void <clinit>() -> <clinit>
    208:209:void <init>() -> <init>
    55:56:androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object) -> a
    104:106:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    117:133:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> a
    205:205:java.lang.String getAdapterName(java.lang.String) -> a
    67:97:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> b
    141:147:int getObserverConstructorType(java.lang.Class) -> b
    198:198:boolean isLifecycleParent(java.lang.Class) -> c
    152:194:int resolveObserverCallbackType(java.lang.Class) -> d
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    androidx.lifecycle.LifecycleEventObserver val$observer -> a
    56:56:void <init>(androidx.lifecycle.LifecycleEventObserver) -> <init>
    60:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    java.lang.Object NOT_SET -> k
    int START_VERSION -> j
    java.lang.Runnable mPostValueRunnable -> i
    java.lang.Object mData -> d
    java.lang.Object mPendingData -> e
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mVersion -> f
    boolean mDispatchingValue -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchInvalidated -> h
    int mActiveCount -> c
    64:64:void <clinit>() -> <clinit>
    59:429:void <init>() -> <init>
    118:137:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> a
    171:186:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> a
    204:215:void observeForever(androidx.lifecycle.Observer) -> a
    241:247:void removeObservers(androidx.lifecycle.LifecycleOwner) -> a
    266:269:void postValue(java.lang.Object) -> a
    301:306:java.lang.Object getValue() -> a
    442:443:void assertMainThread(java.lang.String) -> a
    96:114:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> b
    224:231:void removeObserver(androidx.lifecycle.Observer) -> b
    286:290:void setValue(java.lang.Object) -> b
    310:310:int getVersion() -> b
    353:353:boolean hasActiveObservers() -> c
    343:343:boolean hasObservers() -> d
    321:321:void onActive() -> e
    334:334:void onInactive() -> f
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$a:
    androidx.lifecycle.LiveData this$0 -> b
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:89:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$b:
    androidx.lifecycle.LiveData this$0 -> e
    431:433:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    437:437:boolean shouldBeActive() -> b
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> f
    androidx.lifecycle.LifecycleOwner mOwner -> e
    360:363:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    372:377:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    381:381:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> a
    386:387:void detachObserver() -> a
    367:367:boolean shouldBeActive() -> b
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$c:
    androidx.lifecycle.Observer mObserver -> a
    androidx.lifecycle.LiveData this$0 -> d
    boolean mActive -> b
    int mLastVersion -> c
    395:397:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    402:402:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> a
    406:406:void detachObserver() -> a
    409:426:void activeStateChanged(boolean) -> a
    boolean shouldBeActive() -> b
androidx.lifecycle.MediatorLiveData -> a.o.m:
    androidx.arch.core.internal.SafeIterableMap mSources -> l
    69:130:void <init>() -> <init>
    86:98:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> a
    108:112:void removeSource(androidx.lifecycle.LiveData) -> a
    117:120:void onActive() -> e
    125:128:void onInactive() -> f
androidx.lifecycle.MediatorLiveData$Source -> a.o.m$a:
    androidx.lifecycle.LiveData mLiveData -> a
    androidx.lifecycle.Observer mObserver -> b
    int mVersion -> c
    135:138:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    141:142:void plug() -> a
    150:154:void onChanged(java.lang.Object) -> a
    145:146:void unplug() -> b
androidx.lifecycle.MethodCallsLogger -> a.o.n:
    java.util.Map mCalledMethods -> a
    28:29:void <init>() -> <init>
    36:40:boolean approveCall(java.lang.String,int) -> a
androidx.lifecycle.MutableLiveData -> a.o.o:
    25:25:void <init>() -> <init>
    28:29:void postValue(java.lang.Object) -> a
    33:34:void setValue(java.lang.Object) -> b
androidx.lifecycle.Observer -> a.o.p:
    void onChanged(java.lang.Object) -> a
androidx.lifecycle.OnLifecycleEvent -> a.o.q:
androidx.lifecycle.R -> a.o.r:
    668:668:void <init>() -> <init>
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ReportFragment -> a.o.s:
    java.lang.String REPORT_FRAGMENT_TAG -> c
    androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener -> b
    32:32:void <init>() -> <init>
    48:48:androidx.lifecycle.ReportFragment get(android.app.Activity) -> a
    114:126:void dispatch(androidx.lifecycle.Lifecycle$Event) -> a
    129:130:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> a
    39:45:void injectIfNeededIn(android.app.Activity) -> b
    55:58:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> b
    67:70:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> c
    61:64:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> d
    74:77:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    107:111:void onDestroy() -> onDestroy
    95:97:void onPause() -> onPause
    88:91:void onResume() -> onResume
    81:84:void onStart() -> onStart
    101:103:void onStop() -> onStop
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> a.o.s$a:
    void onCreate() -> a
    void onResume() -> b
    void onStart() -> c
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    23:25:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    29:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.Transformations -> a.o.t:
    35:36:void <init>() -> <init>
    71:78:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> a
    135:159:androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> b
androidx.lifecycle.Transformations$1 -> a.o.t$a:
    androidx.arch.core.util.Function val$mapFunction -> b
    androidx.lifecycle.MediatorLiveData val$result -> a
    72:72:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    75:76:void onChanged(java.lang.Object) -> a
androidx.lifecycle.Transformations$2 -> a.o.t$b:
    androidx.lifecycle.LiveData mSource -> a
    androidx.lifecycle.MediatorLiveData val$result -> c
    androidx.arch.core.util.Function val$switchMapFunction -> b
    136:136:void <init>(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData) -> <init>
    141:157:void onChanged(java.lang.Object) -> a
androidx.lifecycle.Transformations$2$1 -> a.o.t$b$a:
    androidx.lifecycle.Transformations$2 this$0 -> a
    150:150:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    153:154:void onChanged(java.lang.Object) -> a
androidx.lifecycle.ViewModel -> a.o.u:
    java.util.Map mBagOfTags -> a
    boolean mCleared -> b
    108:112:void <init>() -> <init>
    126:140:void clear() -> a
    156:162:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> a
    179:181:java.lang.Object getTag(java.lang.String) -> a
    185:192:void closeWithRuntimeException(java.lang.Object) -> a
    122:122:void onCleared() -> b
androidx.lifecycle.ViewModelProvider -> a.o.v:
    androidx.lifecycle.ViewModelStore mViewModelStore -> b
    androidx.lifecycle.ViewModelProvider$Factory mFactory -> a
    java.lang.String DEFAULT_KEY -> c
    94:95:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    105:108:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    126:128:androidx.lifecycle.ViewModel get(java.lang.Class) -> a
    150:168:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> a.o.v$a:
    android.app.Application mApplication -> a
    androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance -> b
    220:222:void <init>(android.app.Application) -> <init>
    207:210:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> a
    227:241:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$Factory -> a.o.v$b:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$KeyedFactory -> a.o.v$c:
    60:60:void <init>() -> <init>
    androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> a
    76:76:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> a.o.v$d:
    174:174:void <init>() -> <init>
    182:184:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelStore -> a.o.w:
    java.util.HashMap mMap -> a
    38:40:void <init>() -> <init>
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> a
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> a
    61:65:void clear() -> a
    54:54:java.util.Set keys() -> b
androidx.lifecycle.ViewModelStoreOwner -> a.o.x:
androidx.lifecycle.livedata.R -> a.o.y.a:
    668:668:void <init>() -> <init>
androidx.lifecycle.livedata.core.R -> a.o.y.b.a:
    668:668:void <init>() -> <init>
androidx.lifecycle.viewmodel.R -> a.o.z.a:
    668:668:void <init>() -> <init>
androidx.loader.R -> a.p.a:
    668:668:void <init>() -> <init>
androidx.loader.R$attr -> a.p.a$a:
    455:455:void <init>() -> <init>
androidx.loader.R$color -> a.p.a$b:
    471:471:void <init>() -> <init>
androidx.loader.R$dimen -> a.p.a$c:
    750:750:void <init>() -> <init>
androidx.loader.R$drawable -> a.p.a$d:
    806:806:void <init>() -> <init>
androidx.loader.R$id -> a.p.a$e:
    785:785:void <init>() -> <init>
androidx.loader.R$integer -> a.p.a$f:
    388:388:void <init>() -> <init>
androidx.loader.R$layout -> a.p.a$g:
    476:476:void <init>() -> <init>
androidx.loader.R$string -> a.p.a$h:
    304:304:void <init>() -> <init>
androidx.loader.R$style -> a.p.a$i:
    384:384:void <init>() -> <init>
androidx.loader.R$styleable -> a.p.a$j:
    656:648:void <clinit>() -> <clinit>
    88:88:void <init>() -> <init>
androidx.loader.app.LoaderManager -> a.p.b.a:
    40:44:void <init>() -> <init>
    void destroyLoader(int) -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> a
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> a
    235:236:void enableDebugLogging(boolean) -> a
    242:242:boolean hasRunningLoaders() -> a
    androidx.loader.content.Loader getLoader(int) -> b
    void markForRedelivery() -> b
    androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> b
androidx.loader.app.LoaderManager$LoaderCallbacks -> a.p.b.a$a:
    androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(androidx.loader.content.Loader,java.lang.Object) -> a
    void onLoaderReset(androidx.loader.content.Loader) -> a
androidx.loader.app.LoaderManagerImpl -> a.p.b.b:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    java.lang.String TAG -> c
    boolean DEBUG -> d
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    382:398:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> a
    408:409:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> a
    453:454:void destroyLoader(int) -> a
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    503:503:boolean hasRunningLoaders() -> a
    433:434:androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> b
    471:472:androidx.loader.content.Loader getLoader(int) -> b
    481:482:void markForRedelivery() -> b
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> a.p.b.b$a:
    int mId -> l
    androidx.loader.content.Loader mLoader -> n
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> o
    androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver -> p
    android.os.Bundle mArgs -> m
    androidx.loader.content.Loader mPriorLoader -> q
    61:67:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    98:107:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> a
    149:167:androidx.loader.content.Loader destroy(boolean) -> a
    172:185:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> a
    212:224:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    134:138:void removeObserver(androidx.lifecycle.Observer) -> b
    189:195:void setValue(java.lang.Object) -> b
    76:78:void onActive() -> e
    82:84:void onInactive() -> f
    71:71:androidx.loader.content.Loader getLoader() -> g
    125:129:boolean isCallbackWaitingForData() -> h
    111:121:void markForRedelivery() -> i
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> a.p.b.b$b:
    androidx.loader.app.LoaderManager$LoaderCallbacks mCallback -> b
    boolean mDeliveredData -> c
    androidx.loader.content.Loader mLoader -> a
    239:242:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    246:252:void onChanged(java.lang.Object) -> a
    255:255:boolean hasDeliveredData() -> a
    272:274:void dump(java.lang.String,java.io.PrintWriter) -> a
    260:264:void reset() -> b
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> a.p.b.b$c:
    androidx.collection.SparseArrayCompat mLoaders -> c
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> e
    boolean mCreatingLoader -> d
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> a
    311:312:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> a
    316:316:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> a
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    320:321:void removeLoader(int) -> b
    344:351:void onCleared() -> b
    307:308:void finishCreatingLoader() -> c
    324:331:boolean hasRunningLoaders() -> d
    303:303:boolean isCreatingLoader() -> e
    335:340:void markForRedelivery() -> f
    299:300:void startCreatingLoader() -> g
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> a.p.b.b$c$a:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.loader.content.AsyncTaskLoader -> a.p.c.a:
    androidx.loader.content.AsyncTaskLoader$LoadTask mTask -> k
    androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask -> l
    android.os.Handler mHandler -> o
    java.lang.String TAG -> p
    boolean DEBUG -> q
    long mLastLoadCompleteTime -> n
    long mUpdateThrottle -> m
    java.util.concurrent.Executor mExecutor -> j
    128:129:void <init>(android.content.Context) -> <init>
    132:134:void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    307:307:java.lang.Object onLoadInBackground() -> A
    347:351:void waitForLoader() -> B
    144:148:void setUpdateThrottle(long) -> a
    233:243:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    356:373:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    246:261:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    207:207:void onCanceled(java.lang.Object) -> c
    162:196:boolean onCancelLoad() -> l
    152:157:void onForceLoad() -> n
    322:322:void cancelLoadInBackground() -> w
    210:230:void executePendingTask() -> x
    332:332:boolean isLoadInBackgroundCanceled() -> y
    java.lang.Object loadInBackground() -> z
androidx.loader.content.AsyncTaskLoader$LoadTask -> a.p.c.a$a:
    java.util.concurrent.CountDownLatch mDone -> r
    androidx.loader.content.AsyncTaskLoader this$0 -> t
    boolean waiting -> s
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> a
    60:71:java.lang.Object doInBackground(java.lang.Void[]) -> a
    94:96:void onCancelled(java.lang.Object) -> b
    83:85:void onPostExecute(java.lang.Object) -> c
    111:115:void waitForLoader() -> g
    104:106:void run() -> run
androidx.loader.content.CursorLoader -> a.p.c.b:
    java.lang.String mSortOrder -> w
    android.database.Cursor mCursor -> x
    java.lang.String[] mProjection -> t
    java.lang.String[] mSelectionArgs -> v
    androidx.loader.content.Loader$ForceLoadContentObserver mObserver -> r
    android.net.Uri mUri -> s
    java.lang.String mSelection -> u
    androidx.core.os.CancellationSignal mCancellationSignal -> y
    123:125:void <init>(android.content.Context) -> <init>
    136:143:void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    202:202:java.lang.String[] getProjection() -> C
    211:211:java.lang.String getSelection() -> D
    220:220:java.lang.String[] getSelectionArgs() -> E
    229:229:java.lang.String getSortOrder() -> F
    193:193:android.net.Uri getUri() -> G
    98:115:void deliverResult(android.database.Cursor) -> a
    197:198:void setUri(android.net.Uri) -> a
    206:207:void setProjection(java.lang.String[]) -> a
    215:216:void setSelection(java.lang.String) -> a
    239:249:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    41:41:void deliverResult(java.lang.Object) -> b
    173:176:void onCanceled(android.database.Cursor) -> b
    224:225:void setSelectionArgs(java.lang.String[]) -> b
    233:234:void setSortOrder(java.lang.String) -> b
    41:41:void onCanceled(java.lang.Object) -> c
    180:189:void onReset() -> o
    154:160:void onStartLoading() -> p
    168:169:void onStopLoading() -> q
    86:92:void cancelLoadInBackground() -> w
    41:41:java.lang.Object loadInBackground() -> z
    56:61:android.database.Cursor loadInBackground() -> z
androidx.loader.content.Loader -> a.p.c.c:
    androidx.loader.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mProcessingChange -> i
    boolean mStarted -> e
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> c
    boolean mAbandoned -> f
    boolean mReset -> g
    boolean mContentChanged -> h
    android.content.Context mContext -> d
    int mId -> a
    118:120:void <init>(android.content.Context) -> <init>
    173:174:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> a
    187:188:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> a
    207:208:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> a
    409:411:void abandon() -> a
    527:530:java.lang.String dataToString(java.lang.Object) -> a
    555:566:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    131:134:void deliverResult(java.lang.Object) -> b
    223:224:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> b
    318:318:boolean cancelLoad() -> b
    485:486:void commitContentChanged() -> c
    144:147:void deliverCancellation() -> d
    347:348:void forceLoad() -> e
    154:154:android.content.Context getContext() -> f
    161:161:int getId() -> g
    247:247:boolean isAbandoned() -> h
    256:256:boolean isReset() -> i
    238:238:boolean isStarted() -> j
    425:425:void onAbandon() -> k
    334:334:boolean onCancelLoad() -> l
    511:519:void onContentChanged() -> m
    356:356:void onForceLoad() -> n
    463:463:void onReset() -> o
    296:296:void onStartLoading() -> p
    392:392:void onStopLoading() -> q
    447:453:void reset() -> r
    496:499:void rollbackContentChanged() -> s
    282:286:void startLoading() -> t
    535:540:java.lang.String toString() -> toString
    380:382:void stopLoading() -> u
    471:474:boolean takeContentChanged() -> v
androidx.loader.content.Loader$ForceLoadContentObserver -> a.p.c.c$a:
    androidx.loader.content.Loader this$0 -> a
    58:60:void <init>(androidx.loader.content.Loader) -> <init>
    64:64:boolean deliverSelfNotifications() -> deliverSelfNotifications
    69:70:void onChange(boolean) -> onChange
androidx.loader.content.Loader$OnLoadCanceledListener -> a.p.c.c$b:
    void onLoadCanceled(androidx.loader.content.Loader) -> a
androidx.loader.content.Loader$OnLoadCompleteListener -> a.p.c.c$c:
    void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> a
androidx.loader.content.ModernAsyncTask -> a.p.c.d:
    java.lang.String LOG_TAG -> g
    int MESSAGE_POST_RESULT -> n
    androidx.loader.content.ModernAsyncTask$Status mStatus -> d
    int MESSAGE_POST_PROGRESS -> o
    int KEEP_ALIVE -> j
    int CORE_POOL_SIZE -> h
    int MAXIMUM_POOL_SIZE -> i
    java.util.concurrent.FutureTask mFuture -> c
    java.util.concurrent.ThreadFactory sThreadFactory -> k
    androidx.loader.content.ModernAsyncTask$InternalHandler sHandler -> p
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> m
    androidx.loader.content.ModernAsyncTask$WorkerRunnable mWorker -> b
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> f
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> e
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> l
    java.util.concurrent.Executor sDefaultExecutor -> q
    60:84:void <clinit>() -> <clinit>
    132:173:void <init>() -> <init>
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    126:127:void setDefaultExecutor(java.util.concurrent.Executor) -> a
    332:333:boolean cancel(boolean) -> a
    348:348:java.lang.Object get() -> a
    368:368:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> a
    433:454:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    462:463:void execute(java.lang.Runnable) -> a
    487:493:void finish(java.lang.Object) -> a
    195:195:androidx.loader.content.ModernAsyncTask$Status getStatus() -> b
    270:271:void onCancelled(java.lang.Object) -> b
    398:398:androidx.loader.content.ModernAsyncTask execute(java.lang.Object[]) -> b
    239:239:void onPostExecute(java.lang.Object) -> c
    252:252:void onProgressUpdate(java.lang.Object[]) -> c
    299:299:boolean isCancelled() -> c
    183:186:java.lang.Object postResult(java.lang.Object) -> d
    286:286:void onCancelled() -> d
    480:484:void publishProgress(java.lang.Object[]) -> d
    176:180:void postResultIfNotInvoked(java.lang.Object) -> e
    223:223:void onPreExecute() -> e
    115:120:android.os.Handler getHandler() -> f
androidx.loader.content.ModernAsyncTask$1 -> a.p.c.d$a:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> a.p.c.d$b:
    androidx.loader.content.ModernAsyncTask this$0 -> b
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:147:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> a.p.c.d$c:
    androidx.loader.content.ModernAsyncTask this$0 -> b
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:171:void done() -> done
androidx.loader.content.ModernAsyncTask$4 -> a.p.c.d$d:
    int[] $SwitchMap$androidx$loader$content$ModernAsyncTask$Status -> a
    434:434:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> a.p.c.d$e:
    java.lang.Object[] mData -> b
    androidx.loader.content.ModernAsyncTask mTask -> a
    528:531:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> a.p.c.d$f:
    497:498:void <init>() -> <init>
    503:513:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> a.p.c.d$g:
    androidx.loader.content.ModernAsyncTask$Status FINISHED -> d
    androidx.loader.content.ModernAsyncTask$Status PENDING -> b
    androidx.loader.content.ModernAsyncTask$Status RUNNING -> c
    androidx.loader.content.ModernAsyncTask$Status[] $VALUES -> e
    103:99:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> a.p.c.d$h:
    java.lang.Object[] mParams -> a
    519:520:void <init>() -> <init>
androidx.recyclerview.R -> a.q.a:
    668:668:void <init>() -> <init>
androidx.recyclerview.R$attr -> a.q.a$a:
    455:455:void <init>() -> <init>
androidx.recyclerview.R$color -> a.q.a$b:
    578:578:void <init>() -> <init>
androidx.recyclerview.R$dimen -> a.q.a$c:
    150:150:void <init>() -> <init>
androidx.recyclerview.R$drawable -> a.q.a$d:
    785:785:void <init>() -> <init>
androidx.recyclerview.R$id -> a.q.a$e:
    818:818:void <init>() -> <init>
androidx.recyclerview.R$integer -> a.q.a$f:
    634:634:void <init>() -> <init>
androidx.recyclerview.R$layout -> a.q.a$g:
    18:18:void <init>() -> <init>
androidx.recyclerview.R$string -> a.q.a$h:
    166:166:void <init>() -> <init>
androidx.recyclerview.R$style -> a.q.a$i:
    405:405:void <init>() -> <init>
androidx.recyclerview.R$styleable -> a.q.a$j:
    724:217:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
androidx.recyclerview.widget.AdapterHelper -> a.q.b.a:
    java.lang.Runnable mOnItemProcessedCallback -> e
    int POSITION_TYPE_NEW_OR_LAID_OUT -> j
    boolean DEBUG -> k
    int mExistingUpdateTypes -> h
    int POSITION_TYPE_INVISIBLE -> i
    java.lang.String TAG -> l
    androidx.recyclerview.widget.AdapterHelper$Callback mCallback -> d
    boolean mDisableRecycler -> f
    androidx.core.util.Pools$Pool mUpdateOpPool -> a
    androidx.recyclerview.widget.OpReorderer mOpReorderer -> g
    java.util.ArrayList mPostponedList -> c
    java.util.ArrayList mPendingUpdates -> b
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    75:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    82:83:androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[]) -> a
    119:125:void consumePostponedUpdates() -> a
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> a
    472:497:int findPositionOffset(int,int) -> a
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> a
    540:544:boolean onItemRangeMoved(int,int,int) -> a
    588:620:int applyPendingUpdatesToPosition(int) -> a
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> a
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    468:468:int findPositionOffset(int) -> b
    516:521:boolean onItemRangeInserted(int,int) -> b
    557:585:void consumeUpdatesInOnePass() -> b
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    460:460:boolean hasPendingUpdates() -> c
    464:464:boolean hasAnyUpdateTypes(int) -> c
    528:533:boolean onItemRangeRemoved(int,int) -> c
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> d
    330:407:int updatePositionWithPostponed(int,int) -> d
    411:428:boolean canFindInPreLayout(int) -> d
    624:624:boolean hasUpdates() -> d
    93:116:void preProcess() -> e
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> e
    87:90:void reset() -> f
    231:232:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> f
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> g
androidx.recyclerview.widget.AdapterHelper$Callback -> a.q.b.a$a:
    androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    void offsetPositionsForMove(int,int) -> a
    void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> b
    void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> c
    void offsetPositionsForAdd(int,int) -> d
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> a.q.b.a$b:
    int MOVE -> h
    int POOL_SIZE -> i
    int REMOVE -> f
    int UPDATE -> g
    java.lang.Object payload -> c
    int itemCount -> d
    int ADD -> e
    int positionStart -> b
    int cmd -> a
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:661:java.lang.String cmdToString() -> a
    681:685:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:674:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> a.q.b.b:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> b
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    48:49:void onRemoved(int,int) -> a
    60:61:void onChanged(int,int,java.lang.Object) -> a
    42:43:void onInserted(int,int) -> b
    54:55:void onMoved(int,int) -> c
androidx.recyclerview.widget.AsyncDifferConfig -> a.q.b.c:
    java.util.concurrent.Executor mMainThreadExecutor -> a
    java.util.concurrent.Executor mBackgroundThreadExecutor -> b
    androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback -> c
    47:51:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> a
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> b
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> c
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> a.q.b.c$a:
    java.lang.Object sExecutorLock -> d
    java.util.concurrent.Executor mMainThreadExecutor -> a
    java.util.concurrent.Executor mBackgroundThreadExecutor -> b
    java.util.concurrent.Executor sDiffExecutor -> e
    androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback -> c
    144:145:void <clinit>() -> <clinit>
    84:86:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    118:119:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> a
    129:137:androidx.recyclerview.widget.AsyncDifferConfig build() -> a
    102:103:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> b
androidx.recyclerview.widget.AsyncListDiffer -> a.q.b.d:
    androidx.recyclerview.widget.AsyncDifferConfig mConfig -> b
    java.util.List mReadOnlyList -> f
    androidx.recyclerview.widget.ListUpdateCallback mUpdateCallback -> a
    java.util.List mList -> e
    java.util.List mListeners -> d
    java.util.concurrent.Executor mMainThreadExecutor -> c
    int mMaxScheduledGeneration -> g
    java.util.concurrent.Executor sMainThreadExecutor -> h
    131:131:void <clinit>() -> <clinit>
    162:164:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    178:186:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    216:216:java.util.List getCurrentList() -> a
    231:232:void submitList(java.util.List) -> a
    254:357:void submitList(java.util.List,java.lang.Runnable) -> a
    364:370:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> a
    392:393:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> a
    375:381:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> b
    403:404:void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> b
androidx.recyclerview.widget.AsyncListDiffer$1 -> a.q.b.d$a:
    java.util.List val$oldList -> b
    java.lang.Runnable val$commitCallback -> e
    java.util.List val$newList -> c
    int val$runGeneration -> d
    androidx.recyclerview.widget.AsyncListDiffer this$0 -> f
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:355:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> a.q.b.d$a$a:
    androidx.recyclerview.widget.AsyncListDiffer$1 this$1 -> a
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    300:300:int getNewListSize() -> a
    316:328:boolean areContentsTheSame(int,int) -> a
    295:295:int getOldListSize() -> b
    305:311:boolean areItemsTheSame(int,int) -> b
    334:343:java.lang.Object getChangePayload(int,int) -> c
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> a.q.b.d$a$b:
    androidx.recyclerview.widget.DiffUtil$DiffResult val$result -> b
    androidx.recyclerview.widget.AsyncListDiffer$1 this$1 -> c
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:353:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$ListListener -> a.q.b.d$b:
    void onCurrentListChanged(java.util.List,java.util.List) -> a
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> a.q.b.d$c:
    android.os.Handler mHandler -> a
    123:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> a.q.b.e:
    int mDisplayedGeneration -> n
    int mRequestedGeneration -> o
    int mScrollHint -> l
    int mItemCount -> m
    androidx.recyclerview.widget.TileList mTileList -> e
    androidx.recyclerview.widget.AsyncListUtil$ViewCallback mViewCallback -> d
    androidx.recyclerview.widget.AsyncListUtil$DataCallback mDataCallback -> c
    boolean mAllowScrollHints -> k
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadProxy -> f
    java.lang.String TAG -> s
    int mTileSize -> b
    boolean DEBUG -> t
    int[] mTmpRange -> h
    int[] mPrevRange -> i
    android.util.SparseIntArray mMissingPositions -> p
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundCallback -> r
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadCallback -> q
    int[] mTmpRangeExtended -> j
    java.lang.Class mTClass -> a
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundProxy -> g
    91:104:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    79:80:void log(java.lang.String,java.lang.Object[]) -> a
    155:156:java.lang.Object getItem(int) -> a
    175:175:int getItemCount() -> a
    119:124:void onRangeChanged() -> b
    133:135:void refresh() -> c
    179:181:void updateRange() -> d
    107:107:boolean isRefreshPending() -> e
androidx.recyclerview.widget.AsyncListUtil$1 -> a.q.b.e$a:
    androidx.recyclerview.widget.AsyncListUtil this$0 -> a
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    218:229:void updateItemCount(int,int) -> a
    233:260:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> a
    282:286:void recycleAllTiles() -> a
    289:289:boolean isRequestedGeneration(int) -> a
    264:276:void removeTile(int,int) -> b
androidx.recyclerview.widget.AsyncListUtil$2 -> a.q.b.e$b:
    android.util.SparseBooleanArray mLoadedTiles -> b
    int mLastRequiredTileStart -> f
    androidx.recyclerview.widget.TileList$Tile mRecycledRoot -> a
    int mItemCount -> d
    int mFirstRequiredTileStart -> e
    androidx.recyclerview.widget.AsyncListUtil this$0 -> g
    int mGeneration -> c
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    308:312:void refresh(int) -> a
    322:347:void updateRange(int,int,int,int,int) -> a
    355:362:void requestTiles(int,int,int,boolean) -> a
    366:378:void loadTile(int,int) -> a
    385:389:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> a
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> a
    441:442:void log(java.lang.String,java.lang.Object[]) -> a
    405:410:void addTile(androidx.recyclerview.widget.TileList$Tile) -> b
    421:438:void flushTileCache(int) -> b
    350:350:int getTileStart(int) -> c
    401:401:boolean isTileLoaded(int) -> d
    413:418:void removeTile(int) -> e
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> a.q.b.e$c:
    451:451:void <init>() -> <init>
    void fillData(java.lang.Object[],int,int) -> a
    489:489:void recycleData(java.lang.Object[],int) -> a
    511:511:int getMaxCachedTiles() -> a
    int refreshData() -> b
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> a.q.b.e$d:
    int HINT_SCROLL_DESC -> b
    int HINT_SCROLL_ASC -> c
    int HINT_SCROLL_NONE -> a
    521:521:void <init>() -> <init>
    void getItemRangeInto(int[]) -> a
    void onDataRefresh() -> a
    void onItemLoaded(int) -> a
    577:581:void extendRangeInto(int[],int[],int) -> a
androidx.recyclerview.widget.BatchingListUpdateCallback -> a.q.b.f:
    int TYPE_CHANGE -> j
    java.lang.Object mLastEventPayload -> f
    int TYPE_ADD -> h
    int TYPE_REMOVE -> i
    int TYPE_NONE -> g
    androidx.recyclerview.widget.ListUpdateCallback mWrapped -> b
    int mLastEventPosition -> d
    int mLastEventCount -> e
    int mLastEventType -> c
    46:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> a
    90:100:void onRemoved(int,int) -> a
    110:124:void onChanged(int,int,java.lang.Object) -> a
    76:86:void onInserted(int,int) -> b
    104:106:void onMoved(int,int) -> c
androidx.recyclerview.widget.ChildHelper -> a.q.b.g:
    androidx.recyclerview.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    androidx.recyclerview.widget.ChildHelper$Callback mCallback -> a
    java.lang.String TAG -> e
    boolean DEBUG -> d
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> a
    98:111:void addView(android.view.View,int,boolean) -> a
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> a
    253:253:int getChildCount() -> a
    282:288:void detachViewFromParent(int) -> a
    328:330:void hide(android.view.View) -> a
    206:216:android.view.View findHiddenNonRemovedView(int) -> b
    263:263:int getUnfilteredChildCount() -> b
    297:309:int indexOfChild(android.view.View) -> b
    180:181:android.view.View getChildAt(int) -> c
    188:197:void removeAllViewsUnfiltered() -> c
    319:319:boolean isHidden(android.view.View) -> c
    140:151:void removeView(android.view.View) -> d
    273:273:android.view.View getUnfilteredChildAt(int) -> d
    160:172:void removeViewAt(int) -> e
    373:389:boolean removeViewIfHidden(android.view.View) -> e
    114:131:int getOffset(int) -> f
    350:352:void unhide(android.view.View) -> f
    60:62:void hideViewInternal(android.view.View) -> g
    70:74:boolean unhideViewInternal(android.view.View) -> h
    363:363:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Bucket -> a.q.b.g$a:
    androidx.recyclerview.widget.ChildHelper$Bucket mNext -> b
    long mData -> a
    long LAST_BIT -> d
    int BITS_PER_WORD -> c
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> a
    441:445:void reset() -> a
    448:467:void insert(int,boolean) -> a
    415:418:void ensureNext() -> b
    493:502:int countOnesBefore(int) -> b
    432:436:boolean get(int) -> c
    470:488:boolean remove(int) -> d
    406:412:void set(int) -> e
    508:508:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Callback -> a.q.b.g$b:
    void addView(android.view.View,int) -> a
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    android.view.View getChildAt(int) -> a
    void onEnteredHiddenState(android.view.View) -> a
    void removeAllViews() -> a
    int getChildCount() -> b
    androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void removeViewAt(int) -> b
    void detachViewFromParent(int) -> c
    void onLeftHiddenState(android.view.View) -> c
    int indexOfChild(android.view.View) -> d
androidx.recyclerview.widget.DefaultItemAnimator -> a.q.b.h:
    android.animation.TimeInterpolator sDefaultInterpolator -> A
    java.util.ArrayList mChangeAnimations -> y
    java.util.ArrayList mRemoveAnimations -> x
    java.util.ArrayList mPendingRemovals -> o
    boolean DEBUG -> z
    java.util.ArrayList mMoveAnimations -> w
    java.util.ArrayList mAddAnimations -> v
    java.util.ArrayList mChangesList -> u
    java.util.ArrayList mMovesList -> t
    java.util.ArrayList mAdditionsList -> s
    java.util.ArrayList mPendingChanges -> r
    java.util.ArrayList mPendingMoves -> q
    java.util.ArrayList mPendingAdditions -> p
    38:55:void <init>() -> <init>
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> a
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    419:426:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    641:644:void cancelAll(java.util.List) -> a
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> a
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> b
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> b
    557:638:void endAnimations() -> b
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    531:531:boolean isRunning() -> g
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
    102:189:void runPendingAnimations() -> i
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> i
    550:553:void dispatchFinishedWhenDone() -> k
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> v
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> w
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> x
androidx.recyclerview.widget.DefaultItemAnimator$1 -> a.q.b.h$a:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> c
    java.util.ArrayList val$moves -> b
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> a.q.b.h$b:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> c
    java.util.ArrayList val$changes -> b
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> a.q.b.h$c:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> c
    java.util.ArrayList val$additions -> b
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> a.q.b.h$d:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> b
    android.view.View val$view -> c
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> a.q.b.h$e:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> c
    android.view.View val$view -> b
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> a.q.b.h$f:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> e
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> f
    android.view.View val$view -> c
    int val$deltaY -> d
    int val$deltaX -> b
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> a.q.b.h$g:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$oldViewAnim -> b
    android.view.View val$view -> c
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> a.q.b.h$h:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$newViewAnimation -> b
    android.view.View val$newView -> c
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> a.q.b.h$i:
    androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder -> b
    int toY -> f
    int fromY -> d
    int toX -> e
    int fromX -> c
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> a.q.b.h$j:
    androidx.recyclerview.widget.RecyclerView$ViewHolder holder -> a
    int toX -> d
    int toY -> e
    int fromX -> b
    int fromY -> c
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> a.q.b.i:
    java.util.Comparator SNAKE_COMPARATOR -> a
    84:84:void <clinit>() -> <clinit>
    80:82:void <init>() -> <init>
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> a
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> a
    204:208:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> a
androidx.recyclerview.widget.DiffUtil$1 -> a.q.b.i$a:
    84:84:void <init>() -> <init>
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> a
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> a.q.b.i$b:
    295:295:void <init>() -> <init>
    boolean areContentsTheSame(int,int) -> a
    int getNewListSize() -> a
    boolean areItemsTheSame(int,int) -> b
    int getOldListSize() -> b
    360:360:java.lang.Object getChangePayload(int,int) -> c
androidx.recyclerview.widget.DiffUtil$DiffResult -> a.q.b.i$c:
    int FLAG_OFFSET -> n
    int FLAG_MASK -> o
    int FLAG_MOVED_NOT_CHANGED -> l
    int FLAG_IGNORE -> m
    int FLAG_CHANGED -> j
    int FLAG_MOVED_CHANGED -> k
    int NO_POSITION -> h
    int FLAG_NOT_CHANGED -> i
    int mNewListSize -> f
    int mOldListSize -> e
    java.util.List mSnakes -> a
    int[] mOldItemStatuses -> b
    int[] mNewItemStatuses -> c
    androidx.recyclerview.widget.DiffUtil$Callback mCallback -> d
    boolean mDetectMoves -> g
    567:579:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    646:650:void findAddition(int,int,int) -> a
    695:696:int convertNewPositionToOld(int) -> a
    723:766:boolean findMatchingItem(int,int,int,boolean) -> a
    802:803:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    816:853:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> a
    857:868:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> a
    873:909:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> a
    954:954:java.util.List getSnakes() -> a
    586:596:void addRootSnake() -> b
    653:657:void findRemoval(int,int,int) -> b
    671:672:int convertOldPositionToNew(int) -> b
    913:950:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> b
    610:643:void findMatchingItems() -> c
androidx.recyclerview.widget.DiffUtil$ItemCallback -> a.q.b.i$d:
    373:373:void <init>() -> <init>
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> a
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> b
    434:434:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> c
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> a.q.b.i$e:
    int currentPos -> b
    boolean removal -> c
    int posInOwnerList -> a
    973:977:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> a.q.b.i$f:
    int newListEnd -> d
    int oldListEnd -> b
    int newListStart -> c
    int oldListStart -> a
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> a.q.b.i$g:
    boolean reverse -> e
    int y -> b
    int size -> c
    int x -> a
    boolean removal -> d
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.DividerItemDecoration -> a.q.b.j:
    java.lang.String TAG -> f
    int[] ATTRS -> g
    int HORIZONTAL -> d
    int VERTICAL -> e
    int mOrientation -> b
    android.graphics.Rect mBounds -> c
    android.graphics.drawable.Drawable mDivider -> a
    48:48:void <clinit>() -> <clinit>
    66:75:void <init>(android.content.Context,int) -> <init>
    84:89:void setOrientation(int) -> a
    97:98:void setDrawable(android.graphics.drawable.Drawable) -> a
    108:108:android.graphics.drawable.Drawable getDrawable() -> a
    151:175:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> a
    124:148:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> b
    180:189:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    113:114:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
androidx.recyclerview.widget.FastScroller -> a.q.b.k:
    int mHorizontalThumbWidth -> n
    int HIDE_DELAY_AFTER_VISIBLE_MS -> O
    int mVerticalThumbCenterY -> l
    int ANIMATION_STATE_FADING_OUT -> M
    int[] mHorizontalRange -> y
    int mHorizontalTrackHeight -> j
    int ANIMATION_STATE_FADING_IN -> K
    int[] EMPTY_STATE_SET -> T
    int DRAG_Y -> I
    int mVerticalTrackWidth -> f
    boolean mNeedHorizontalScrollbar -> u
    int DRAG_NONE -> G
    int STATE_VISIBLE -> E
    int mMargin -> b
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener -> C
    int mAnimationState -> A
    java.lang.Runnable mHideRunnable -> B
    int mDragState -> w
    int SCROLLBAR_FULL_OPAQUE -> R
    int HIDE_DELAY_AFTER_DRAGGING_MS -> P
    float mVerticalDragY -> m
    int mRecyclerViewWidth -> q
    int SHOW_DURATION_MS -> N
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> d
    int mHorizontalThumbCenterX -> o
    int ANIMATION_STATE_IN -> L
    int[] mVerticalRange -> x
    int ANIMATION_STATE_OUT -> J
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> s
    int[] PRESSED_STATE_SET -> S
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> h
    int mVerticalThumbHeight -> k
    android.animation.ValueAnimator mShowHideAnimator -> z
    int DRAG_X -> H
    int mHorizontalThumbHeight -> i
    int STATE_DRAGGING -> F
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> c
    int STATE_HIDDEN -> D
    int mVerticalThumbWidth -> e
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> g
    int mScrollbarMinimumRange -> a
    boolean mNeedVerticalScrollbar -> t
    int mState -> v
    float mHorizontalDragX -> p
    int mRecyclerViewHeight -> r
    int HIDE_DURATION_MS -> Q
    74:75:void <clinit>() -> <clinit>
    141:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    244:255:void hide(int) -> a
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> a
    339:375:void updateScrollPosition(int,int) -> a
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> a
    461:475:void horizontalScrollTo(float) -> a
    479:490:int scrollTo(float,float,int[],int,int,int) -> a
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> a
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> a
    195:213:void setState(int) -> b
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> b
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
    446:458:void verticalScrollTo(float) -> b
    496:496:boolean isPointInsideVerticalThumb(float,float) -> b
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> b
    262:264:void resetHideDelay(int) -> c
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> c
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> d
    220:220:boolean isDragging() -> e
    224:224:boolean isVisible() -> f
    191:192:void requestRedraw() -> g
    228:240:void show() -> h
    258:259:void cancelHide() -> i
    183:187:void destroyCallbacks() -> j
    542:544:int[] getHorizontalRange() -> k
    533:535:int[] getVerticalRange() -> l
    216:216:boolean isLayoutRTL() -> m
    177:180:void setupCallbacks() -> n
    268:277:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.FastScroller$1 -> a.q.b.k$a:
    androidx.recyclerview.widget.FastScroller this$0 -> b
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> a.q.b.k$b:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> a.q.b.k$c:
    androidx.recyclerview.widget.FastScroller this$0 -> b
    boolean mCanceled -> a
    551:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> a.q.b.k$d:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> a.q.b.l:
    java.util.Comparator sTaskComparator -> g
    java.lang.ThreadLocal sGapWorker -> f
    long mFrameIntervalNs -> d
    java.util.ArrayList mTasks -> e
    long mPostTimeNs -> c
    java.util.ArrayList mRecyclerViews -> b
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> a
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    217:262:void buildTaskList() -> a
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> a
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> a
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> a
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> a
    367:369:void prefetch(long) -> a
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> b
    356:364:void flushTasksWithDeadline(long) -> b
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> a.q.b.l$a:
    190:190:void <init>() -> <init>
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> a
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> a.q.b.l$b:
    int[] mPrefetchArray -> c
    int mCount -> d
    int mPrefetchDy -> b
    int mPrefetchDx -> a
    65:65:void <init>() -> <init>
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> a
    112:113:void addPosition(int,int) -> a
    139:145:boolean lastPrefetchIncludedPosition(int) -> a
    152:156:void clearPrefetchPositions() -> a
    74:76:void setPrefetchVector(int,int) -> b
androidx.recyclerview.widget.GapWorker$Task -> a.q.b.l$c:
    androidx.recyclerview.widget.RecyclerView view -> d
    int position -> e
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
    38:38:void <init>() -> <init>
    46:51:void clear() -> a
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> e
    int DEFAULT_SPAN_COUNT -> l
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> f
    android.view.View[] mSet -> d
    java.lang.String TAG -> k
    androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> g
    boolean mUsingSpansToEstimateScrollBarDimensions -> i
    boolean DEBUG -> j
    int[] mCachedBorders -> c
    android.graphics.Rect mDecorInsets -> h
    boolean mPendingSpanCountChange -> a
    int mSpanCount -> b
    73:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    85:87:void <init>(android.content.Context,int) -> <init>
    98:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    266:267:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> a
    325:344:int[] calculateItemBorders(int[],int,int) -> a
    348:352:int getSpaceForSpanRange(int,int) -> a
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    716:737:void measureChild(android.view.View,int,boolean) -> a
    750:753:void guessMeasurement(float,int) -> a
    757:767:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    775:792:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> a
    801:801:int getSpanCount() -> a
    814:819:void setSpanCount(int) -> a
    1255:1256:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> a
    1304:1305:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> a
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> b
    314:315:void calculateItemBorders(int) -> b
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> b
    1271:1272:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> b
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> c
    1267:1267:boolean isUsingSpansToEstimateScrollbarDimensions() -> c
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    515:525:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    189:196:void cachePreLayoutSpanMapping() -> d
    184:186:void clearPreLayoutSpanMappingCache() -> e
    368:371:void ensureViewSet() -> f
    421:450:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    280:286:void updateMeasurements() -> g
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    530:704:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1068:1185:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    108:109:void setStackFromEnd(boolean) -> setStackFromEnd
    1190:1190:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$a:
    1348:1348:void <init>() -> <init>
    1352:1352:int getSpanSize(int) -> a
    1357:1357:int getSpanIndex(int,int) -> d
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$b:
    int mSpanSize -> f
    int INVALID_SPAN_ID -> g
    int mSpanIndex -> e
    1380:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1384:1385:void <init>(int,int) -> <init>
    1388:1389:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1392:1393:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1396:1397:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> h
    1424:1424:int getSpanSize() -> i
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$c:
    android.util.SparseIntArray mSpanIndexCache -> a
    android.util.SparseIntArray mSpanGroupIndexCache -> b
    boolean mCacheSpanIndices -> c
    boolean mCacheSpanGroupIndices -> d
    834:840:void <init>() -> <init>
    int getSpanSize(int) -> a
    876:880:void setSpanGroupIndexCacheEnabled(boolean) -> a
    895:896:void invalidateSpanGroupIndexCache() -> a
    930:939:int getCachedSpanGroupIndex(int,int) -> a
    997:1015:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> a
    859:863:void setSpanIndexCacheEnabled(boolean) -> b
    887:888:void invalidateSpanIndexCache() -> b
    917:926:int getCachedSpanIndex(int,int) -> b
    913:913:boolean isSpanGroupIndexCacheEnabled() -> c
    1029:1061:int getSpanGroupIndex(int,int) -> c
    904:904:boolean isSpanIndexCacheEnabled() -> d
    966:993:int getSpanIndex(int,int) -> d
androidx.recyclerview.widget.ItemTouchHelper -> a.q.b.m:
    int ANIMATION_TYPE_SWIPE_CANCEL -> O
    float mSelectedStartY -> k
    android.view.View mOverdrawChild -> x
    int mActivePointerId -> l
    java.util.List mRecoverAnimations -> p
    int ACTION_STATE_IDLE -> K
    float mMaxSwipeVelocity -> g
    androidx.recyclerview.widget.ItemTouchHelper$Callback mCallback -> m
    int LEFT -> G
    java.lang.String TAG -> Q
    long mDragScrollStartTimeInMs -> D
    int PIXELS_PER_SECOND -> X
    int mOverdrawChildPosition -> y
    int DIRECTION_FLAG_COUNT -> T
    int ANIMATION_TYPE_DRAG -> P
    int mSlop -> q
    int ACTION_STATE_SWIPE -> L
    java.lang.Runnable mScrollRunnable -> s
    float mDx -> h
    int RIGHT -> H
    float mInitialTouchX -> d
    android.graphics.Rect mTmpRect -> C
    androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener mItemTouchHelperGestureListener -> A
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> w
    int ACTION_MODE_IDLE_MASK -> U
    int mActionState -> n
    int ACTION_STATE_DRAG -> M
    float mDy -> i
    java.util.List mDistances -> v
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> r
    int START -> I
    float mInitialTouchY -> e
    int UP -> E
    androidx.core.view.GestureDetectorCompat mGestureDetector -> z
    boolean DEBUG -> R
    float[] mTmpPosition -> b
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> B
    androidx.recyclerview.widget.RecyclerView$ViewHolder mSelected -> c
    int ACTION_MODE_SWIPE_MASK -> V
    android.view.VelocityTracker mVelocityTracker -> t
    int ANIMATION_TYPE_SWIPE_SUCCESS -> N
    int mSelectedFlags -> o
    float mSelectedStartX -> j
    int END -> J
    java.util.List mSwapTargets -> u
    float mSwipeEscapeVelocity -> f
    int DOWN -> F
    java.util.List mPendingCleanup -> a
    int ACTION_MODE_DRAG_MASK -> W
    int ACTIVE_POINTER_ID_NONE -> S
    446:448:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    451:451:boolean hitTest(android.view.View,float,float,float,float) -> a
    467:482:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    527:537:void getSelectedDxDy(float[]) -> a
    574:695:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    700:719:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> a
    723:729:boolean hasRunningRecoverAnim() -> a
    853:886:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    890:890:void onChildViewAttachedToWindow(android.view.View) -> a
    914:926:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    980:982:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> a
    1155:1165:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> a
    1170:1188:void updateDxDy(android.view.MotionEvent,int,int) -> a
    894:907:void onChildViewDetachedFromWindow(android.view.View) -> b
    936:940:void obtainVelocityTracker() -> b
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> b
    1092:1104:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1237:1260:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    737:793:boolean scrollIfNecessary() -> c
    950:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> c
    1139:1151:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    1264:1286:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> c
    1317:1324:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> c
    800:845:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    1290:1313:void addChildDrawingOrderCallback() -> d
    494:508:void destroyCallbacks() -> e
    1191:1233:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    943:947:void releaseVelocityTracker() -> f
    485:491:void setupCallbacks() -> g
    931:932:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    511:514:void startGestureDetection() -> h
    517:524:void stopGestureDetection() -> i
    554:563:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    541:549:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.ItemTouchHelper$1 -> a.q.b.m$a:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> b
    257:257:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    260:267:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> a.q.b.m$b:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    313:313:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    420:424:void onRequestDisallowInterceptTouchEvent(boolean) -> a
    362:416:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
androidx.recyclerview.widget.ItemTouchHelper$3 -> a.q.b.m$c:
    int val$swipeDir -> o
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$prevSelected -> p
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> q
    635:635:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    638:660:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> a.q.b.m$d:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> d
    int val$swipeDir -> c
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation val$anim -> b
    700:700:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:717:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> a.q.b.m$e:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    1294:1294:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1297:1308:int onGetChildDrawingOrder(int,int) -> a
androidx.recyclerview.widget.ItemTouchHelper$Callback -> a.q.b.m$f:
    long DRAG_SCROLL_ACCELERATION_LIMIT_TIME_MS -> h
    int RELATIVE_DIR_FLAGS -> d
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> g
    int ABS_HORIZONTAL_DIR_FLAGS -> e
    android.view.animation.Interpolator sDragScrollInterpolator -> f
    int DEFAULT_DRAG_ANIMATION_DURATION -> b
    int DEFAULT_SWIPE_ANIMATION_DURATION -> c
    int mCachedMaxScrollSpeed -> a
    1401:1408:void <clinit>() -> <clinit>
    1385:1421:void <init>() -> <init>
    1573:1588:int convertToAbsoluteDirection(int,int) -> a
    1626:1626:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    1690:1690:int getBoundingBoxMargin() -> a
    1720:1720:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    1746:1746:float getSwipeEscapeVelocity(float) -> a
    1802:1853:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> a
    1895:1898:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    1901:1905:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> a
    1944:1973:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> a
    1978:1992:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> a
    2038:2039:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    2071:2073:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> a
    2132:2137:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> a
    2166:2184:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> a
    boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    1482:1497:int convertToRelativeDirection(int,int) -> b
    1593:1594:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1678:1678:boolean isItemViewSwipeEnabled() -> b
    1706:1706:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1770:1770:float getSwipeVelocityThreshold(float) -> b
    1997:2022:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> b
    2105:2107:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> b
    int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    1529:1529:int makeFlag(int,int) -> c
    1663:1663:boolean isLongPressDragEnabled() -> c
    1466:1466:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> d
    1512:1512:int makeMovementFlags(int,int) -> d
    1598:1599:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    1604:1605:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> a.q.b.m$f$a:
    1401:1401:void <init>() -> <init>
    1404:1404:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> a.q.b.m$f$b:
    1408:1408:void <init>() -> <init>
    1411:1412:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> a.q.b.m$g:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> c
    boolean mShouldReactToLongPress -> b
    2316:2317:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2324:2325:void doNotReactToLongPress() -> a
    2329:2329:boolean onDown(android.view.MotionEvent) -> onDown
    2334:2365:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> a.q.b.m$h:
    boolean mEnded -> m
    float mY -> k
    float mX -> j
    boolean mIsPendingCleanup -> i
    int mAnimationType -> h
    boolean mOverridden -> l
    float mTargetY -> d
    int mActionState -> f
    float mTargetX -> c
    float mStartDy -> b
    float mStartDx -> a
    android.animation.ValueAnimator mValueAnimator -> g
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> e
    float mFraction -> n
    2401:2420:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2423:2424:void setDuration(long) -> a
    2432:2433:void cancel() -> a
    2436:2437:void setFraction(float) -> a
    2427:2429:void start() -> b
    2444:2454:void update() -> c
    2471:2472:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2463:2467:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2477:2477:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2459:2459:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> a.q.b.m$h$a:
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation this$0 -> a
    2411:2411:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2415:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> a.q.b.m$i:
    int mDefaultDragDirs -> j
    int mDefaultSwipeDirs -> i
    2233:2236:void <init>(int,int) -> <init>
    2257:2258:void setDefaultDragDirs(int) -> a
    2246:2247:void setDefaultSwipeDirs(int) -> b
    2293:2293:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    2287:2287:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    2272:2272:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler -> a.q.b.m$j:
androidx.recyclerview.widget.ItemTouchUIUtil -> a.q.b.n:
    void clearView(android.view.View) -> a
    void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> a
    void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> b
    void onSelected(android.view.View) -> b
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> a.q.b.o:
    androidx.recyclerview.widget.ItemTouchUIUtil INSTANCE -> a
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> a
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> a
    75:85:void clearView(android.view.View) -> a
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> b
    89:89:void onSelected(android.view.View) -> b
androidx.recyclerview.widget.LayoutState -> a.q.b.p:
    int ITEM_DIRECTION_TAIL -> n
    int INVALID_LAYOUT -> l
    int ITEM_DIRECTION_HEAD -> m
    int LAYOUT_START -> j
    boolean mInfinite -> i
    int LAYOUT_END -> k
    int mStartLine -> f
    int mEndLine -> g
    int mItemDirection -> d
    int mLayoutDirection -> e
    int mAvailable -> b
    int mCurrentPosition -> c
    boolean mStopInFocusable -> h
    boolean mRecycle -> a
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    159:160:void <init>(android.content.Context) -> <init>
    169:172:void <init>(android.content.Context,int,boolean) -> <init>
    183:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1409:1412:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    482:497:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    295:295:boolean canScrollHorizontally() -> canScrollHorizontally
    303:303:boolean canScrollVertically() -> canScrollVertically
    1368:1371:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1288:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1277:1281:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1173:1177:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1162:1166:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1184:1188:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1716:1723:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1040:1043:void ensureLayoutState() -> ensureLayoutState
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1940:1941:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1923:1924:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1980:1981:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1963:1964:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2012:2031:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1990:2004:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1885:1885:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1892:1892:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1855:1879:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1823:1823:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1840:1840:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    407:420:android.view.View findViewByPosition(int) -> findViewByPosition
    961:966:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    986:992:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1771:1771:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1761:1761:android.view.View getChildClosestToStart() -> getChildClosestToStart
    447:450:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1362:1362:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    330:330:int getOrientation() -> getOrientation
    212:212:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    376:376:boolean getReverseLayout() -> getReverseLayout
    319:319:boolean getStackFromEnd() -> getStackFromEnd
    192:192:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1036:1036:boolean isLayoutRTL() -> isLayoutRTL
    1223:1223:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1627:1696:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    755:757:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    2089:2096:void logChildren() -> logChildren
    743:743:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2041:2081:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    537:721:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    725:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:288:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:274:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2160:2187:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1546:1547:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1421:1436:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1502:1532:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1453:1484:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1271:1271:boolean resolveIsInfinite() -> resolveIsInfinite
    362:367:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1382:1383:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1070:1076:void scrollToPosition(int) -> scrollToPosition
    1098:1104:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1346:1347:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    340:353:void setOrientation(int) -> setOrientation
    229:230:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    394:400:void setReverseLayout(boolean) -> setReverseLayout
    1212:1213:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    310:316:void setStackFromEnd(boolean) -> setStackFromEnd
    1700:1700:boolean shouldMeasureTwice() -> shouldMeasureTwice
    502:506:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2150:2150:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    834:867:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    875:876:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    806:824:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1229:1268:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1007:1008:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1011:1018:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1021:1022:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1025:1033:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    2109:2146:void validateChildOrder() -> validateChildOrder
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$a:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> a
    boolean mValid -> e
    int mPosition -> b
    int mCoordinate -> c
    boolean mLayoutFromEnd -> d
    2453:2455:void <init>() -> <init>
    2469:2472:void assignCoordinateFromPadding() -> a
    2485:2486:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> a
    2538:2546:void assignFromView(android.view.View,int) -> a
    2458:2462:void reset() -> b
    2491:2535:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> b
    2476:2476:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$b:
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    int mConsumed -> a
    boolean mFocusable -> d
    2549:2549:void <init>() -> <init>
    2556:2560:void resetInternal() -> a
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$c:
    boolean mInfinite -> m
    int LAYOUT_START -> o
    boolean mIsPreLayout -> j
    int mLastScrollDelta -> k
    int mExtraFillSpace -> h
    int mNoRecycleSpace -> i
    int mLayoutDirection -> f
    java.lang.String TAG -> n
    int mScrollingOffset -> g
    int mCurrentPosition -> d
    int mItemDirection -> e
    int mOffset -> b
    int mAvailable -> c
    int SCROLLING_OFFSET_NaN -> t
    int ITEM_DIRECTION_HEAD -> r
    boolean mRecycle -> a
    int ITEM_DIRECTION_TAIL -> s
    int LAYOUT_END -> p
    java.util.List mScrapList -> l
    int INVALID_LAYOUT -> q
    2193:2279:void <init>() -> <init>
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    2300:2305:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    2332:2333:void assignPositionFromScrapList() -> a
    2336:2343:void assignPositionFromScrapList(android.view.View) -> a
    2346:2371:android.view.View nextViewInLimitedList(android.view.View) -> b
    2375:2377:void log() -> b
    2316:2328:android.view.View nextViewFromScrapList() -> c
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$d:
    int mAnchorPosition -> b
    int mAnchorOffset -> c
    boolean mAnchorLayoutFromEnd -> d
    2429:2429:void <clinit>() -> <clinit>
    2393:2395:void <init>() -> <init>
    2397:2401:void <init>(android.os.Parcel) -> <init>
    2403:2407:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2410:2410:boolean hasValidAnchor() -> a
    2414:2415:void invalidateAnchor() -> b
    2419:2419:int describeContents() -> describeContents
    2424:2427:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$d$a:
    2430:2430:void <init>() -> <init>
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> a.q.b.q:
    93:95:void <init>(android.content.Context) -> <init>
    280:282:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:341:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:316:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    266:271:int clampApplyScroll(int,int) -> clampApplyScroll
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:249:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> a.q.b.r:
    float INVALID_DISTANCE -> g
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> e
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> f
    33:33:void <init>() -> <init>
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    143:146:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    162:169:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> a
    223:248:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    184:205:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> b
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    272:275:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> d
    263:266:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> e
androidx.recyclerview.widget.ListAdapter -> a.q.b.s:
    androidx.recyclerview.widget.AsyncListDiffer mDiffer -> a
    androidx.recyclerview.widget.AsyncListDiffer$ListListener mListener -> b
    107:111:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    114:117:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    128:129:void submitList(java.util.List) -> a
    146:147:void submitList(java.util.List,java.lang.Runnable) -> a
    150:150:java.lang.Object getItem(int) -> a
    189:189:void onCurrentListChanged(java.util.List,java.util.List) -> a
    173:173:java.util.List getCurrentList() -> b
    155:155:int getItemCount() -> getItemCount
androidx.recyclerview.widget.ListAdapter$1 -> a.q.b.s$a:
    androidx.recyclerview.widget.ListAdapter this$0 -> a
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:103:void onCurrentListChanged(java.util.List,java.util.List) -> a
androidx.recyclerview.widget.ListUpdateCallback -> a.q.b.t:
    void onChanged(int,int,java.lang.Object) -> a
    void onRemoved(int,int) -> a
    void onInserted(int,int) -> b
    void onMoved(int,int) -> c
androidx.recyclerview.widget.MessageThreadUtil -> a.q.b.u:
    27:27:void <init>() -> <init>
    31:31:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> a
    88:88:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> a
androidx.recyclerview.widget.MessageThreadUtil$1 -> a.q.b.u$a:
    androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue -> a
    java.lang.Runnable mMainThreadRunnable -> c
    android.os.Handler mMainThreadHandler -> b
    int REMOVE_TILE -> h
    int UPDATE_ITEM_COUNT -> f
    int ADD_TILE -> g
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback val$callback -> d
    androidx.recyclerview.widget.MessageThreadUtil this$0 -> e
    31:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    41:42:void updateItemCount(int,int) -> a
    46:47:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> a
    55:57:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    51:52:void removeTile(int,int) -> b
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> a.q.b.u$a$a:
    androidx.recyclerview.widget.MessageThreadUtil$1 this$1 -> b
    59:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    62:81:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> a.q.b.u$b:
    androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue -> a
    java.lang.Runnable mBackgroundRunnable -> d
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback val$callback -> e
    int RECYCLE_TILE -> j
    int UPDATE_RANGE -> h
    java.util.concurrent.atomic.AtomicBoolean mBackgroundRunning -> c
    int LOAD_TILE -> i
    java.util.concurrent.Executor mExecutor -> b
    int REFRESH -> g
    androidx.recyclerview.widget.MessageThreadUtil this$0 -> f
    88:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    100:101:void refresh(int) -> a
    106:108:void updateRange(int,int,int,int,int) -> a
    112:113:void loadTile(int,int) -> a
    117:118:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> a
    121:123:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    131:134:void maybeExecuteBackgroundRunnable() -> a
    126:128:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> b
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> a.q.b.u$b$a:
    androidx.recyclerview.widget.MessageThreadUtil$2 this$1 -> b
    136:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    140:166:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> a.q.b.u$c:
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem mRoot -> a
    233:233:void <init>() -> <init>
    238:237:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> a
    252:251:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    264:263:void removeMessages(int) -> a
    247:246:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> b
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> a.q.b.u$d:
    java.lang.Object sPoolLock -> j
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next -> a
    java.lang.Object data -> h
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem sPool -> i
    int arg4 -> f
    int arg5 -> g
    int arg2 -> d
    int arg3 -> e
    int what -> b
    int arg1 -> c
    180:180:void <clinit>() -> <clinit>
    177:177:void <init>() -> <init>
    191:199:void recycle() -> a
    204:221:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> a
    225:225:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> a
    229:229:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> a
androidx.recyclerview.widget.OpReorderer -> a.q.b.v:
    androidx.recyclerview.widget.OpReorderer$Callback mCallback -> a
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    33:36:void reorderOps(java.util.List) -> a
    39:52:void swapMoveOp(java.util.List,int,int) -> a
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    213:224:int getLastMoveOutOfOrder(java.util.List) -> b
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
androidx.recyclerview.widget.OpReorderer$Callback -> a.q.b.v$a:
    androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
androidx.recyclerview.widget.OrientationHelper -> a.q.b.w:
    int VERTICAL -> f
    int INVALID_SIZE -> d
    int HORIZONTAL -> e
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    android.graphics.Rect mTmpRect -> c
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    46:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    int getDecoratedEnd(android.view.View) -> a
    int getEnd() -> a
    void offsetChild(android.view.View,int) -> a
    void offsetChildren(int) -> a
    241:243:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> a
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    int getDecoratedMeasurement(android.view.View) -> b
    int getEndAfterPadding() -> b
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    int getDecoratedMeasurementInOther(android.view.View) -> c
    int getEndPadding() -> c
    int getDecoratedStart(android.view.View) -> d
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> d
    int getMode() -> e
    int getTransformedEndWithDecoration(android.view.View) -> e
    int getModeInOther() -> f
    int getTransformedStartWithDecoration(android.view.View) -> f
    int getStartAfterPadding() -> g
    int getTotalSpace() -> h
    78:78:int getTotalSpaceChange() -> i
    64:65:void onLayoutComplete() -> j
androidx.recyclerview.widget.OrientationHelper$1 -> a.q.b.w$a:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    266:266:int getEnd() -> a
    271:272:void offsetChildren(int) -> a
    297:299:int getDecoratedEnd(android.view.View) -> a
    329:330:void offsetChild(android.view.View,int) -> a
    261:261:int getEndAfterPadding() -> b
    281:283:int getDecoratedMeasurement(android.view.View) -> b
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> c
    334:334:int getEndPadding() -> c
    304:306:int getDecoratedStart(android.view.View) -> d
    311:312:int getTransformedEndWithDecoration(android.view.View) -> e
    339:339:int getMode() -> e
    317:318:int getTransformedStartWithDecoration(android.view.View) -> f
    344:344:int getModeInOther() -> f
    276:276:int getStartAfterPadding() -> g
    323:323:int getTotalSpace() -> h
androidx.recyclerview.widget.OrientationHelper$2 -> a.q.b.w$b:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    364:364:int getEnd() -> a
    369:370:void offsetChildren(int) -> a
    395:397:int getDecoratedEnd(android.view.View) -> a
    427:428:void offsetChild(android.view.View,int) -> a
    359:359:int getEndAfterPadding() -> b
    379:381:int getDecoratedMeasurement(android.view.View) -> b
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> c
    432:432:int getEndPadding() -> c
    402:404:int getDecoratedStart(android.view.View) -> d
    409:410:int getTransformedEndWithDecoration(android.view.View) -> e
    437:437:int getMode() -> e
    415:416:int getTransformedStartWithDecoration(android.view.View) -> f
    442:442:int getModeInOther() -> f
    374:374:int getStartAfterPadding() -> g
    421:421:int getTotalSpace() -> h
androidx.recyclerview.widget.PagerSnapHelper -> a.q.b.x:
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> e
    int MAX_SCROLL_ON_FLING_DURATION -> g
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> f
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    82:140:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    199:202:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    217:238:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    263:266:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> d
    243:248:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> e
    254:257:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> f
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> g
androidx.recyclerview.widget.PagerSnapHelper$1 -> a.q.b.x$a:
    androidx.recyclerview.widget.PagerSnapHelper this$0 -> a
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    192:192:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    175:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    219:598:void <clinit>() -> <clinit>
    646:647:void <init>(android.content.Context) -> <init>
    650:651:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    654:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2603:2630:void absorbGlows(int,int) -> absorbGlows
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1431:1442:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2943:2946:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1568:1582:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1597:1598:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1273:1277:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3079:3080:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1706:1710:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4363:4367:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4381:4399:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4371:4376:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3030:3038:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    3048:3063:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4674:4674:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3443:3445:void cancelScroll() -> cancelScroll
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5851:5867:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4554:4562:void clearOldPositions() -> clearOldPositions
    1297:1300:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1727:1730:void clearOnScrollListeners() -> clearOnScrollListeners
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2580:2600:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1865:1869:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    782:832:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3606:3614:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4327:4328:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7553:7564:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7538:7549:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3675:3683:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3837:3863:void dispatchLayout() -> dispatchLayout
    4033:4118:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4125:4144:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4151:4235:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11576:11576:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11583:11585:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5196:5213:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5154:5177:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11480:11494:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3741:3742:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1419:1420:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1411:1412:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3118:3129:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4429:4486:void draw(android.graphics.Canvas) -> draw
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2673:2683:void ensureBottomGlow() -> ensureBottomGlow
    2633:2643:void ensureLeftGlow() -> ensureLeftGlow
    2646:2656:void ensureRightGlow() -> ensureRightGlow
    2659:2670:void ensureTopGlow() -> ensureTopGlow
    733:733:java.lang.String exceptionLabel() -> exceptionLabel
    4015:4023:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5013:5025:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4792:4797:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3147:3156:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4301:4324:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5829:5844:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3902:3925:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4924:4941:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4986:4987:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4902:4902:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    4878:4878:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    4946:4968:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2438:2485:boolean fling(int,int) -> fling
    2748:2821:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4505:4506:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4514:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4522:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    774:774:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11497:11500:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1253:1256:int getBaseline() -> getBaseline
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    4838:4839:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4864:4865:long getChildItemId(android.view.View) -> getChildItemId
    4853:4854:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4828:4828:int getChildPosition(android.view.View) -> getChildPosition
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4816:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5092:5093:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    5096:5102:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4003:4011:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5105:5126:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1609:1611:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1623:1623:int getItemDecorationCount() -> getItemDecorationCount
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2523:2523:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2513:2513:int getMinFlingVelocity() -> getMinFlingVelocity
    5876:5879:long getNanoTime() -> getNanoTime
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4741:4741:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1535:1535:int getScrollState() -> getScrollState
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4255:4282:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1070:1070:boolean hasFixedSize() -> hasFixedSize
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11563:11563:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5229:5229:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1906:1916:boolean hasUpdatedView() -> hasUpdatedView
    968:1048:void initAdapterManager() -> initAdapterManager
    747:751:void initAutofill() -> initAutofill
    845:965:void initChildrenHelper() -> initChildrenHelper
    11509:11513:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2686:2687:void invalidateGlows() -> invalidateGlows
    4718:4727:void invalidateItemDecorations() -> invalidateItemDecorations
    3671:3671:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    4536:4536:boolean isAnimating() -> isAnimating
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3705:3705:boolean isComputingLayout() -> isComputingLayout
    2281:2281:boolean isLayoutFrozen() -> isLayoutFrozen
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2834:2835:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1755:1764:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4419:4425:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4702:4711:void markKnownViewsInvalid() -> markKnownViewsInvalid
    5078:5082:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5040:5044:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4599:4613:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4565:4596:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4617:4643:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2960:2990:void onAttachedToWindow() -> onAttachedToWindow
    5057:5057:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5069:5069:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2994:3012:void onDetachedFromWindow() -> onDetachedFromWindow
    4490:4496:void onDraw(android.graphics.Canvas) -> onDraw
    3648:3649:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3652:3653:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3656:3668:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3460:3505:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4403:4407:void onLayout(boolean,int,int,int,int) -> onLayout
    3510:3597:void onMeasure(int,int) -> onMeasure
    3448:3456:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1394:1404:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1380:1389:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5191:5191:void onScrollStateChanged(int) -> onScrollStateChanged
    5151:5151:void onScrolled(int,int) -> onScrolled
    3618:3623:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3280:3281:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3764:3768:void postAnimationRunner() -> postAnimationRunner
    3771:3771:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3781:3809:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4692:4695:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2530:2554:void pullGlows(float,float,float,float) -> pullGlows
    4291:4298:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3929:3936:void recoverFocusFromState() -> recoverFocusFromState
    2557:2577:void releaseGlows() -> releaseGlows
    1171:1184:void removeAndRecycleViews() -> removeAndRecycleViews
    1451:1463:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4334:4351:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1650:1660:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1632:1634:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1286:1290:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3088:3092:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1718:1721:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5513:5528:void repositionShadowingViews() -> repositionShadowingViews
    2893:2897:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2909:2934:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3270:3276:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4411:4416:void requestLayout() -> requestLayout
    3887:3890:void resetFocusInfo() -> resetFocusInfo
    3435:3440:void resetScroll() -> resetScroll
    3866:3884:void saveFocusInfo() -> saveFocusInfo
    4540:4551:void saveOldPositions() -> saveOldPositions
    1801:1814:void scrollBy(int,int) -> scrollBy
    1931:1976:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1829:1854:void scrollStep(int,int,int[]) -> scrollStep
    1795:1797:void scrollTo(int,int) -> scrollTo
    1741:1752:void scrollToPosition(int) -> scrollToPosition
    3733:3737:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    768:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1160:1164:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1197:1216:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1676:1681:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11470:11476:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1075:1083:void setClipToPadding(boolean) -> setClipToPadding
    2699:2702:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1062:1063:void setHasFixedSize(boolean) -> setHasFixedSize
    3637:3645:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1525:1526:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2271:2272:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1315:1354:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2290:2313:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11528:11529:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1365:1366:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1693:1694:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4759:4760:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1499:1500:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1240:1241:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1539:1551:void setScrollState(int) -> setScrollState
    1112:1126:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1510:1511:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3717:3728:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2326:2327:void smoothScrollBy(int,int) -> smoothScrollBy
    2338:2339:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2356:2357:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2390:2422:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1782:1791:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2137:2141:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    2154:2185:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11548:11549:void stopNestedScroll() -> stopNestedScroll
    11553:11554:void stopNestedScroll(int) -> stopNestedScroll
    2493:2495:void stopScroll() -> stopScroll
    2501:2505:void stopScrollersInternal() -> stopScrollersInternal
    2214:2232:void suppressLayout(boolean) -> suppressLayout
    1144:1148:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    4652:4671:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$a:
    androidx.recyclerview.widget.RecyclerView this$0 -> b
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:403:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$b:
    androidx.recyclerview.widget.RecyclerView this$0 -> b
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:595:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$c:
    598:598:void <init>() -> <init>
    601:602:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$d:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    620:621:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    641:642:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    614:616:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    626:638:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$e:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    856:861:void addView(android.view.View,int) -> a
    890:890:android.view.View getChildAt(int) -> a
    895:906:void removeAllViews() -> a
    916:928:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    951:955:void onEnteredHiddenState(android.view.View) -> a
    848:848:int getChildCount() -> b
    870:886:void removeViewAt(int) -> b
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    932:947:void detachViewFromParent(int) -> c
    959:963:void onLeftHiddenState(android.view.View) -> c
    865:865:int indexOfChild(android.view.View) -> d
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$f:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    971:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    1003:1005:void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    1032:1033:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    1043:1046:void offsetPositionsForMove(int,int) -> a
    988:991:void offsetPositionsForRemovingInvisible(int,int) -> b
    1009:1010:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    996:998:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> c
    1013:1028:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    1037:1039:void offsetPositionsForAdd(int,int) -> d
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$g:
    6984:6986:void <init>() -> <init>
    7099:7114:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7077:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7157:7157:long getItemId(int) -> getItemId
    7129:7129:int getItemViewType(int) -> getItemViewType
    7267:7267:boolean hasObservers() -> hasObservers
    7175:7175:boolean hasStableIds() -> hasStableIds
    7354:7355:void notifyDataSetChanged() -> notifyDataSetChanged
    7370:7371:void notifyItemChanged(int) -> notifyItemChanged
    7398:7399:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7464:7465:void notifyItemInserted(int) -> notifyItemInserted
    7479:7480:void notifyItemMoved(int,int) -> notifyItemMoved
    7416:7417:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7447:7448:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7498:7499:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7532:7533:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7515:7516:void notifyItemRemoved(int) -> notifyItemRemoved
    7313:7313:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7065:7066:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7322:7322:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7233:7233:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7247:7247:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7259:7259:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7196:7196:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7287:7288:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7141:7142:void setHasStableIds(boolean) -> setHasStableIds
    7301:7302:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$h:
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> a
    12267:12270:void notifyItemRangeChanged(int,int,java.lang.Object) -> a
    12293:12296:void notifyItemMoved(int,int) -> a
    12252:12255:void notifyChanged() -> b
    12258:12259:void notifyItemRangeChanged(int,int) -> b
    12277:12280:void notifyItemRangeInserted(int,int) -> c
    12287:12290:void notifyItemRangeRemoved(int,int) -> d
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$i:
    11721:11721:void <init>() -> <init>
    11724:11724:void onChanged() -> onChanged
    11728:11728:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11733:11734:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11738:11738:void onItemRangeInserted(int,int) -> onItemRangeInserted
    11746:11746:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    11742:11742:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback -> androidx.recyclerview.widget.RecyclerView$j:
    int onGetChildDrawingOrder(int,int) -> a
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$k:
    int DIRECTION_BOTTOM -> d
    int DIRECTION_TOP -> b
    int DIRECTION_RIGHT -> c
    int DIRECTION_LEFT -> a
    5592:5592:void <init>() -> <init>
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> a
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection -> androidx.recyclerview.widget.RecyclerView$k$a:
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$l:
    int FLAG_MOVED -> j
    long mChangeDuration -> f
    int FLAG_APPEARED_IN_PRE_LAYOUT -> k
    long mMoveDuration -> e
    int FLAG_REMOVED -> h
    int FLAG_INVALIDATED -> i
    int FLAG_CHANGED -> g
    long mRemoveDuration -> d
    long mAddDuration -> c
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    12728:12791:void <init>() -> <init>
    boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    12826:12827:void setAddDuration(long) -> a
    12874:12875:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> a
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> a
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13269:13277:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> a
    13302:13302:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> a
    13340:13345:void dispatchAnimationsFinished() -> a
    boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void endAnimations() -> b
    12862:12863:void setChangeDuration(long) -> b
    13197:13201:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    12808:12809:void setMoveDuration(long) -> c
    12817:12817:long getAddDuration() -> c
    13238:13239:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    12844:12845:void setRemoveDuration(long) -> d
    12853:12853:long getChangeDuration() -> d
    12799:12799:long getMoveDuration() -> e
    13212:13212:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    12835:12835:long getRemoveDuration() -> f
    13250:13250:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    boolean isRunning() -> g
    13113:13124:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> h
    void runPendingAnimations() -> i
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges -> androidx.recyclerview.widget.RecyclerView$l$a:
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> androidx.recyclerview.widget.RecyclerView$l$b:
    void onAnimationsFinished() -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$l$c:
    void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$l$d:
    int bottom -> d
    int changeFlags -> e
    int top -> b
    int right -> c
    int left -> a
    13425:13426:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13453:13458:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$m:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    12686:12687:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12703:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$n:
    10705:10705:void <init>() -> <init>
    10757:10758:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10782:10784:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10716:10717:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10725:10725:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10738:10739:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    10747:10747:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$o:
    7582:7688:void <init>() -> <init>
    8518:8519:void addDisappearingView(android.view.View) -> addDisappearingView
    8536:8537:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8547:8548:void addView(android.view.View) -> addView
    8559:8560:void addView(android.view.View,int) -> addView
    8563:8614:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7860:7863:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    7897:7900:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8804:8814:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8825:8826:void attachView(android.view.View,int) -> attachView
    8836:8837:void attachView(android.view.View) -> attachView
    9707:9713:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8415:8415:boolean canScrollHorizontally() -> canScrollHorizontally
    8425:8425:boolean canScrollVertically() -> canScrollVertically
    8330:8330:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7876:7882:int chooseSize(int,int,int) -> chooseSize
    8082:8082:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8110:8110:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10153:10153:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    10168:10168:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    10183:10183:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    10198:10198:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10213:10213:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10228:10228:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9192:9197:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8875:8877:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    8889:8891:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    8762:8766:void detachView(android.view.View) -> detachView
    8784:8785:void detachViewAt(int) -> detachViewAt
    8791:8792:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8113:8115:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8118:8120:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8499:8502:void endAnimation(android.view.View) -> endAnimation
    8703:8713:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8731:8743:android.view.View findViewByPosition(int) -> findViewByPosition
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8662:8662:int getBaseline() -> getBaseline
    9742:9742:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8933:8933:android.view.View getChildAt(int) -> getChildAt
    8923:8923:int getChildCount() -> getChildCount
    9403:9429:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9834:9867:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8230:8230:boolean getClipToPadding() -> getClipToPadding
    10528:10529:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9686:9686:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9638:9639:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9650:9650:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9674:9674:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9662:9662:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9089:9094:android.view.View getFocusedChild() -> getFocusedChild
    8999:8999:int getHeight() -> getHeight
    8967:8967:int getHeightMode() -> getHeightMode
    9112:9113:int getItemCount() -> getItemCount
    8683:8683:int getItemViewType(android.view.View) -> getItemViewType
    8489:8489:int getLayoutDirection() -> getLayoutDirection
    9757:9757:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10283:10283:int getMinimumHeight() -> getMinimumHeight
    10275:10275:int getMinimumWidth() -> getMinimumWidth
    9039:9039:int getPaddingBottom() -> getPaddingBottom
    9059:9059:int getPaddingEnd() -> getPaddingEnd
    9009:9009:int getPaddingLeft() -> getPaddingLeft
    9029:9029:int getPaddingRight() -> getPaddingRight
    9049:9049:int getPaddingStart() -> getPaddingStart
    9019:9019:int getPaddingTop() -> getPaddingTop
    8673:8673:int getPosition(android.view.View) -> getPosition
    10635:10644:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9772:9772:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10508:10509:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10492:10492:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9727:9727:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9605:9628:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8983:8983:int getWidth() -> getWidth
    8950:8950:int getWidthMode() -> getWidthMode
    10669:10677:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    9079:9079:boolean hasFocus() -> hasFocus
    9157:9161:void ignoreView(android.view.View) -> ignoreView
    8130:8130:boolean isAttachedToWindow() -> isAttachedToWindow
    7991:7991:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9069:9069:boolean isFocused() -> isFocused
    9966:9979:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8058:8058:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10545:10545:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9324:9324:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    9340:9349:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8477:8477:boolean isSmoothScrolling() -> isSmoothScrolling
    9944:9952:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9549:9552:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    9585:9590:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9270:9284:void measureChild(android.view.View,int,int) -> measureChild
    9369:9386:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8856:8859:void moveView(int,int) -> moveView
    9123:9126:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9135:9138:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10031:10031:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10059:10059:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8185:8185:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8194:8194:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8221:8222:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9800:9800:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10397:10398:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10413:10414:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10348:10349:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10378:10393:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10428:10434:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10453:10459:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9821:9821:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10083:10083:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10070:10070:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10138:10138:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10094:10094:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10107:10107:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10120:10121:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8285:8286:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8300:8300:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10256:10257:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10303:10303:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10297:10297:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10323:10323:void onScrollStateChanged(int) -> onScrollStateChanged
    10312:10315:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10566:10592:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10619:10619:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    8144:8147:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    8649:8653:void removeAllViews() -> removeAllViews
    10338:10344:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9228:9255:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8900:8902:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8911:8914:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8164:8167:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8846:8847:void removeDetachedView(android.view.View) -> removeDetachedView
    8625:8626:void removeView(android.view.View) -> removeView
    8637:8641:void removeViewAt(int) -> removeViewAt
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9906:9917:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7847:7850:void requestLayout() -> requestLayout
    10472:10473:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9200:9216:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8388:8388:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8438:8438:void scrollToPosition(int) -> scrollToPosition
    8405:8405:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    7918:7919:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    10648:10652:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8040:8047:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    7757:7768:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7836:7841:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10267:10268:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7784:7813:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    9336:9337:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    7741:7754:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9307:9307:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10665:10665:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9293:9293:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8451:8452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8465:8471:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    9178:9182:void stopIgnoringView(android.view.View) -> stopIgnoringView
    10306:10309:void stopSmoothScroller() -> stopSmoothScroller
    8017:8017:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$o$a:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> a
    7604:7604:int getParentEnd() -> a
    7616:7618:int getChildEnd(android.view.View) -> a
    7599:7599:int getParentStart() -> b
    7609:7611:int getChildStart(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$o$b:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> a
    7640:7640:int getParentEnd() -> a
    7653:7655:int getChildEnd(android.view.View) -> a
    7635:7635:int getParentStart() -> b
    7646:7648:int getChildStart(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry -> androidx.recyclerview.widget.RecyclerView$o$c:
    void addPosition(int,int) -> a
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$o$d:
    int spanCount -> b
    boolean reverseLayout -> c
    int orientation -> a
    boolean stackFromEnd -> d
    10683:10683:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$p:
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> a
    boolean mInsetsDirty -> c
    android.graphics.Rect mDecorInsets -> b
    boolean mPendingInvalidate -> d
    11625:11626:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11629:11630:void <init>(int,int) -> <init>
    11633:11634:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11637:11638:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11641:11642:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11713:11713:int getViewAdapterPosition() -> a
    11701:11701:int getViewLayoutPosition() -> b
    11691:11691:int getViewPosition() -> c
    11683:11683:boolean isItemChanged() -> d
    11672:11672:boolean isItemRemoved() -> e
    11661:11661:boolean isViewInvalid() -> f
    11651:11651:boolean viewNeedsUpdate() -> g
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener -> androidx.recyclerview.widget.RecyclerView$q:
    void onChildViewAttachedToWindow(android.view.View) -> a
    void onChildViewDetachedFromWindow(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$r:
    12663:12663:void <init>() -> <init>
    boolean onFling(int,int) -> a
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$s:
    boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    void onRequestDisallowInterceptTouchEvent(boolean) -> a
    void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$t:
    10870:10870:void <init>() -> <init>
    10878:10878:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    10891:10891:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$Orientation -> androidx.recyclerview.widget.RecyclerView$u:
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$v:
    android.util.SparseArray mScrap -> a
    int mAttachCount -> b
    int DEFAULT_MAX_SCRAP -> c
    5635:5660:void <init>() -> <init>
    5679:5685:void setMaxRecycledViews(int,int) -> a
    5704:5713:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> a
    5740:5750:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    5753:5756:long runningAverage(long,long) -> a
    5766:5769:void factorInBindTime(int,long) -> a
    5777:5778:boolean willBindInTime(int,long,long) -> a
    5782:5783:void attach() -> a
    5803:5812:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    5666:5670:void clear() -> b
    5691:5691:int getRecycledViewCount(int) -> b
    5760:5763:void factorInCreateTime(int,long) -> b
    5772:5773:boolean willCreateInTime(int,long,long) -> b
    5786:5787:void detach() -> c
    5815:5820:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> c
    5722:5729:int size() -> d
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$v$a:
    long mBindRunningAverageNs -> d
    long mCreateRunningAverageNs -> c
    int mMaxScrap -> b
    java.util.ArrayList mScrapHeap -> a
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$w:
    androidx.recyclerview.widget.RecyclerView this$0 -> i
    int DEFAULT_CACHE_SIZE -> j
    java.util.List mUnmodifiableAttachedScrap -> d
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    int mViewCacheMax -> f
    int mRequestedCacheMax -> e
    java.util.ArrayList mCachedViews -> c
    androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> h
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mAttachedScrap -> a
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5919:5921:void clear() -> a
    6004:6019:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> a
    6038:6042:void bindViewToPosition(android.view.View,int) -> a
    6088:6090:int convertPreLayoutPositionToPostLayout(int) -> a
    6142:6145:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> a
    6327:6345:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> a
    6524:6542:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    6550:6555:void quickRecycleScrapView(android.view.View) -> a
    6657:6707:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> a
    6712:6760:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> a
    6765:6775:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    6779:6781:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    6813:6824:void offsetPositionRecordsForInsert(int,int) -> a
    6833:6852:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    6855:6856:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> a
    6859:6866:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> a
    6118:6118:android.view.View getViewForPosition(int,boolean) -> b
    6360:6387:void recycleView(android.view.View) -> b
    6429:6433:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    6621:6622:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> b
    6785:6810:void offsetPositionRecordsForMove(int,int) -> b
    6911:6926:void clearOldPositions() -> b
    6567:6584:void scrapView(android.view.View) -> c
    6593:6601:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    6608:6608:android.view.View getScrapViewAt(int) -> c
    6612:6616:void clearScrap() -> c
    6876:6892:void viewRangeUpdate(int,int) -> c
    5965:5974:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    6114:6114:android.view.View getViewForPosition(int) -> d
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> d
    6299:6318:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    6415:6421:void recycleCachedViewAt(int) -> e
    6604:6604:int getScrapCount() -> e
    5929:5931:void setViewCacheSize(int) -> f
    5951:5951:java.util.List getScrapList() -> f
    6321:6324:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    6929:6937:void markItemDecorInsetsDirty() -> g
    6895:6908:void markKnownViewsInvalid() -> h
    6390:6398:void recycleAndClearCachedViews() -> i
    5934:5942:void updateViewCacheSize() -> j
androidx.recyclerview.widget.RecyclerView$RecyclerListener -> androidx.recyclerview.widget.RecyclerView$x:
    void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$y:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    5531:5532:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5578:5584:void triggerUpdateProcessor() -> a
    5536:5543:void onChanged() -> onChanged
    5547:5551:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5555:5559:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5571:5575:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5563:5567:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$z:
    android.os.Parcelable mLayoutState -> b
    12334:12334:void <clinit>() -> <clinit>
    12312:12315:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12322:void <init>(android.os.Parcelable) -> <init>
    12331:12332:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> a
    12326:12328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$z$a:
    12334:12334:void <init>() -> <init>
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$a0:
    10846:10846:void <init>() -> <init>
    10849:10849:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> a
    10858:10858:void onRequestDisallowInterceptTouchEvent(boolean) -> a
    10854:10854:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> b
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$b0:
    11776:11778:void <init>() -> <init>
    11835:11842:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11972:11972:android.view.View findViewByPosition(int) -> findViewByPosition
    11965:11965:int getChildCount() -> getChildCount
    11958:11958:int getChildPosition(android.view.View) -> getChildPosition
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11903:11903:int getTargetPosition() -> getTargetPosition
    11981:11982:void instantScrollToPosition(int) -> instantScrollToPosition
    11885:11885:boolean isPendingInitialRun() -> isPendingInitialRun
    11893:11893:boolean isRunning() -> isRunning
    11998:12002:void normalize(android.graphics.PointF) -> normalize
    11907:11952:void onAnimation(int,int) -> onAnimation
    11985:11991:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11820:11821:void setTargetPosition(int) -> setTargetPosition
    11795:11807:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11861:11875:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$b0$a:
    int UNDEFINED_DURATION -> h
    android.view.animation.Interpolator mInterpolator -> e
    boolean mChanged -> f
    int mConsecutiveUpdates -> g
    int mJumpToPosition -> d
    int mDy -> b
    int mDuration -> c
    int mDx -> a
    12070:12071:void <init>(int,int) -> <init>
    12079:12080:void <init>(int,int,int) -> <init>
    12090:12095:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12113:12114:void jumpTo(int) -> a
    12121:12142:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> a
    12174:12174:int getDuration() -> a
    12194:12196:void setInterpolator(android.view.animation.Interpolator) -> a
    12208:12213:void update(int,int,int,android.view.animation.Interpolator) -> a
    12155:12155:int getDx() -> b
    12178:12180:void setDuration(int) -> b
    12159:12161:void setDx(int) -> c
    12165:12165:int getDy() -> c
    12169:12171:void setDy(int) -> d
    12184:12184:android.view.animation.Interpolator getInterpolator() -> d
    12117:12117:boolean hasJumpTarget() -> e
    12145:12149:void validate() -> f
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider -> androidx.recyclerview.widget.RecyclerView$b0$b:
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$c0:
    int mFocusedSubChildId -> o
    int mFocusedItemPosition -> m
    boolean mTrackOldChangeHolders -> i
    boolean mIsMeasuring -> j
    boolean mRunSimpleAnimations -> k
    boolean mRunPredictiveAnimations -> l
    int mItemCount -> f
    int mDeletedInvisibleItemCountSincePreviousLayout -> d
    int mLayoutStep -> e
    int mPreviousLayoutItemCount -> c
    int mTargetPosition -> a
    android.util.SparseArray mData -> b
    int STEP_ANIMATIONS -> t
    boolean mStructureChanged -> g
    boolean mInPreLayout -> h
    int STEP_START -> r
    long mFocusedItemId -> n
    int STEP_LAYOUT -> s
    int mRemainingScrollHorizontal -> p
    int mRemainingScrollVertical -> q
    12362:12433:void <init>() -> <init>
    12368:12371:void assertLayoutStep(int) -> a
    12459:12464:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    12552:12556:void put(int,java.lang.Object) -> a
    12583:12583:boolean didStructureChange() -> a
    12537:12540:java.lang.Object get(int) -> b
    12611:12611:int getItemCount() -> b
    12521:12525:void remove(int) -> c
    12624:12624:int getRemainingScrollHorizontal() -> c
    12635:12635:int getRemainingScrollVertical() -> d
    12566:12566:int getTargetScrollPosition() -> e
    12575:12575:boolean hasTargetScrollPosition() -> f
    12481:12481:boolean isMeasuring() -> g
    12490:12490:boolean isPreLayout() -> h
    12501:12501:boolean willRunPredictiveAnimations() -> i
    12512:12512:boolean willRunSimpleAnimations() -> j
    12640:12640:java.lang.String toString() -> toString
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$d0:
    6953:6953:void <init>() -> <init>
    android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> a
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$e0:
    androidx.recyclerview.widget.RecyclerView this$0 -> h
    android.view.animation.Interpolator mInterpolator -> e
    boolean mEatRunOnAnimationRequest -> f
    boolean mReSchedulePostAnimationCallback -> g
    int mLastFlingX -> b
    android.widget.OverScroller mOverScroller -> d
    int mLastFlingY -> c
    5246:5248:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5403:5408:void postOnAnimation() -> a
    5416:5428:void fling(int,int) -> a
    5445:5474:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> a
    5477:5479:float distanceInfluenceForSnapDuration(float) -> a
    5483:5501:int computeScrollDuration(int,int,int,int) -> a
    5505:5507:void stop() -> b
    5411:5413:void internalPostOnAnimation() -> c
    5252:5400:void run() -> run
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$f0:
    11059:11059:void <clinit>() -> <clinit>
    11086:11088:void <init>(android.view.View) -> <init>
    11300:11306:void addChangePayload(java.lang.Object) -> addChangePayload
    11296:11297:void addFlags(int) -> addFlags
    11116:11118:void clearOldPosition() -> clearOldPosition
    11316:11320:void clearPayload() -> clearPayload
    11243:11244:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11247:11248:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11309:11313:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11456:11456:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11094:11097:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11192:11195:int getAdapterPosition() -> getAdapterPosition
    11220:11220:long getItemId() -> getItemId
    11227:11227:int getItemViewType() -> getItemViewType
    11166:11166:int getLayoutPosition() -> getLayoutPosition
    11210:11210:int getOldPosition() -> getOldPosition
    11140:11140:int getPosition() -> getPosition
    11323:11332:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11276:11276:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11288:11288:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11284:11284:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11268:11268:boolean isBound() -> isBound
    11260:11260:boolean isInvalid() -> isInvalid
    11439:11439:boolean isRecyclable() -> isRecyclable
    11272:11272:boolean isRemoved() -> isRemoved
    11231:11231:boolean isScrap() -> isScrap
    11280:11280:boolean isTmpDetached() -> isTmpDetached
    11460:11460:boolean isUpdated() -> isUpdated
    11264:11264:boolean needsUpdate() -> needsUpdate
    11100:11113:void offsetPosition(int,boolean) -> offsetPosition
    11356:11364:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11370:11373:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11337:11349:void resetInternal() -> resetInternal
    11121:11124:void saveOldPosition() -> saveOldPosition
    11292:11293:void setFlags(int,int) -> setFlags
    11414:11431:void setIsRecyclable(boolean) -> setIsRecyclable
    11255:11257:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11448:11448:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11127:11127:boolean shouldIgnore() -> shouldIgnore
    11251:11252:void stopIgnoring() -> stopIgnoring
    11377:11397:java.lang.String toString() -> toString
    11235:11236:void unScrap() -> unScrap
    11239:11239:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> a.q.b.y:
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> a.q.b.y$a:
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> a
    java.util.Map mOriginalItemDelegates -> b
    119:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> a
    128:132:void saveOriginalDelegate(android.view.View) -> b
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> a.q.b.z:
    99:100:void <init>() -> <init>
    32:34:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    63:65:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> a
    82:84:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> b
androidx.recyclerview.widget.SimpleItemAnimator -> a.q.b.a0:
    boolean DEBUG -> m
    boolean mSupportsChangeAnimations -> l
    java.lang.String TAG -> n
    35:41:void <init>() -> <init>
    boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    71:72:void setSupportsChangeAnimations(boolean) -> a
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> b
    133:138:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> c
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> d
    boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
    boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> i
    50:50:boolean getSupportsChangeAnimations() -> j
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> j
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> k
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> l
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> m
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> n
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> o
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> p
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> q
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> r
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> s
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> t
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> u
androidx.recyclerview.widget.SnapHelper -> a.q.b.b0:
    android.widget.Scroller mGravityScroller -> b
    float MILLISECONDS_PER_INCH -> d
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> c
    34:42:void <init>() -> <init>
    int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> a
    int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    65:74:boolean onFling(int,int) -> a
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> a
    182:197:void snapToTargetExistingView() -> a
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    123:125:void destroyCallbacks() -> b
    137:142:int[] calculateScrollDistance(int,int) -> b
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    224:227:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    112:113:void setupCallbacks() -> c
androidx.recyclerview.widget.SnapHelper$1 -> a.q.b.b0$a:
    boolean mScrolled -> a
    androidx.recyclerview.widget.SnapHelper this$0 -> b
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> a.q.b.b0$b:
    androidx.recyclerview.widget.SnapHelper this$0 -> a
    227:227:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    246:246:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    230:242:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.SortedList -> a.q.b.c0:
    int DELETION -> n
    int LOOKUP -> o
    int CAPACITY_GROWTH -> l
    java.lang.Object[] mOldData -> b
    int INSERTION -> m
    int INVALID_POSITION -> j
    int MIN_CAPACITY -> k
    java.lang.Object[] mData -> a
    java.lang.Class mTClass -> i
    androidx.recyclerview.widget.SortedList$BatchedCallback mBatchedCallback -> g
    int mSize -> h
    int mOldDataSize -> d
    int mNewDataStart -> e
    int mOldDataStart -> c
    androidx.recyclerview.widget.SortedList$Callback mCallback -> f
    91:92:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    101:106:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    143:144:int add(java.lang.Object) -> a
    162:172:void addAll(java.lang.Object[],boolean) -> a
    182:183:void addAll(java.lang.Object[]) -> a
    193:195:void addAll(java.util.Collection) -> a
    396:401:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> a
    408:465:void merge(java.lang.Object[],int) -> a
    518:526:void beginBatchedUpdates() -> a
    542:563:int add(java.lang.Object,boolean) -> a
    602:608:void removeItemAtIndex(int,boolean) -> a
    631:655:void updateItemAt(int,java.lang.Object) -> a
    705:706:java.lang.Object get(int) -> a
    743:764:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> a
    769:789:int linearEqualitySearch(java.lang.Object,int,int,int) -> a
    217:224:void replaceAll(java.lang.Object[],boolean) -> b
    235:236:void replaceAll(java.lang.Object[]) -> b
    247:249:void replaceAll(java.util.Collection) -> b
    593:598:boolean remove(java.lang.Object,boolean) -> b
    685:693:void recalculatePositionOfItemAt(int) -> b
    728:739:int indexOf(java.lang.Object) -> b
    793:794:void addToData(int,java.lang.Object) -> b
    822:830:void clear() -> b
    252:265:void addAllInternal(java.lang.Object[]) -> c
    532:539:void endBatchedUpdates() -> c
    574:575:boolean remove(java.lang.Object) -> c
    586:589:java.lang.Object removeItemAt(int) -> c
    114:114:int size() -> d
    334:338:void replaceAllInsert(java.lang.Object) -> d
    813:815:java.lang.Object[] copyArray(java.lang.Object[]) -> d
    268:324:void replaceAllInternal(java.lang.Object[]) -> e
    341:344:void replaceAllRemove() -> e
    353:391:int sortAndDedup(java.lang.Object[]) -> f
    479:480:void throwIfInMutationOperation() -> f
androidx.recyclerview.widget.SortedList$BatchedCallback -> a.q.b.c0$a:
    androidx.recyclerview.widget.SortedList$Callback mWrappedCallback -> b
    androidx.recyclerview.widget.BatchingListUpdateCallback mBatchingListUpdateCallback -> c
    951:954:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    968:969:void onRemoved(int,int) -> a
    983:984:void onChanged(int,int,java.lang.Object) -> a
    988:988:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> a
    1007:1008:void dispatchLastEvent() -> a
    963:964:void onInserted(int,int) -> b
    993:993:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> b
    973:974:void onMoved(int,int) -> c
    999:999:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> c
    958:958:int compare(java.lang.Object,java.lang.Object) -> compare
    978:979:void onChanged(int,int) -> d
androidx.recyclerview.widget.SortedList$Callback -> a.q.b.c0$b:
    840:840:void <init>() -> <init>
    boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> a
    866:867:void onChanged(int,int,java.lang.Object) -> a
    boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> b
    920:920:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> c
    void onChanged(int,int) -> d
androidx.recyclerview.widget.SortedListAdapterCallback -> a.q.b.d0:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> b
    33:35:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    44:45:void onRemoved(int,int) -> a
    59:60:void onChanged(int,int,java.lang.Object) -> a
    39:40:void onInserted(int,int) -> b
    49:50:void onMoved(int,int) -> c
    54:55:void onChanged(int,int) -> d
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    int mGapStrategy -> n
    int[] mPrefetchDistances -> w
    int mPendingScrollPositionOffset -> l
    boolean mLastLayoutFromEnd -> o
    boolean mShouldReverseLayout -> i
    java.util.BitSet mRemainingSpans -> j
    java.lang.Runnable mCheckForGapsRunnable -> x
    int mSizePerSpan -> f
    boolean mLaidOutInvalidFullSpan -> u
    int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS -> E
    androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> q
    int GAP_HANDLING_NONE -> C
    int HORIZONTAL -> A
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> m
    androidx.recyclerview.widget.LayoutState mLayoutState -> g
    androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation -> d
    boolean mReverseLayout -> h
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> b
    boolean mLastLayoutRTL -> p
    androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> t
    float MAX_SCROLL_FACTOR -> G
    int mPendingScrollPosition -> k
    int INVALID_OFFSET -> F
    boolean mSmoothScrollbarEnabled -> v
    int GAP_HANDLING_LAZY -> D
    int mOrientation -> e
    int VERTICAL -> B
    int mSpanCount -> a
    java.lang.String TAG -> y
    boolean DEBUG -> z
    androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation -> c
    int mFullSizeSpec -> r
    android.graphics.Rect mTmpRect -> s
    229:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    245:250:void <init>(int,int) -> <init>
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    513:524:void setGapStrategy(int) -> a
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    849:850:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    990:993:int[] findFirstCompletelyVisibleItemPositions(int[]) -> a
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> a
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    1387:1406:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> a
    1411:1420:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1531:1571:void handleUpdate(int,int,int) -> a
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> a
    1750:1763:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> a
    1766:1767:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> a
    1806:1809:void appendViewToAllSpans(android.view.View) -> a
    1819:1825:void updateAllRemainingSpans(int,int) -> a
    1828:1840:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> a
    1865:1871:boolean areAllEndsEqual() -> a
    1936:1964:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> a
    1980:2016:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> a
    2160:2172:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> a
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    429:440:void setSpanCount(int) -> b
    822:833:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> b
    958:961:int[] findFirstVisibleItemPositions(int[]) -> b
    1209:1214:int updateSpecWithExtra(int,int,int) -> b
    1357:1377:android.view.View findFirstVisibleItemClosestToStart(boolean) -> b
    1430:1439:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1448:1476:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> b
    1813:1816:void prependViewToAllSpans(android.view.View) -> b
    1875:1881:boolean areAllStartsEqual() -> b
    1907:1933:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> b
    270:271:boolean checkForGaps() -> c
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> c
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> c
    927:931:void updateMeasureSpecs(int) -> c
    1054:1057:int[] findLastCompletelyVisibleItemPositions(int[]) -> c
    2027:2027:boolean canScrollHorizontally() -> canScrollHorizontally
    2022:2022:boolean canScrollVertically() -> canScrollVertically
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    2123:2126:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1095:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1075:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1115:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2052:2064:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2392:2399:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1022:1025:int[] findLastVisibleItemPositions(int[]) -> d
    1327:1329:int findFirstVisibleItemPositionInt() -> d
    2043:2047:int calculateScrollDirectionForPosition(int) -> d
    1732:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> e
    2208:2209:int getFirstChildPosition() -> e
    500:500:int getGapStrategy() -> f
    1741:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> f
    2203:2204:int getLastChildPosition() -> g
    2218:2226:int findFirstReferenceChildPosition(int) -> g
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2277:2277:int getOrientation() -> getOrientation
    580:580:boolean getReverseLayout() -> getReverseLayout
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    539:539:int getSpanCount() -> h
    2235:2242:int findLastReferenceChildPosition(int) -> h
    339:399:android.view.View hasGapsToFix() -> i
    1885:1892:int getMaxEnd(int) -> i
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    549:551:void invalidateSpanAssignments() -> j
    1843:1850:int getMaxStart(int) -> j
    258:261:void createOrientationHelpers() -> k
    1896:1903:int getMinEnd(int) -> k
    734:780:void repositionToWrapContentIfNecessary() -> l
    1854:1861:int getMinStart(int) -> l
    1970:1973:boolean preferLastSpan(int) -> m
    1479:1482:void setLayoutStateDirection(int) -> n
    1486:1490:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1494:1498:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2284:2378:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1302:1319:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1298:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1507:1508:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1512:1514:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1518:1519:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1502:1503:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1524:1525:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    560:565:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2175:2176:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2077:2083:void scrollToPosition(int) -> scrollToPosition
    2099:2105:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    2070:2073:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$a:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> b
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$b:
    int[] mSpanReferenceLines -> f
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> g
    boolean mValid -> e
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    int mPosition -> a
    boolean mInvalidateOffsets -> d
    3267:3269:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3283:3291:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> a
    3294:3296:void assignCoordinateFromPadding() -> a
    3299:3304:void assignCoordinateFromPadding(int) -> a
    3272:3280:void reset() -> b
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c:
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan -> e
    int INVALID_SPAN_ID -> g
    boolean mFullSpan -> f
    2450:2451:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2455:void <init>(int,int) -> <init>
    2458:2459:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2463:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2466:2467:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2478:2479:void setFullSpan(boolean) -> a
    2498:2501:int getSpanIndex() -> h
    2488:2488:boolean isFullSpan() -> i
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d:
    java.util.List mFullSpanItems -> b
    int[] mData -> a
    int MIN_SIZE -> c
    2838:2838:void <init>() -> <init>
    2890:2892:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    2903:2912:void ensureSize(int) -> a
    2915:2919:void clear() -> a
    2952:2953:void offsetForAddition(int,int) -> a
    3007:3027:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> a
    3051:3066:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> a
    2849:2857:int forceInvalidateAfter(int) -> b
    2922:2923:void offsetForRemoval(int,int) -> b
    2964:2974:void offsetFullSpansForAddition(int,int) -> c
    3030:3039:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> c
    2882:2883:int getSpan(int) -> d
    2934:2949:void offsetFullSpansForRemoval(int,int) -> d
    2864:2877:int invalidateAfter(int) -> e
    2895:2899:int sizeForPosition(int) -> f
    2981:3003:int invalidateFullSpansAfter(int) -> g
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d$a:
    int[] mGapPerSpan -> d
    boolean mHasUnwantedGapAfter -> e
    int mPosition -> b
    int mGapDir -> c
    3129:3129:void <clinit>() -> <clinit>
    3083:3092:void <init>(android.os.Parcel) -> <init>
    3094:3095:void <init>() -> <init>
    3098:3098:int getGapForSpan(int) -> a
    3103:3103:int describeContents() -> describeContents
    3121:3121:java.lang.String toString() -> toString
    3108:3117:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d$a$a:
    3130:3130:void <init>() -> <init>
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$e:
    int[] mSpanLookup -> g
    boolean mReverseLayout -> i
    boolean mAnchorLayoutFromEnd -> j
    boolean mLastLayoutRTL -> k
    int[] mSpanOffsets -> e
    int mSpanLookupSize -> f
    int mSpanOffsetsSize -> d
    java.util.List mFullSpanItems -> h
    int mAnchorPosition -> b
    int mVisibleAnchorPosition -> c
    3239:3239:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3186:void <init>(android.os.Parcel) -> <init>
    3188:3199:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3210:3214:void invalidateAnchorPositionInfo() -> a
    3202:3207:void invalidateSpanInfo() -> b
    3218:3218:int describeContents() -> describeContents
    3223:3237:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$e$a:
    3240:3240:void <init>() -> <init>
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$f:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> f
    int INVALID_LINE -> g
    int mDeletedSize -> d
    int mIndex -> e
    int mCachedStart -> b
    int mCachedEnd -> c
    java.util.ArrayList mViews -> a
    2515:2517:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2553:2561:int getEndLine(int) -> a
    2565:2575:void calculateCachedEnd() -> a
    2600:2610:void appendToSpan(android.view.View) -> a
    2615:2632:void cacheReferenceLineAndClear(boolean,int) -> a
    2756:2783:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> a
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> a
    2801:2830:android.view.View getFocusableViewAfter(int,int) -> a
    2520:2527:int getStartLine(int) -> b
    2531:2541:void calculateCachedStart() -> b
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> b
    2787:2787:int findOneVisibleChild(int,int,boolean) -> b
    2587:2597:void prependToSpan(android.view.View) -> c
    2635:2638:void clear() -> c
    2685:2691:void onOffset(int) -> c
    2646:2647:void setLine(int) -> d
    2706:2706:int findFirstCompletelyVisibleItemPosition() -> d
    2700:2700:int findFirstPartiallyVisibleItemPosition() -> e
    2694:2694:int findFirstVisibleItemPosition() -> f
    2724:2724:int findLastCompletelyVisibleItemPosition() -> g
    2718:2718:int findLastPartiallyVisibleItemPosition() -> h
    2712:2712:int findLastVisibleItemPosition() -> i
    2677:2677:int getDeletedSize() -> j
    2579:2583:int getEndLine() -> k
    2545:2549:int getStartLine() -> l
    2641:2643:void invalidateCache() -> m
    2650:2661:void popEnd() -> n
    2664:2674:void popStart() -> o
androidx.recyclerview.widget.ThreadUtil -> a.q.b.e0:
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> a
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> a
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback -> a.q.b.e0$a:
    void loadTile(int,int) -> a
    void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> a
    void refresh(int) -> a
    void updateRange(int,int,int,int,int) -> a
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback -> a.q.b.e0$b:
    void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> a
    void updateItemCount(int,int) -> a
    void removeTile(int,int) -> b
androidx.recyclerview.widget.TileList -> a.q.b.f0:
    androidx.recyclerview.widget.TileList$Tile mLastAccessedTile -> c
    android.util.SparseArray mTiles -> b
    int mTileSize -> a
    35:37:void <init>(int) -> <init>
    56:57:void clear() -> a
    60:60:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> a
    64:74:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> a
    40:48:java.lang.Object getItemAt(int) -> b
    52:52:int size() -> b
    78:83:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> c
androidx.recyclerview.widget.TileList$Tile -> a.q.b.f0$a:
    java.lang.Object[] mItems -> a
    androidx.recyclerview.widget.TileList$Tile mNext -> d
    int mStartPosition -> b
    int mItemCount -> c
    92:96:void <init>(java.lang.Class,int) -> <init>
    99:99:boolean containsPosition(int) -> a
    103:103:java.lang.Object getByPosition(int) -> b
androidx.recyclerview.widget.ViewBoundsCheck -> a.q.b.g0:
    int CVE_PVS_POS -> n
    int FLAG_CVE_GT_PVS -> o
    int FLAG_CVS_EQ_PVE -> l
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback -> a
    int FLAG_CVS_LT_PVE -> m
    int CVS_PVE_POS -> j
    int FLAG_CVS_GT_PVE -> k
    int FLAG_CVS_EQ_PVS -> h
    int FLAG_CVS_LT_PVS -> i
    int CVS_PVS_POS -> f
    int FLAG_CVS_GT_PVS -> g
    int EQ -> d
    int LT -> e
    int GT -> c
    int MASK -> v
    int FLAG_CVE_EQ_PVE -> t
    androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> b
    int FLAG_CVE_LT_PVE -> u
    int CVE_PVE_POS -> r
    int FLAG_CVE_GT_PVE -> s
    int FLAG_CVE_EQ_PVS -> p
    int FLAG_CVE_LT_PVS -> q
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> a
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> a
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> a.q.b.g0$a:
    int mChildStart -> d
    int mChildEnd -> e
    int mRvStart -> b
    int mRvEnd -> c
    int mBoundFlags -> a
    136:137:void <init>() -> <init>
    141:145:void setBounds(int,int,int,int) -> a
    148:149:void addFlags(int) -> a
    156:162:int compare(int,int) -> a
    166:189:boolean boundsMatch() -> a
    152:153:void resetFlags() -> b
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> a.q.b.g0$b:
    android.view.View getChildAt(int) -> a
    int getChildEnd(android.view.View) -> a
    int getParentEnd() -> a
    int getChildStart(android.view.View) -> b
    int getParentStart() -> b
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds -> a.q.b.g0$c:
androidx.recyclerview.widget.ViewInfoStore -> a.q.b.h0:
    androidx.collection.SimpleArrayMap mLayoutHolderMap -> a
    androidx.collection.LongSparseArray mOldChangedHolders -> b
    boolean DEBUG -> c
    36:47:void <init>() -> <init>
    54:56:void clear() -> a
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> a
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> a
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    273:274:void onDetach() -> b
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> a.q.b.h0$a:
    androidx.core.util.Pools$Pool sPool -> k
    int FLAG_APPEAR_PRE_AND_POST -> j
    int FLAG_APPEAR_AND_DISAPPEAR -> h
    int FLAG_PRE_AND_POST -> i
    int FLAG_PRE -> f
    int FLAG_POST -> g
    int FLAG_DISAPPEARED -> d
    int FLAG_APPEAR -> e
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> b
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> c
    int flags -> a
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> a
    326:327:void drainCache() -> a
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> b
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> a.q.b.h0$b:
    void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
androidx.savedstate.R -> a.r.a:
    668:668:void <init>() -> <init>
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    java.lang.String COMPONENT_KEY -> c
    java.lang.String CLASSES_KEY -> b
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
    71:74:void reflectiveNew(java.lang.String) -> a
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$a:
    java.util.Set mClasses -> a
    99:101:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    106:108:android.os.Bundle saveState() -> a
    112:113:void add(java.lang.String) -> a
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    java.lang.String SAVED_COMPONENTS_KEY -> f
    android.os.Bundle mRestoredState -> b
    androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider -> d
    boolean mAllowingSavingState -> e
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
    boolean mRestored -> c
    52:53:void <init>() -> <init>
    76:77:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> a
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> a
    134:134:boolean isRestored() -> a
    167:168:void runOnNextRecreation(java.lang.Class) -> a
    190:191:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> a
    220:230:void performSave(android.os.Bundle) -> a
    123:124:void unregisterSavedStateProvider(java.lang.String) -> b
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.savedstate.SavedStateRegistry$AutoRecreated -> androidx.savedstate.SavedStateRegistry$a:
    void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> a
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> androidx.savedstate.SavedStateRegistry$b:
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> a.r.b:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> a
    56:58:void performRestore(android.os.Bundle) -> a
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> a
    74:75:void performSave(android.os.Bundle) -> b
androidx.savedstate.SavedStateRegistryOwner -> a.r.c:
androidx.transition.AnimatorUtils -> a.s.a:
    81:82:void <init>() -> <init>
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> a
    37:50:void pause(android.animation.Animator) -> a
    53:66:void resume(android.animation.Animator) -> b
androidx.transition.AnimatorUtils$AnimatorPauseListenerCompat -> a.s.a$a:
androidx.transition.ArcMotion -> a.s.b:
    float DEFAULT_MAX_TANGENT -> i
    float DEFAULT_MAX_ANGLE_DEGREES -> h
    float DEFAULT_MIN_ANGLE_DEGREES -> g
    float mMaximumTangent -> f
    float mMinimumVerticalTangent -> e
    float mMinimumHorizontalTangent -> d
    float mMaximumAngle -> c
    float mMinimumVerticalAngle -> b
    float mMinimumHorizontalAngle -> a
    55:55:void <clinit>() -> <clinit>
    65:66:void <init>() -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    159:161:void setMaximumAngle(float) -> a
    173:173:float getMaximumAngle() -> a
    201:277:android.graphics.Path getPath(float,float,float,float) -> a
    100:102:void setMinimumHorizontalAngle(float) -> b
    115:115:float getMinimumHorizontalAngle() -> b
    130:132:void setMinimumVerticalAngle(float) -> c
    146:146:float getMinimumVerticalAngle() -> c
    177:178:float toTangent(float) -> d
androidx.transition.AutoTransition -> a.s.c:
    37:39:void <init>() -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void init() -> c
androidx.transition.CanvasUtils -> a.s.d:
    java.lang.reflect.Method sReorderBarrierMethod -> a
    boolean sOrderMethodsFetched -> c
    java.lang.reflect.Method sInorderBarrierMethod -> b
    81:82:void <init>() -> <init>
    41:51:void enableZ(android.graphics.Canvas,boolean) -> a
androidx.transition.ChangeBounds -> a.s.e:
    java.lang.String PROPNAME_PARENT -> g
    java.lang.String PROPNAME_CLIP -> f
    java.lang.String PROPNAME_WINDOW_Y -> i
    java.lang.String PROPNAME_WINDOW_X -> h
    int[] mTempLocation -> b
    java.lang.String[] sTransitionProperties -> j
    android.util.Property BOTTOM_RIGHT_PROPERTY -> m
    android.util.Property BOTTOM_RIGHT_ONLY_PROPERTY -> n
    android.util.Property DRAWABLE_ORIGIN_PROPERTY -> k
    android.util.Property TOP_LEFT_PROPERTY -> l
    androidx.transition.RectEvaluator sRectEvaluator -> q
    java.lang.String PROPNAME_BOUNDS -> e
    android.util.Property TOP_LEFT_ONLY_PROPERTY -> o
    boolean mResizeClip -> c
    android.util.Property POSITION_PROPERTY -> p
    boolean mReparent -> d
    61:168:void <clinit>() -> <clinit>
    170:171:void <init>() -> <init>
    176:183:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    205:206:void setResizeClip(boolean) -> a
    216:216:boolean getResizeClip() -> a
    248:257:boolean parentMatches(android.view.View,android.view.View) -> a
    244:245:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:240:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:235:void captureValues(androidx.transition.TransitionValues) -> captureValues
    264:265:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeBounds$1 -> a.s.e$b:
    android.graphics.Rect mBounds -> a
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    75:78:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> a
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> a
    70:70:java.lang.Object get(java.lang.Object) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$10 -> a.s.e$a:
    android.view.ViewGroup val$sceneRoot -> a
    androidx.transition.ChangeBounds this$0 -> e
    android.graphics.drawable.BitmapDrawable val$drawable -> b
    float val$transitionAlpha -> d
    android.view.View val$view -> c
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:453:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> a.s.e$c:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    91:92:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> a
    96:96:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> a
    88:88:java.lang.Object get(java.lang.Object) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$3 -> a.s.e$d:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    104:105:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> a
    109:109:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> a
    101:101:java.lang.Object get(java.lang.Object) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$4 -> a.s.e$e:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    117:122:void set(android.view.View,android.graphics.PointF) -> a
    126:126:android.graphics.PointF get(android.view.View) -> a
    114:114:java.lang.Object get(java.lang.Object) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$5 -> a.s.e$f:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    134:139:void set(android.view.View,android.graphics.PointF) -> a
    143:143:android.graphics.PointF get(android.view.View) -> a
    131:131:java.lang.Object get(java.lang.Object) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$6 -> a.s.e$g:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    151:156:void set(android.view.View,android.graphics.PointF) -> a
    160:160:android.graphics.PointF get(android.view.View) -> a
    148:148:java.lang.Object get(java.lang.Object) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeBounds$7 -> a.s.e$h:
    androidx.transition.ChangeBounds this$0 -> b
    androidx.transition.ChangeBounds$ViewBounds val$viewBounds -> a
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> a.s.e$i:
    androidx.transition.ChangeBounds this$0 -> h
    int val$endRight -> f
    int val$endBottom -> g
    int val$endLeft -> d
    android.view.View val$view -> b
    int val$endTop -> e
    boolean mIsCanceled -> a
    android.graphics.Rect val$finalClip -> c
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:376:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:385:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> a.s.e$j:
    android.view.ViewGroup val$parent -> b
    androidx.transition.ChangeBounds this$0 -> c
    boolean mCanceled -> a
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    413:414:void onTransitionPause(androidx.transition.Transition) -> a
    418:419:void onTransitionResume(androidx.transition.Transition) -> b
    399:401:void onTransitionCancel(androidx.transition.Transition) -> d
    405:409:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.ChangeBounds$ViewBounds -> a.s.e$k:
    int mTopLeftCalls -> f
    int mBottomRightCalls -> g
    int mBottom -> d
    int mTop -> b
    android.view.View mView -> e
    int mRight -> c
    int mLeft -> a
    471:473:void <init>(android.view.View) -> <init>
    485:491:void setBottomRight(android.graphics.PointF) -> a
    494:497:void setLeftTopRightBottom() -> a
    476:482:void setTopLeft(android.graphics.PointF) -> b
androidx.transition.ChangeClipBounds -> a.s.f:
    java.lang.String[] sTransitionProperties -> d
    java.lang.String PROPNAME_BOUNDS -> c
    java.lang.String PROPNAME_CLIP -> b
    42:42:void <clinit>() -> <clinit>
    51:52:void <init>() -> <init>
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:80:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    74:75:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    59:70:void captureValues(androidx.transition.TransitionValues) -> captureValues
    85:88:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    48:48:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeClipBounds$1 -> a.s.f$a:
    android.view.View val$endView -> a
    androidx.transition.ChangeClipBounds this$0 -> b
    112:112:void <init>(androidx.transition.ChangeClipBounds,android.view.View) -> <init>
    115:116:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeImageTransform -> a.s.g:
    android.util.Property ANIMATED_TRANSFORM_PROPERTY -> f
    java.lang.String[] sTransitionProperties -> d
    android.animation.TypeEvaluator NULL_MATRIX_EVALUATOR -> e
    java.lang.String PROPNAME_BOUNDS -> c
    java.lang.String PROPNAME_MATRIX -> b
    49:61:void <clinit>() -> <clinit>
    74:75:void <init>() -> <init>
    78:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    180:180:android.animation.ObjectAnimator createMatrixAnimator(android.widget.ImageView,android.graphics.Matrix,android.graphics.Matrix) -> a
    216:235:android.graphics.Matrix centerCropMatrix(android.widget.ImageView) -> a
    186:195:android.graphics.Matrix copyImageMatrix(android.widget.ImageView) -> b
    174:174:android.animation.ObjectAnimator createNullAnimator(android.widget.ImageView) -> c
    110:111:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    105:106:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    82:84:void captureValues(androidx.transition.TransitionValues) -> captureValues
    131:132:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    203:208:android.graphics.Matrix fitXYMatrix(android.widget.ImageView) -> d
    115:115:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeImageTransform$1 -> a.s.g$a:
    54:54:void <init>() -> <init>
    57:57:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> a
    54:54:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.transition.ChangeImageTransform$2 -> a.s.g$b:
    62:62:void <init>(java.lang.Class,java.lang.String) -> <init>
    65:66:void set(android.widget.ImageView,android.graphics.Matrix) -> a
    70:70:android.graphics.Matrix get(android.widget.ImageView) -> a
    62:62:java.lang.Object get(java.lang.Object) -> get
    62:62:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeImageTransform$3 -> a.s.g$c:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
    188:188:void <clinit>() -> <clinit>
androidx.transition.ChangeScroll -> a.s.h:
    java.lang.String[] PROPERTIES -> d
    java.lang.String PROPNAME_SCROLL_Y -> c
    java.lang.String PROPNAME_SCROLL_X -> b
    39:39:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:58:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    52:53:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    67:69:void captureValues(androidx.transition.TransitionValues) -> captureValues
    75:76:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    63:63:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeTransform -> a.s.i:
    java.lang.String PROPNAME_PARENT -> g
    java.lang.String PROPNAME_TRANSFORMS -> f
    boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION -> n
    java.lang.String PROPNAME_INTERMEDIATE_PARENT_MATRIX -> i
    java.lang.String PROPNAME_PARENT_MATRIX -> h
    java.lang.String PROPNAME_INTERMEDIATE_MATRIX -> j
    java.lang.String[] sTransitionProperties -> k
    android.util.Property TRANSLATIONS_PROPERTY -> m
    android.graphics.Matrix mTempMatrix -> d
    android.util.Property NON_TRANSLATIONS_PROPERTY -> l
    boolean mUseOverlay -> b
    java.lang.String PROPNAME_MATRIX -> e
    boolean mReparent -> c
    60:101:void <clinit>() -> <clinit>
    108:109:void <init>() -> <init>
    114:121:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    175:175:boolean getReparent() -> a
    188:189:void setReparent(boolean) -> a
    286:370:android.animation.ObjectAnimator createTransformAnimator(androidx.transition.TransitionValues,androidx.transition.TransitionValues,boolean) -> a
    374:383:boolean parentsMatch(android.view.ViewGroup,android.view.ViewGroup) -> a
    388:418:void createGhostView(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    421:437:void setMatricesForParent(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    441:442:void setIdentityTransforms(android.view.View) -> a
    448:456:void setTransforms(android.view.View,float,float,float,float,float,float,float,float) -> a
    141:141:boolean getReparentWithOverlay() -> b
    163:164:void setReparentWithOverlay(boolean) -> b
    238:239:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    226:234:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    197:222:void captureValues(androidx.transition.TransitionValues) -> captureValues
    244:247:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    193:193:java.lang.String[] getTransitionProperties() -> getTransitionProperties
androidx.transition.ChangeTransform$1 -> a.s.i$a:
    70:70:void <init>(java.lang.Class,java.lang.String) -> <init>
    73:73:float[] get(androidx.transition.ChangeTransform$PathAnimatorMatrix) -> a
    78:79:void set(androidx.transition.ChangeTransform$PathAnimatorMatrix,float[]) -> a
    70:70:java.lang.Object get(java.lang.Object) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeTransform$2 -> a.s.i$b:
    86:86:void <init>(java.lang.Class,java.lang.String) -> <init>
    89:89:android.graphics.PointF get(androidx.transition.ChangeTransform$PathAnimatorMatrix) -> a
    94:95:void set(androidx.transition.ChangeTransform$PathAnimatorMatrix,android.graphics.PointF) -> a
    86:86:java.lang.Object get(java.lang.Object) -> get
    86:86:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ChangeTransform$3 -> a.s.i$c:
    androidx.transition.ChangeTransform$Transforms val$transforms -> f
    android.graphics.Matrix val$finalEndMatrix -> d
    androidx.transition.ChangeTransform this$0 -> h
    android.graphics.Matrix mTempMatrix -> b
    boolean mIsCanceled -> a
    android.view.View val$view -> e
    androidx.transition.ChangeTransform$PathAnimatorMatrix val$pathAnimatorMatrix -> g
    boolean val$handleParentChange -> c
    327:329:void <init>(androidx.transition.ChangeTransform,boolean,android.graphics.Matrix,android.view.View,androidx.transition.ChangeTransform$Transforms,androidx.transition.ChangeTransform$PathAnimatorMatrix) -> <init>
    362:365:void setCurrentMatrix(android.graphics.Matrix) -> a
    333:334:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    338:348:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    352:354:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    358:359:void onAnimationResume(android.animation.Animator) -> onAnimationResume
androidx.transition.ChangeTransform$GhostListener -> a.s.i$d:
    android.view.View mView -> a
    androidx.transition.GhostView mGhostView -> b
    521:524:void <init>(android.view.View,androidx.transition.GhostView) -> <init>
    536:537:void onTransitionPause(androidx.transition.Transition) -> a
    541:542:void onTransitionResume(androidx.transition.Transition) -> b
    528:532:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.ChangeTransform$PathAnimatorMatrix -> a.s.i$e:
    float mTranslationY -> e
    float mTranslationX -> d
    float[] mValues -> c
    android.view.View mView -> b
    android.graphics.Matrix mMatrix -> a
    559:565:void <init>(android.view.View,float[]) -> <init>
    568:570:void setValues(float[]) -> a
    573:576:void setTranslation(android.graphics.PointF) -> a
    586:586:android.graphics.Matrix getMatrix() -> a
    579:583:void setAnimationMatrix() -> b
androidx.transition.ChangeTransform$Transforms -> a.s.i$f:
    float mRotationZ -> h
    float mRotationY -> g
    float mRotationX -> f
    float mScaleY -> e
    float mScaleX -> d
    float mTranslationZ -> c
    float mTranslationY -> b
    float mTranslationX -> a
    469:478:void <init>(android.view.View) -> <init>
    481:483:void restore(android.view.View) -> a
    487:491:boolean equals(java.lang.Object) -> equals
    503:511:int hashCode() -> hashCode
androidx.transition.CircularPropagation -> a.s.j:
    float mPropagationSpeed -> d
    33:35:void <init>() -> <init>
    50:51:void setPropagationSpeed(float) -> a
    59:97:long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    101:103:float distance(float,float,float,float) -> a
androidx.transition.Explode -> a.s.k:
    int[] mTempLoc -> i
    java.lang.String PROPNAME_SCREEN_BOUNDS -> l
    android.animation.TimeInterpolator sDecelerate -> j
    android.animation.TimeInterpolator sAccelerate -> k
    44:45:void <clinit>() -> <clinit>
    50:52:void <init>() -> <init>
    55:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:94:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    128:164:void calculateOut(android.view.View,android.graphics.Rect,int[]) -> a
    167:169:float calculateMaxDistance(android.view.View,int,int) -> a
    173:173:float calculateDistance(float,float) -> a
    101:123:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    77:79:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    71:73:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    60:67:void captureValues(androidx.transition.TransitionValues) -> captureValues
androidx.transition.Fade -> a.s.l:
    java.lang.String PROPNAME_TRANSITION_ALPHA -> i
    int OUT -> l
    java.lang.String LOG_TAG -> j
    int IN -> k
    91:93:void <init>(int) -> <init>
    98:99:void <init>() -> <init>
    104:111:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    124:143:android.animation.Animator createAnimation(android.view.View,float,float) -> a
    155:159:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    171:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> a
    165:167:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    115:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
androidx.transition.Fade$1 -> a.s.l$a:
    android.view.View val$view -> a
    androidx.transition.Fade this$0 -> b
    135:135:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    138:141:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.Fade$FadeAnimatorListener -> a.s.l$b:
    android.view.View mView -> a
    boolean mLayerTypeChanged -> b
    186:188:void <init>(android.view.View) -> <init>
    201:205:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    192:197:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FloatArrayEvaluator -> a.s.m:
    float[] mArray -> a
    39:41:void <init>(float[]) -> <init>
    57:67:float[] evaluate(float,float[],float[]) -> a
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.transition.FragmentTransitionSupport -> a.s.n:
    42:42:void <init>() -> <init>
    46:46:boolean canHandle(java.lang.Object) -> a
    102:123:void addTargets(java.lang.Object,java.util.ArrayList) -> a
    126:126:boolean hasSimpleTarget(androidx.transition.Transition) -> a
    150:178:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    185:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    213:214:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    221:241:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    257:279:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    283:287:void addTarget(java.lang.Object,android.view.View) -> a
    299:311:void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    51:55:java.lang.Object cloneTransition(java.lang.Object) -> b
    71:82:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    134:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    246:252:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
    291:295:void removeTarget(java.lang.Object,android.view.View) -> b
    60:65:java.lang.Object wrapTransitionInSet(java.lang.Object) -> c
    86:98:void setEpicenter(java.lang.Object,android.view.View) -> c
androidx.transition.FragmentTransitionSupport$1 -> a.s.n$a:
    androidx.transition.FragmentTransitionSupport this$0 -> b
    android.graphics.Rect val$epicenter -> a
    91:91:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
    94:94:android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> a
androidx.transition.FragmentTransitionSupport$2 -> a.s.n$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    androidx.transition.FragmentTransitionSupport this$0 -> c
    151:151:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    172:172:void onTransitionPause(androidx.transition.Transition) -> a
    176:176:void onTransitionResume(androidx.transition.Transition) -> b
    154:154:void onTransitionStart(androidx.transition.Transition) -> c
    168:168:void onTransitionCancel(androidx.transition.Transition) -> d
    158:164:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.FragmentTransitionSupport$3 -> a.s.n$c:
    androidx.transition.FragmentTransitionSupport this$0 -> g
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    222:222:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    225:234:void onTransitionStart(androidx.transition.Transition) -> c
    238:239:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.FragmentTransitionSupport$4 -> a.s.n$d:
    androidx.transition.FragmentTransitionSupport this$0 -> b
    android.graphics.Rect val$epicenter -> a
    301:301:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
    304:305:android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> a
androidx.transition.GhostView -> a.s.o:
    void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> a
androidx.transition.GhostViewHolder -> a.s.p:
    android.view.ViewGroup mParent -> b
    boolean mAttached -> c
    38:44:void <init>(android.view.ViewGroup) -> <init>
    69:69:androidx.transition.GhostViewHolder getHolder(android.view.ViewGroup) -> a
    73:74:void popToOverlayTop() -> a
    88:97:void addGhostView(androidx.transition.GhostViewPort) -> a
    105:121:int getInsertIndex(java.util.ArrayList) -> a
    132:135:boolean isOnTop(java.util.ArrayList,java.util.ArrayList) -> a
    156:161:void getParents(android.view.View,java.util.ArrayList) -> a
    169:197:boolean isOnTop(android.view.View,android.view.View) -> a
    48:49:void onViewAdded(android.view.View) -> onViewAdded
    56:66:void onViewRemoved(android.view.View) -> onViewRemoved
androidx.transition.GhostViewPlatform -> a.s.q:
    boolean sRemoveGhostMethodFetched -> i
    java.lang.reflect.Method sRemoveGhostMethod -> h
    boolean sGhostViewClassFetched -> e
    boolean sAddGhostMethodFetched -> g
    java.lang.reflect.Method sAddGhostMethod -> f
    android.view.View mGhostView -> b
    java.lang.String TAG -> c
    java.lang.Class sGhostViewClass -> d
    73:75:void <init>(android.view.View) -> <init>
    43:54:androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> a
    58:68:void removeGhost(android.view.View) -> a
    85:85:void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> a
    99:110:void fetchAddGhostMethod() -> a
    88:96:void fetchGhostViewClass() -> b
    113:123:void fetchRemoveGhostMethod() -> c
    79:80:void setVisibility(int) -> setVisibility
androidx.transition.GhostViewPort -> a.s.r:
    android.view.ViewGroup mStartParent -> b
    android.graphics.Matrix mMatrix -> f
    android.view.ViewTreeObserver$OnPreDrawListener mOnPreDrawListener -> g
    android.view.View mStartView -> c
    int mReferences -> e
    android.view.View mView -> d
    68:72:void <init>(android.view.View) -> <init>
    89:90:void setMatrix(android.graphics.Matrix) -> a
    94:96:void reserveEndViewTransition(android.view.ViewGroup,android.view.View) -> a
    139:144:void copySize(android.view.View,android.view.View) -> a
    147:147:androidx.transition.GhostViewPort getGhostView(android.view.View) -> a
    151:152:void setGhostView(android.view.View,androidx.transition.GhostViewPort) -> a
    163:164:androidx.transition.GhostViewPort addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> a
    155:160:void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> b
    201:209:void removeGhost(android.view.View) -> b
    100:109:void onAttachedToWindow() -> onAttachedToWindow
    113:120:void onDetachedFromWindow() -> onDetachedFromWindow
    124:136:void onDraw(android.graphics.Canvas) -> onDraw
    86:86:void onLayout(boolean,int,int,int,int) -> onLayout
    76:81:void setVisibility(int) -> setVisibility
androidx.transition.GhostViewPort$1 -> a.s.r$a:
    androidx.transition.GhostViewPort this$0 -> b
    52:52:void <init>(androidx.transition.GhostViewPort) -> <init>
    56:63:boolean onPreDraw() -> onPreDraw
androidx.transition.GhostViewUtils -> a.s.s:
    49:50:void <init>() -> <init>
    32:36:androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix) -> a
    41:47:void removeGhost(android.view.View) -> a
androidx.transition.ImageViewUtils -> a.s.t:
    java.lang.reflect.Field sDrawMatrixField -> b
    boolean sTryHiddenAnimateTransform -> a
    boolean sDrawMatrixFieldFetched -> c
    36:36:void <clinit>() -> <clinit>
    111:112:void <init>() -> <init>
    45:83:void animateTransform(android.widget.ImageView,android.graphics.Matrix) -> a
    100:109:void fetchDrawMatrixField() -> a
    88:97:void hiddenAnimateTransform(android.widget.ImageView,android.graphics.Matrix) -> b
androidx.transition.MatrixUtils -> a.s.u:
    android.graphics.Matrix IDENTITY_MATRIX -> a
    24:24:void <clinit>() -> <clinit>
    207:208:void <init>() -> <init>
androidx.transition.MatrixUtils$1 -> a.s.u$a:
    24:24:void <init>() -> <init>
    27:27:void oops() -> a
    183:184:boolean postConcat(android.graphics.Matrix) -> postConcat
    159:160:boolean postRotate(float,float,float) -> postRotate
    165:166:boolean postRotate(float) -> postRotate
    147:148:boolean postScale(float,float,float,float) -> postScale
    153:154:boolean postScale(float,float) -> postScale
    171:172:boolean postSkew(float,float,float,float) -> postSkew
    177:178:boolean postSkew(float,float) -> postSkew
    141:142:boolean postTranslate(float,float) -> postTranslate
    135:136:boolean preConcat(android.graphics.Matrix) -> preConcat
    111:112:boolean preRotate(float,float,float) -> preRotate
    117:118:boolean preRotate(float) -> preRotate
    99:100:boolean preScale(float,float,float,float) -> preScale
    105:106:boolean preScale(float,float) -> preScale
    123:124:boolean preSkew(float,float,float,float) -> preSkew
    129:130:boolean preSkew(float,float) -> preSkew
    93:94:boolean preTranslate(float,float) -> preTranslate
    37:38:void reset() -> reset
    32:33:void set(android.graphics.Matrix) -> set
    87:88:boolean setConcat(android.graphics.Matrix,android.graphics.Matrix) -> setConcat
    196:197:boolean setPolyToPoly(float[],int,float[],int,int) -> setPolyToPoly
    189:190:boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit) -> setRectToRect
    57:58:void setRotate(float,float,float) -> setRotate
    62:63:void setRotate(float) -> setRotate
    47:48:void setScale(float,float,float,float) -> setScale
    52:53:void setScale(float,float) -> setScale
    67:68:void setSinCos(float,float,float,float) -> setSinCos
    72:73:void setSinCos(float,float) -> setSinCos
    77:78:void setSkew(float,float,float,float) -> setSkew
    82:83:void setSkew(float,float) -> setSkew
    42:43:void setTranslate(float,float) -> setTranslate
    202:203:void setValues(float[]) -> setValues
androidx.transition.ObjectAnimatorUtils -> a.s.v:
    34:35:void <init>() -> <init>
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> a
androidx.transition.PathMotion -> a.s.w:
    43:44:void <init>() -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    android.graphics.Path getPath(float,float,float,float) -> a
androidx.transition.PathProperty -> a.s.x:
    float mCurrentFraction -> f
    float mPathLength -> c
    float[] mPosition -> d
    android.util.Property mProperty -> a
    android.graphics.PathMeasure mPathMeasure -> b
    android.graphics.PointF mPointF -> e
    45:49:void <init>(android.util.Property,android.graphics.Path) -> <init>
    58:63:void set(java.lang.Object,java.lang.Float) -> a
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.PatternPathMotion -> a.s.y:
    android.graphics.Path mOriginalPatternPath -> a
    android.graphics.Matrix mTempMatrix -> c
    android.graphics.Path mPatternPath -> b
    54:57:void <init>() -> <init>
    61:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:86:void <init>(android.graphics.Path) -> <init>
    96:96:android.graphics.Path getPatternPath() -> a
    107:131:void setPatternPath(android.graphics.Path) -> a
    135:145:android.graphics.Path getPath(float,float,float,float) -> a
    149:149:float distance(float,float) -> a
androidx.transition.PropertyValuesHolderUtils -> a.s.z:
    44:45:void <init>() -> <init>
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> a
androidx.transition.R -> a.s.a0:
    668:668:void <init>() -> <init>
androidx.transition.R$attr -> a.s.a0$a:
    455:455:void <init>() -> <init>
androidx.transition.R$color -> a.s.a0$b:
    471:471:void <init>() -> <init>
androidx.transition.R$dimen -> a.s.a0$c:
    750:750:void <init>() -> <init>
androidx.transition.R$drawable -> a.s.a0$d:
    806:806:void <init>() -> <init>
androidx.transition.R$id -> a.s.a0$e:
    785:785:void <init>() -> <init>
androidx.transition.R$integer -> a.s.a0$f:
    855:855:void <init>() -> <init>
androidx.transition.R$layout -> a.s.a0$g:
    304:304:void <init>() -> <init>
androidx.transition.R$string -> a.s.a0$h:
    612:612:void <init>() -> <init>
androidx.transition.R$style -> a.s.a0$i:
    565:565:void <init>() -> <init>
androidx.transition.R$styleable -> a.s.a0$j:
    91:174:void <clinit>() -> <clinit>
    816:816:void <init>() -> <init>
androidx.transition.RectEvaluator -> a.s.b0:
    android.graphics.Rect mRect -> a
    39:40:void <init>() -> <init>
    52:54:void <init>(android.graphics.Rect) -> <init>
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> a
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.transition.Scene -> a.s.c0:
    android.content.Context mContext -> a
    java.lang.Runnable mEnterAction -> e
    android.view.ViewGroup mSceneRoot -> c
    java.lang.Runnable mExitAction -> f
    int mLayoutId -> b
    android.view.View mLayout -> d
    89:91:void <init>(android.view.ViewGroup) -> <init>
    108:112:void <init>(android.view.ViewGroup,int,android.content.Context) -> <init>
    124:127:void <init>(android.view.ViewGroup,android.view.View) -> <init>
    63:75:androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context) -> a
    168:185:void enter() -> a
    196:197:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> a
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> a
    230:231:void setEnterAction(java.lang.Runnable) -> a
    149:154:void exit() -> b
    250:251:void setExitAction(java.lang.Runnable) -> b
    138:138:android.view.ViewGroup getSceneRoot() -> c
    259:259:boolean isCreatedFromLayoutResource() -> d
androidx.transition.SidePropagation -> a.s.d0:
    float mPropagationSpeed -> d
    int mSide -> e
    34:37:void <init>() -> <init>
    51:52:void setSide(int) -> a
    67:68:void setPropagationSpeed(float) -> a
    76:119:long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    125:151:int distance(android.view.View,int,int,int,int,int,int,int,int) -> a
    155:160:int getMaxDistance(android.view.ViewGroup) -> a
androidx.transition.Slide -> a.s.e0:
    androidx.transition.Slide$CalculateSlide sCalculateBottom -> s
    androidx.transition.Slide$CalculateSlide mSlideCalculator -> i
    int mSlideEdge -> j
    java.lang.String PROPNAME_SCREEN_POSITION -> m
    androidx.transition.Slide$CalculateSlide sCalculateLeft -> n
    androidx.transition.Slide$CalculateSlide sCalculateRight -> q
    android.animation.TimeInterpolator sDecelerate -> k
    androidx.transition.Slide$CalculateSlide sCalculateEnd -> r
    android.animation.TimeInterpolator sAccelerate -> l
    androidx.transition.Slide$CalculateSlide sCalculateStart -> o
    androidx.transition.Slide$CalculateSlide sCalculateTop -> p
    55:144:void <clinit>() -> <clinit>
    155:157:void <init>() -> <init>
    162:164:void <init>(int) -> <init>
    169:176:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    250:258:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    206:232:void setSlideEdge(int) -> b
    244:244:int getSlideEdge() -> b
    266:274:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    193:195:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    187:189:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    179:183:void captureValues(androidx.transition.TransitionValues) -> captureValues
androidx.transition.Slide$1 -> a.s.e0$a:
    93:93:void <init>() -> <init>
    96:96:float getGoneX(android.view.ViewGroup,android.view.View) -> a
androidx.transition.Slide$2 -> a.s.e0$b:
    100:100:void <init>() -> <init>
    103:111:float getGoneX(android.view.ViewGroup,android.view.View) -> a
androidx.transition.Slide$3 -> a.s.e0$c:
    115:115:void <init>() -> <init>
    118:118:float getGoneY(android.view.ViewGroup,android.view.View) -> b
androidx.transition.Slide$4 -> a.s.e0$d:
    122:122:void <init>() -> <init>
    125:125:float getGoneX(android.view.ViewGroup,android.view.View) -> a
androidx.transition.Slide$5 -> a.s.e0$e:
    129:129:void <init>() -> <init>
    132:140:float getGoneX(android.view.ViewGroup,android.view.View) -> a
androidx.transition.Slide$6 -> a.s.e0$f:
    144:144:void <init>() -> <init>
    147:147:float getGoneY(android.view.ViewGroup,android.view.View) -> b
androidx.transition.Slide$CalculateSlide -> a.s.e0$g:
    float getGoneX(android.view.ViewGroup,android.view.View) -> a
    float getGoneY(android.view.ViewGroup,android.view.View) -> b
androidx.transition.Slide$CalculateSlideHorizontal -> a.s.e0$h:
    77:77:void <init>() -> <init>
    77:77:void <init>(androidx.transition.Slide$1) -> <init>
    81:81:float getGoneY(android.view.ViewGroup,android.view.View) -> b
androidx.transition.Slide$CalculateSlideVertical -> a.s.e0$i:
    85:85:void <init>() -> <init>
    85:85:void <init>(androidx.transition.Slide$1) -> <init>
    89:89:float getGoneX(android.view.ViewGroup,android.view.View) -> a
androidx.transition.Slide$GravityFlag -> a.s.e0$j:
androidx.transition.Styleable -> a.s.f0:
    int[] FADE -> f
    int[] CHANGE_TRANSFORM -> g
    int[] SLIDE -> h
    int[] TRANSITION_SET -> i
    int[] TRANSITION_MANAGER -> b
    int[] TRANSITION -> c
    int[] CHANGE_BOUNDS -> d
    int[] VISIBILITY_TRANSITION -> e
    int[] TRANSITION_TARGET -> a
    int[] ARC_MOTION -> j
    int[] PATTERN_PATH_MOTION -> k
    30:169:void <clinit>() -> <clinit>
    178:179:void <init>() -> <init>
androidx.transition.Styleable$ArcMotion -> a.s.f0$a:
    int MINIMUM_VERTICAL_ANGLE -> b
    int MAXIMUM_ANGLE -> c
    int MINIMUM_HORIZONTAL_ANGLE -> a
androidx.transition.Styleable$ChangeBounds -> a.s.f0$b:
    int RESIZE_CLIP -> a
androidx.transition.Styleable$ChangeTransform -> a.s.f0$c:
    int REPARENT_WITH_OVERLAY -> b
    int REPARENT -> a
androidx.transition.Styleable$Fade -> a.s.f0$d:
    int FADING_MODE -> a
androidx.transition.Styleable$PatternPathMotion -> a.s.f0$e:
    int PATTERN_PATH_DATA -> a
androidx.transition.Styleable$Slide -> a.s.f0$f:
    int SLIDE_EDGE -> a
androidx.transition.Styleable$Transition -> a.s.f0$g:
    int MATCH_ORDER -> d
    int DURATION -> b
    int START_DELAY -> c
    int INTERPOLATOR -> a
androidx.transition.Styleable$TransitionManager -> a.s.f0$h:
    int TO_SCENE -> b
    int TRANSITION -> c
    int FROM_SCENE -> a
androidx.transition.Styleable$TransitionSet -> a.s.f0$i:
    int TRANSITION_ORDERING -> a
androidx.transition.Styleable$TransitionTarget -> a.s.f0$j:
    int EXCLUDE_NAME -> f
    int EXCLUDE_CLASS -> d
    int TARGET_NAME -> e
    int TARGET_ID -> b
    int EXCLUDE_ID -> c
    int TARGET_CLASS -> a
androidx.transition.Styleable$VisibilityTransition -> a.s.f0$k:
    int TRANSITION_VISIBILITY_MODE -> a
androidx.transition.Transition -> a.s.g0:
    164:205:void <clinit>() -> <clinit>
    263:264:void <init>() -> <init>
    277:301:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2042:2046:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    1000:1001:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    1024:1027:androidx.transition.Transition addTarget(int) -> addTarget
    1049:1053:androidx.transition.Transition addTarget(java.lang.String) -> addTarget
    1079:1083:androidx.transition.Transition addTarget(java.lang.Class) -> addTarget
    647:663:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1532:1569:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    531:537:boolean alreadyContains(int[],int) -> alreadyContains
    1899:1920:void animate(android.animation.Animator) -> animate
    2017:2030:void cancel() -> cancel
    1599:1653:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2189:2205:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1471:1528:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1577:1586:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2224:2232:androidx.transition.Transition clone() -> clone
    489:489:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    710:803:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1958:1982:void end() -> end
    1271:1272:androidx.transition.Transition excludeChildren(android.view.View,boolean) -> excludeChildren
    1301:1302:androidx.transition.Transition excludeChildren(int,boolean) -> excludeChildren
    1384:1385:androidx.transition.Transition excludeChildren(java.lang.Class,boolean) -> excludeChildren
    1310:1317:java.util.ArrayList excludeId(java.util.ArrayList,int,boolean) -> excludeId
    1161:1168:java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean) -> excludeObject
    1193:1194:androidx.transition.Transition excludeTarget(android.view.View,boolean) -> excludeTarget
    1219:1220:androidx.transition.Transition excludeTarget(int,boolean) -> excludeTarget
    1245:1246:androidx.transition.Transition excludeTarget(java.lang.String,boolean) -> excludeTarget
    1357:1358:androidx.transition.Transition excludeTarget(java.lang.Class,boolean) -> excludeTarget
    1394:1401:java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean) -> excludeType
    1325:1332:java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean) -> excludeView
    1991:1994:void forceToEnd(android.view.ViewGroup) -> forceToEnd
    357:357:long getDuration() -> getDuration
    2146:2149:android.graphics.Rect getEpicenter() -> getEpicenter
    2133:2133:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    412:412:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1707:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2250:2250:java.lang.String getName() -> getName
    2103:2103:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    2181:2181:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    859:864:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    384:384:long getStartDelay() -> getStartDelay
    1415:1415:java.util.List getTargetIds() -> getTargetIds
    1444:1444:java.util.List getTargetNames() -> getTargetNames
    1459:1459:java.util.List getTargetTypes() -> getTargetTypes
    1429:1429:java.util.List getTargets() -> getTargets
    438:438:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1663:1667:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1840:1861:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    527:527:boolean isValidMatch(int) -> isValidMatch
    816:843:boolean isValidTarget(android.view.View) -> isValidTarget
    1866:1884:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    594:611:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    546:557:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    567:584:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    621:638:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    667:690:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    305:330:int[] parseMatchOrder(java.lang.String) -> parseMatchOrder
    1719:1740:void pause(android.view.View) -> pause
    1782:1823:void playTransition(android.view.ViewGroup) -> playTransition
    2058:2065:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1098:1099:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1114:1117:androidx.transition.Transition removeTarget(int) -> removeTarget
    1132:1135:androidx.transition.Transition removeTarget(java.lang.String) -> removeTarget
    1150:1153:androidx.transition.Transition removeTarget(java.lang.Class) -> removeTarget
    1751:1774:void resume(android.view.View) -> resume
    896:912:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    878:892:void runAnimators() -> runAnimators
    2213:2214:void setCanRemoveViews(boolean) -> setCanRemoveViews
    344:345:androidx.transition.Transition setDuration(long) -> setDuration
    2118:2119:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    398:399:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    510:524:void setMatchOrder(int[]) -> setMatchOrder
    2085:2090:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    2164:2165:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    2208:2209:androidx.transition.Transition setSceneRoot(android.view.ViewGroup) -> setSceneRoot
    371:372:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1931:1943:void start() -> start
    2218:2218:java.lang.String toString() -> toString
    2254:2285:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> a.s.g0$a:
    171:171:void <init>() -> <init>
    174:177:android.graphics.Path getPath(float,float,float,float) -> a
androidx.transition.Transition$2 -> a.s.g0$b:
    androidx.transition.Transition this$0 -> b
    androidx.collection.ArrayMap val$runningAnimators -> a
    898:898:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    906:908:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    901:902:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> a.s.g0$c:
    androidx.transition.Transition this$0 -> a
    1911:1911:void <init>(androidx.transition.Transition) -> <init>
    1914:1916:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> a.s.g0$d:
    androidx.transition.WindowIdImpl mWindowId -> d
    android.view.View mView -> a
    androidx.transition.Transition mTransition -> e
    androidx.transition.TransitionValues mValues -> c
    java.lang.String mName -> b
    2368:2374:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$ArrayListManager -> a.s.g0$e:
    2387:2387:void <init>() -> <init>
    2398:2404:java.util.ArrayList add(java.util.ArrayList,java.lang.Object) -> a
    2413:2419:java.util.ArrayList remove(java.util.ArrayList,java.lang.Object) -> b
androidx.transition.Transition$EpicenterCallback -> a.s.g0$f:
    2431:2431:void <init>() -> <init>
    android.graphics.Rect onGetEpicenter(androidx.transition.Transition) -> a
androidx.transition.Transition$MatchOrder -> a.s.g0$g:
androidx.transition.Transition$TransitionListener -> a.s.g0$h:
    void onTransitionPause(androidx.transition.Transition) -> a
    void onTransitionResume(androidx.transition.Transition) -> b
    void onTransitionStart(androidx.transition.Transition) -> c
    void onTransitionCancel(androidx.transition.Transition) -> d
    void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.TransitionInflater -> a.s.h0:
    android.content.Context mContext -> a
    java.lang.Class[] CONSTRUCTOR_SIGNATURE -> b
    androidx.collection.ArrayMap CONSTRUCTORS -> c
    44:46:void <clinit>() -> <clinit>
    50:52:void <init>(android.content.Context) -> <init>
    58:58:androidx.transition.TransitionInflater from(android.content.Context) -> a
    70:80:androidx.transition.Transition inflateTransition(int) -> a
    92:107:androidx.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup) -> a
    117:190:androidx.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,androidx.transition.Transition) -> a
    194:197:java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String) -> a
    288:307:androidx.transition.TransitionManager createTransitionManagerFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.ViewGroup) -> a
    315:340:void loadTransition(android.util.AttributeSet,org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,androidx.transition.TransitionManager) -> a
    229:277:void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,androidx.transition.Transition) -> b
androidx.transition.TransitionListenerAdapter -> a.s.i0:
    27:27:void <init>() -> <init>
    43:43:void onTransitionPause(androidx.transition.Transition) -> a
    47:47:void onTransitionResume(androidx.transition.Transition) -> b
    31:31:void onTransitionStart(androidx.transition.Transition) -> c
    39:39:void onTransitionCancel(androidx.transition.Transition) -> d
    35:35:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.TransitionManager -> a.s.j0:
    java.lang.ThreadLocal sRunningTransitions -> e
    java.util.ArrayList sPendingTransitions -> f
    androidx.transition.Transition sDefaultTransition -> d
    java.lang.String LOG_TAG -> c
    androidx.collection.ArrayMap mSceneTransitions -> a
    androidx.collection.ArrayMap mScenePairTransitions -> b
    83:90:void <clinit>() -> <clinit>
    79:86:void <init>() -> <init>
    102:103:void setTransition(androidx.transition.Scene,androidx.transition.Transition) -> a
    119:125:void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition) -> a
    200:211:androidx.collection.ArrayMap getRunningTransitions() -> a
    339:340:void transitionTo(androidx.transition.Scene) -> a
    380:381:void beginDelayedTransition(android.view.ViewGroup) -> a
    408:422:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> a
    139:155:androidx.transition.Transition getTransition(androidx.transition.Scene) -> b
    169:197:void changeScene(androidx.transition.Scene,androidx.transition.Transition) -> b
    216:221:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> b
    430:440:void endTransitions(android.view.ViewGroup) -> b
    309:326:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> c
    349:350:void go(androidx.transition.Scene) -> c
    367:368:void go(androidx.transition.Scene,androidx.transition.Transition) -> c
androidx.transition.TransitionManager$MultiListener -> a.s.j0$a:
    android.view.ViewGroup mSceneRoot -> c
    androidx.transition.Transition mTransition -> b
    238:241:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    244:246:void removeListeners() -> a
    268:303:boolean onPreDraw() -> onPreDraw
    250:250:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    254:264:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.transition.TransitionManager$MultiListener$1 -> a.s.j0$a$a:
    androidx.collection.ArrayMap val$runningTransitions -> a
    androidx.transition.TransitionManager$MultiListener this$0 -> b
    287:287:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    290:293:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.TransitionPropagation -> a.s.k0:
    32:32:void <init>() -> <init>
    void captureValues(androidx.transition.TransitionValues) -> a
    java.lang.String[] getPropagationProperties() -> a
    long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
androidx.transition.TransitionSet -> a.s.l0:
    int ORDERING_SEQUENTIAL -> l
    int FLAG_CHANGE_EPICENTER -> j
    int ORDERING_TOGETHER -> k
    int FLAG_CHANGE_PROPAGATION -> h
    int FLAG_CHANGE_PATH_MOTION -> i
    boolean mStarted -> e
    int mChangeFlags -> f
    int FLAG_CHANGE_INTERPOLATOR -> g
    int mCurrentListeners -> d
    java.util.ArrayList mTransitions -> b
    boolean mPlayTogether -> c
    110:111:void <init>() -> <init>
    116:123:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    158:158:int getOrdering() -> a
    179:195:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> a
    223:224:androidx.transition.Transition getTransitionAt(int) -> a
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(int) -> addTarget
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    62:62:androidx.transition.Transition addTarget(java.lang.Class) -> addTarget
    62:62:androidx.transition.Transition addTarget(java.lang.String) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    280:283:androidx.transition.TransitionSet addTarget(int) -> addTarget
    289:292:androidx.transition.TransitionSet addTarget(java.lang.String) -> addTarget
    298:301:androidx.transition.TransitionSet addTarget(java.lang.Class) -> addTarget
    135:146:androidx.transition.TransitionSet setOrdering(int) -> b
    211:211:int getTransitionCount() -> b
    407:409:androidx.transition.TransitionSet removeTransition(androidx.transition.Transition) -> b
    199:201:void addTransitionInternal(androidx.transition.Transition) -> c
    418:423:void setupStartEndListeners() -> c
    581:586:void cancel() -> cancel
    536:544:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:553:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:532:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    649:655:androidx.transition.Transition clone() -> clone
    466:483:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    349:352:androidx.transition.Transition excludeTarget(android.view.View,boolean) -> excludeTarget
    358:361:androidx.transition.Transition excludeTarget(java.lang.String,boolean) -> excludeTarget
    367:370:androidx.transition.Transition excludeTarget(int,boolean) -> excludeTarget
    376:379:androidx.transition.Transition excludeTarget(java.lang.Class,boolean) -> excludeTarget
    592:597:void forceToEnd(android.view.ViewGroup) -> forceToEnd
    559:564:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(int) -> removeTarget
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    62:62:androidx.transition.Transition removeTarget(java.lang.Class) -> removeTarget
    62:62:androidx.transition.Transition removeTarget(java.lang.String) -> removeTarget
    313:316:androidx.transition.TransitionSet removeTarget(int) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    331:334:androidx.transition.TransitionSet removeTarget(java.lang.Class) -> removeTarget
    340:343:androidx.transition.TransitionSet removeTarget(java.lang.String) -> removeTarget
    570:575:void resume(android.view.View) -> resume
    491:520:void runAnimators() -> runAnimators
    611:616:void setCanRemoveViews(boolean) -> setCanRemoveViews
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:246:androidx.transition.TransitionSet setDuration(long) -> setDuration
    630:636:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    390:397:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    620:626:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setSceneRoot(android.view.ViewGroup) -> setSceneRoot
    601:606:androidx.transition.TransitionSet setSceneRoot(android.view.ViewGroup) -> setSceneRoot
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    640:644:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> a.s.l0$a:
    androidx.transition.Transition val$nextTransition -> a
    androidx.transition.TransitionSet this$0 -> b
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:508:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.TransitionSet$TransitionSetListener -> a.s.l0$b:
    androidx.transition.TransitionSet mTransitionSet -> a
    433:435:void <init>(androidx.transition.TransitionSet) -> <init>
    439:443:void onTransitionStart(androidx.transition.Transition) -> c
    447:454:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.TransitionUtils -> a.s.m0:
    boolean HAS_IS_ATTACHED_TO_WINDOW -> b
    boolean HAS_OVERLAY -> c
    int MAX_IMAGE_SIZE -> a
    boolean HAS_PICTURE_BITMAP -> d
    35:39:void <clinit>() -> <clinit>
    177:178:void <init>() -> <init>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> a
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> a
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> a
androidx.transition.TransitionUtils$MatrixEvaluator -> a.s.m0$a:
    android.graphics.Matrix mTempMatrix -> c
    float[] mTempStartValues -> a
    float[] mTempEndValues -> b
    155:161:void <init>() -> <init>
    165:172:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> a
    155:155:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.transition.TransitionValues -> a.s.n0:
    java.util.Map values -> a
    android.view.View view -> b
    java.util.ArrayList mTargetedTransitions -> c
    49:50:void <init>() -> <init>
    52:54:void <init>(android.view.View) -> <init>
    74:81:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:97:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> a.s.o0:
    android.util.SparseArray mIdValues -> b
    androidx.collection.ArrayMap mNameValues -> d
    androidx.collection.ArrayMap mViewValues -> a
    androidx.collection.LongSparseArray mItemIdValues -> c
    25:33:void <init>() -> <init>
androidx.transition.TranslationAnimationCreator -> a.s.p0:
    160:161:void <init>() -> <init>
    56:82:android.animation.Animator createAnimation(android.view.View,androidx.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,androidx.transition.Transition) -> a
androidx.transition.TranslationAnimationCreator$TransitionPositionListener -> a.s.p0$a:
    float mTerminalY -> i
    float mTerminalX -> h
    float mPausedY -> g
    float mPausedX -> f
    int[] mTransitionPosition -> e
    android.view.View mViewInHierarchy -> a
    int mStartY -> d
    android.view.View mMovingView -> b
    int mStartX -> c
    99:110:void <init>(android.view.View,android.view.View,int,int,float,float) -> <init>
    153:153:void onTransitionPause(androidx.transition.Transition) -> a
    157:157:void onTransitionResume(androidx.transition.Transition) -> b
    138:138:void onTransitionStart(androidx.transition.Transition) -> c
    149:149:void onTransitionCancel(androidx.transition.Transition) -> d
    142:145:void onTransitionEnd(androidx.transition.Transition) -> e
    114:120:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    124:128:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    132:134:void onAnimationResume(android.animation.Animator) -> onAnimationResume
androidx.transition.ViewGroupOverlayApi14 -> a.s.q0:
    28:29:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    32:32:androidx.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> a
    37:38:void add(android.view.View) -> a
    42:43:void remove(android.view.View) -> b
androidx.transition.ViewGroupOverlayApi18 -> a.s.r0:
    android.view.ViewGroupOverlay mViewGroupOverlay -> a
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> a
    48:49:void add(android.view.View) -> a
    43:44:void remove(android.graphics.drawable.Drawable) -> b
    53:54:void remove(android.view.View) -> b
androidx.transition.ViewGroupOverlayImpl -> a.s.s0:
    void add(android.view.View) -> a
    void remove(android.view.View) -> b
androidx.transition.ViewGroupUtils -> a.s.t0:
    boolean sTryHiddenSuppressLayout -> a
    boolean sGetChildDrawingOrderMethodFetched -> c
    java.lang.reflect.Method sGetChildDrawingOrderMethod -> b
    37:37:void <clinit>() -> <clinit>
    110:111:void <init>() -> <init>
    46:49:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> a
    68:77:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> a
    83:105:int getChildDrawingOrder(android.view.ViewGroup,int) -> a
    56:63:void suppressLayout(android.view.ViewGroup,boolean) -> b
androidx.transition.ViewGroupUtilsApi14 -> a.s.u0:
    java.lang.reflect.Field sLayoutSuppressedField -> d
    boolean sLayoutSuppressedFieldFetched -> e
    java.lang.String TAG -> a
    boolean sCancelMethodFetched -> g
    java.lang.reflect.Method sCancelMethod -> f
    int LAYOUT_TRANSITION_CHANGING -> b
    android.animation.LayoutTransition sEmptyLayoutTransition -> c
    129:130:void <init>() -> <init>
    45:106:void suppressLayout(android.view.ViewGroup,boolean) -> a
    109:127:void cancelLayoutTransition(android.animation.LayoutTransition) -> a
androidx.transition.ViewGroupUtilsApi14$1 -> a.s.u0$a:
    46:46:void <init>() -> <init>
    49:49:boolean isChangingLayout() -> isChangingLayout
androidx.transition.ViewOverlayApi14 -> a.s.v0:
    androidx.transition.ViewOverlayApi14$OverlayViewGroup mOverlayViewGroup -> a
    47:49:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    81:82:void add(android.graphics.drawable.Drawable) -> a
    86:87:void remove(android.graphics.drawable.Drawable) -> b
    65:76:androidx.transition.ViewOverlayApi14 createFrom(android.view.View) -> c
    52:61:android.view.ViewGroup getContentView(android.view.View) -> d
androidx.transition.ViewOverlayApi14$OverlayViewGroup -> a.s.v0$a:
    android.view.ViewGroup mHostView -> b
    androidx.transition.ViewOverlayApi14 mViewOverlay -> e
    java.lang.reflect.Method sInvalidateChildInParentFastMethod -> g
    boolean mDisposed -> f
    android.view.View mRequestingView -> c
    java.util.ArrayList mDrawables -> d
    116:121:void <clinit>() -> <clinit>
    142:149:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,androidx.transition.ViewOverlayApi14) -> <init>
    158:169:void add(android.graphics.drawable.Drawable) -> a
    186:211:void add(android.view.View) -> a
    219:220:void assertNotDisposed() -> a
    269:275:void getOffset(int[]) -> a
    282:293:android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect) -> a
    172:178:void remove(android.graphics.drawable.Drawable) -> b
    214:216:void remove(android.view.View) -> b
    226:230:void disposeIfEmpty() -> b
    239:252:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    154:154:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    299:313:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    234:235:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    257:257:void onLayout(boolean,int,int,int,int) -> onLayout
    182:182:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.transition.ViewOverlayApi18 -> a.s.w0:
    android.view.ViewOverlay mViewOverlay -> a
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> a
    42:43:void remove(android.graphics.drawable.Drawable) -> b
androidx.transition.ViewOverlayImpl -> a.s.x0:
    void add(android.graphics.drawable.Drawable) -> a
    void remove(android.graphics.drawable.Drawable) -> b
androidx.transition.ViewUtils -> a.s.y0:
    android.util.Property TRANSITION_ALPHA -> c
    android.util.Property CLIP_BOUNDS -> d
    androidx.transition.ViewUtilsBase IMPL -> a
    java.lang.String TAG -> b
    38:71:void <clinit>() -> <clinit>
    202:203:void <init>() -> <init>
    107:108:void setTransitionAlpha(android.view.View,float) -> a
    128:129:void clearNonTransitionAlpha(android.view.View) -> a
    145:146:void setTransitionVisibility(android.view.View,int) -> a
    187:188:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> a
    199:200:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
    90:93:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> b
    161:162:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> b
    111:111:float getTransitionAlpha(android.view.View) -> c
    177:178:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> c
    100:103:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> d
    119:120:void saveNonTransitionAlpha(android.view.View) -> e
androidx.transition.ViewUtils$1 -> a.s.y0$a:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    61:61:java.lang.Float get(android.view.View) -> a
    66:67:void set(android.view.View,java.lang.Float) -> a
    57:57:java.lang.Object get(java.lang.Object) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ViewUtils$2 -> a.s.y0$b:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    76:76:android.graphics.Rect get(android.view.View) -> a
    81:82:void set(android.view.View,android.graphics.Rect) -> a
    72:72:java.lang.Object get(java.lang.Object) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
androidx.transition.ViewUtilsApi19 -> a.s.z0:
    boolean sTryHiddenTransitionAlpha -> h
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:47:void setTransitionAlpha(android.view.View,float) -> a
    72:72:void clearNonTransitionAlpha(android.view.View) -> a
    52:61:float getTransitionAlpha(android.view.View) -> b
    67:67:void saveNonTransitionAlpha(android.view.View) -> c
androidx.transition.ViewUtilsApi21 -> a.s.a1:
    boolean sTryHiddenSetAnimationMatrix -> i
    boolean sTryHiddenTransformMatrixToGlobal -> j
    boolean sTryHiddenTransformMatrixToLocal -> k
    33:41:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    74:83:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> a
    46:55:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> b
    60:69:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> c
androidx.transition.ViewUtilsApi22 -> a.s.b1:
    boolean sTryHiddenSetLeftTopRightBottom -> l
    31:31:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:45:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
androidx.transition.ViewUtilsApi23 -> a.s.c1:
    boolean sTryHiddenSetTransitionVisibility -> m
    32:32:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:51:void setTransitionVisibility(android.view.View,int) -> a
androidx.transition.ViewUtilsApi29 -> a.s.d1:
    27:27:void <init>() -> <init>
    31:32:void setTransitionAlpha(android.view.View,float) -> a
    41:42:void setTransitionVisibility(android.view.View,int) -> a
    46:47:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
    61:62:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> a
    36:36:float getTransitionAlpha(android.view.View) -> b
    51:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> b
    56:57:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> c
androidx.transition.ViewUtilsBase -> a.s.e1:
    java.lang.reflect.Method sSetFrameMethod -> c
    java.lang.reflect.Field sViewFlagsField -> e
    boolean sViewFlagsFieldFetched -> f
    int VISIBILITY_MASK -> g
    float[] mMatrixValues -> a
    java.lang.String TAG -> b
    boolean sSetFrameFetched -> d
    32:32:void <init>() -> <init>
    46:52:void setTransitionAlpha(android.view.View,float) -> a
    72:75:void clearNonTransitionAlpha(android.view.View) -> a
    109:139:void setAnimationMatrix(android.view.View,android.graphics.Matrix) -> a
    142:152:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> a
    155:172:void setTransitionVisibility(android.view.View,int) -> a
    176:186:void fetchSetFrame() -> a
    55:59:float getTransitionAlpha(android.view.View) -> b
    78:89:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> b
    64:67:void saveNonTransitionAlpha(android.view.View) -> c
    92:106:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> c
androidx.transition.Visibility -> a.s.f1:
    java.lang.String[] sTransitionProperties -> h
    int MODE_IN -> f
    int MODE_OUT -> g
    java.lang.String PROPNAME_VISIBILITY -> c
    int mMode -> b
    java.lang.String PROPNAME_SCREEN_LOCATION -> e
    java.lang.String PROPNAME_PARENT -> d
    81:81:void <clinit>() -> <clinit>
    100:101:void <init>() -> <init>
    106:116:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    126:127:void setMode(int) -> a
    140:140:int getMode() -> a
    184:190:boolean isVisible(androidx.transition.TransitionValues) -> a
    195:243:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    283:284:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> a
    319:319:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> a
    340:481:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> b
    502:502:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> b
    165:166:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:161:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:156:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:262:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    507:518:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
androidx.transition.Visibility$1 -> a.s.f1$a:
    android.view.ViewGroup val$overlayHost -> a
    androidx.transition.Visibility this$0 -> d
    android.view.View val$startView -> c
    android.view.View val$finalOverlayView -> b
    438:438:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    442:443:void onTransitionPause(androidx.transition.Transition) -> a
    447:452:void onTransitionResume(androidx.transition.Transition) -> b
    456:459:void onTransitionEnd(androidx.transition.Transition) -> e
androidx.transition.Visibility$DisappearListener -> a.s.f1$b:
    android.view.ViewGroup mParent -> c
    android.view.View mView -> a
    boolean mLayoutSuppressed -> e
    boolean mCanceled -> f
    int mFinalVisibility -> b
    boolean mSuppressLayout -> d
    533:540:void <init>(android.view.View,int,boolean) -> <init>
    595:596:void onTransitionPause(androidx.transition.Transition) -> a
    604:613:void hideViewWhenNotCanceled() -> a
    616:620:void suppressLayout(boolean) -> a
    600:601:void onTransitionResume(androidx.transition.Transition) -> b
    581:581:void onTransitionStart(androidx.transition.Transition) -> c
    591:591:void onTransitionCancel(androidx.transition.Transition) -> d
    585:587:void onTransitionEnd(androidx.transition.Transition) -> e
    562:563:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    575:576:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    546:549:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    567:567:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    555:558:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    571:571:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Visibility$Mode -> a.s.f1$c:
androidx.transition.Visibility$VisibilityInfo -> a.s.f1$d:
    android.view.ViewGroup mEndParent -> f
    android.view.ViewGroup mStartParent -> e
    int mEndVisibility -> d
    boolean mVisibilityChange -> a
    boolean mFadeIn -> b
    int mStartVisibility -> c
    87:88:void <init>() -> <init>
androidx.transition.VisibilityPropagation -> a.s.g1:
    java.lang.String PROPNAME_VISIBILITY -> a
    java.lang.String PROPNAME_VIEW_CENTER -> b
    java.lang.String[] VISIBILITY_PROPAGATION_VALUES -> c
    38:38:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    45:58:void captureValues(androidx.transition.TransitionValues) -> a
    62:62:java.lang.String[] getPropagationProperties() -> a
    106:115:int getViewCoordinate(androidx.transition.TransitionValues,int) -> a
    73:80:int getViewVisibility(androidx.transition.TransitionValues) -> b
    91:91:int getViewX(androidx.transition.TransitionValues) -> c
    102:102:int getViewY(androidx.transition.TransitionValues) -> d
androidx.transition.WindowIdApi14 -> a.s.h1:
    android.os.IBinder mToken -> a
    25:27:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
androidx.transition.WindowIdApi18 -> a.s.i1:
    android.view.WindowId mWindowId -> a
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.transition.WindowIdImpl -> a.s.j1:
androidx.vectordrawable.R -> a.t.a:
    668:668:void <init>() -> <init>
androidx.vectordrawable.R$attr -> a.t.a$a:
    455:455:void <init>() -> <init>
androidx.vectordrawable.R$color -> a.t.a$b:
    471:471:void <init>() -> <init>
androidx.vectordrawable.R$dimen -> a.t.a$c:
    750:750:void <init>() -> <init>
androidx.vectordrawable.R$drawable -> a.t.a$d:
    806:806:void <init>() -> <init>
androidx.vectordrawable.R$id -> a.t.a$e:
    785:785:void <init>() -> <init>
androidx.vectordrawable.R$integer -> a.t.a$f:
    790:790:void <init>() -> <init>
androidx.vectordrawable.R$layout -> a.t.a$g:
    134:134:void <init>() -> <init>
androidx.vectordrawable.R$string -> a.t.a$h:
    871:871:void <init>() -> <init>
androidx.vectordrawable.R$style -> a.t.a$i:
    551:551:void <init>() -> <init>
androidx.vectordrawable.R$styleable -> a.t.a$j:
    287:272:void <clinit>() -> <clinit>
    126:126:void <init>() -> <init>
androidx.vectordrawable.animated.R -> a.t.b.a:
    668:668:void <init>() -> <init>
androidx.vectordrawable.animated.R$attr -> a.t.b.a$a:
    455:455:void <init>() -> <init>
androidx.vectordrawable.animated.R$color -> a.t.b.a$b:
    471:471:void <init>() -> <init>
androidx.vectordrawable.animated.R$dimen -> a.t.b.a$c:
    750:750:void <init>() -> <init>
androidx.vectordrawable.animated.R$drawable -> a.t.b.a$d:
    806:806:void <init>() -> <init>
androidx.vectordrawable.animated.R$id -> a.t.b.a$e:
    785:785:void <init>() -> <init>
androidx.vectordrawable.animated.R$integer -> a.t.b.a$f:
    790:790:void <init>() -> <init>
androidx.vectordrawable.animated.R$layout -> a.t.b.a$g:
    134:134:void <init>() -> <init>
androidx.vectordrawable.animated.R$string -> a.t.b.a$h:
    871:871:void <init>() -> <init>
androidx.vectordrawable.animated.R$style -> a.t.b.a$i:
    551:551:void <init>() -> <init>
androidx.vectordrawable.animated.R$styleable -> a.t.b.a$j:
    287:272:void <clinit>() -> <clinit>
    126:126:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.AndroidResources -> a.t.c.a.a:
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME -> l
    int[] STYLEABLE_ANIMATOR -> R
    int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA -> K
    int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT -> h
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START -> G
    int STYLEABLE_VECTOR_DRAWABLE_HEIGHT -> d
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT -> C
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> I
    int STYLEABLE_ANIMATOR_VALUE_FROM -> X
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA -> y
    int STYLEABLE_ANIMATOR_DURATION -> T
    int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA -> u
    int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION -> P
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y -> q
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> M
    int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM -> d0
    int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE -> L
    int STYLEABLE_ANIMATOR_SET_ORDERING -> b0
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X -> m
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE -> H
    int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE -> f0
    int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH -> i
    int STYLEABLE_KEYFRAME_FRACTION -> l0
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH -> D
    int STYLEABLE_KEYFRAME_INTERPOLATOR -> j0
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> a
    int STYLEABLE_VECTOR_DRAWABLE_NAME -> e
    int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME -> p0
    int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME -> n0
    int[] STYLEABLE_PATH_INTERPOLATOR -> r0
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1 -> t0
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR -> z
    int FAST_OUT_LINEAR_IN -> x0
    int[] STYLEABLE_KEYFRAME -> h0
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2 -> v0
    int STYLEABLE_ANIMATOR_VALUE_TO -> Y
    int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR -> v
    int LINEAR_OUT_SLOW_IN -> z0
    int STYLEABLE_ANIMATOR_START_OFFSET -> U
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X -> r
    int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME -> Q
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y -> n
    int STYLEABLE_VECTOR_DRAWABLE_WIDTH -> j
    int STYLEABLE_VECTOR_DRAWABLE_TINT -> f
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END -> E
    int STYLEABLE_VECTOR_DRAWABLE_ALPHA -> b
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP -> A
    int STYLEABLE_ANIMATOR_VALUE_TYPE -> Z
    int STYLEABLE_ANIMATOR_REPEAT_COUNT -> V
    int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME -> w
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> O
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y -> s
    int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE -> N
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION -> o
    int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME -> J
    int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME -> g0
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> t
    int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO -> e0
    int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET -> F
    int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE -> g
    int STYLEABLE_KEYFRAME_VALUE_TYPE -> k0
    int STYLEABLE_KEYFRAME_VALUE -> i0
    int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN -> B
    int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED -> c
    int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA -> o0
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1 -> s0
    int[] STYLEABLE_PROPERTY_ANIMATOR -> m0
    int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME -> q0
    int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA -> w0
    int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA -> x
    int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2 -> u0
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> c0
    int STYLEABLE_ANIMATOR_REPEAT_MODE -> W
    int FAST_OUT_SLOW_IN -> y0
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> k
    int STYLEABLE_ANIMATOR_INTERPOLATOR -> S
    int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X -> p
    int[] STYLEABLE_ANIMATOR_SET -> a0
    22:134:void <clinit>() -> <clinit>
    151:152:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.Animatable2Compat -> a.t.c.a.b:
    void clearAnimationCallbacks() -> a
    boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> a
    void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> b
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> a.t.c.a.b$a:
    android.graphics.drawable.Animatable2$AnimationCallback mPlatformCallback -> a
    57:57:void <init>() -> <init>
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> a
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> a
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> b
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> a.t.c.a.b$a$a:
    androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback this$0 -> a
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> a.t.c.a.c:
    boolean DBG_ANIMATION_VECTOR_DRAWABLE -> m
    java.lang.String ANIMATED_VECTOR -> k
    java.lang.String LOGTAG -> j
    android.animation.ArgbEvaluator mArgbEvaluator -> e
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate -> f
    java.lang.String TARGET -> l
    java.util.ArrayList mAnimationCallbacks -> h
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> c
    android.content.Context mContext -> d
    android.animation.Animator$AnimatorListener mAnimatorListener -> g
    android.graphics.drawable.Drawable$Callback mCallback -> i
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    177:185:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    212:241:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> a
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    661:679:void setupColorAnimator(android.animation.Animator) -> a
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> a
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> a
    836:843:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> a
    856:867:void clearAnimationCallbacks() -> a
    877:878:void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> a
    920:929:void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> a
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> b
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> b
    827:831:void removeAnimatorSetListener() -> b
    899:900:boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> b
    532:536:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    709:721:void start() -> start
    725:731:void stop() -> stop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> a.t.c.a.c$a:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> b
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> a.t.c.a.c$b:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> a
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> a.t.c.a.c$c:
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable -> b
    android.animation.AnimatorSet mAnimatorSet -> c
    androidx.collection.ArrayMap mTargetNameMap -> e
    java.util.ArrayList mAnimators -> d
    int mChangingConfigurations -> a
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    648:652:void setupAnimatorSet() -> a
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> a.t.c.a.c$d:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> a.t.c.a.d:
    149:150:void <init>() -> <init>
    67:96:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> a
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> a.t.c.a.e:
    boolean DBG_ANIMATOR_INFLATER -> i
    int VALUE_TYPE_UNDEFINED -> h
    int VALUE_TYPE_PATH -> f
    int VALUE_TYPE_COLOR -> g
    java.lang.String TAG -> a
    int VALUE_TYPE_FLOAT -> d
    int VALUE_TYPE_INT -> e
    int TOGETHER -> b
    int MAX_NUM_POINTS -> c
    921:922:void <init>() -> <init>
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> a
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> a
    129:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> a
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> a
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> a
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> a
    436:447:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> a
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> a
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> a
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> a
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> a
    673:674:void dumpKeyframes(java.lang.Object[],java.lang.String) -> a
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> a
    779:779:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> a
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> a
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> a
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> a
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> a
    917:917:boolean isColorType(int) -> a
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> a.t.c.a.e$a:
    androidx.core.graphics.PathParser$PathDataNode[] mNodeArray -> a
    166:167:void <init>() -> <init>
    177:179:void <init>(androidx.core.graphics.PathParser$PathDataNode[]) -> <init>
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> a
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> a.t.c.a.f:
    androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance -> a
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> a
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> a.t.c.a.g:
    float PRECISION -> c
    int MAX_NUM_POINTS -> d
    double EPSILON -> e
    float[] mX -> a
    float[] mY -> b
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    123:127:void initQuad(float,float) -> a
    130:134:void initCubic(float,float,float,float) -> a
    137:143:void initPath(android.graphics.Path) -> a
    195:223:float getInterpolation(float) -> getInterpolation
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> a.t.c.a.h:
    android.graphics.drawable.Drawable mDelegateDrawable -> b
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    53:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> a.t.c.a.i:
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> c
    android.graphics.Matrix mTmpMatrix -> j
    float[] mTmpFloats -> i
    android.graphics.ColorFilter mColorFilter -> e
    java.lang.String LOGTAG -> l
    java.lang.String SHAPE_GROUP -> o
    java.lang.String SHAPE_CLIP_PATH -> n
    java.lang.String SHAPE_VECTOR -> q
    android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate -> h
    java.lang.String SHAPE_PATH -> p
    boolean DBG_VECTOR_DRAWABLE -> y
    android.graphics.Rect mTmpBounds -> k
    android.graphics.PorterDuffColorFilter mTintFilter -> d
    int MAX_CACHED_BITMAP_SIZE -> x
    int LINEJOIN_ROUND -> v
    int LINEJOIN_BEVEL -> w
    boolean mMutated -> f
    int LINECAP_SQUARE -> t
    boolean mAllowCaching -> g
    int LINEJOIN_MITER -> u
    int LINECAP_BUTT -> r
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> m
    int LINECAP_ROUND -> s
    280:280:void <clinit>() -> <clinit>
    321:323:void <init>() -> <init>
    325:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    345:345:java.lang.Object getTargetByName(java.lang.String) -> a
    477:478:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    645:670:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    687:690:int applyAlpha(int,float) -> a
    734:736:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> a
    754:783:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    882:899:void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int) -> a
    902:903:void setAllowCaching(boolean) -> a
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    618:623:float getPixelSize() -> b
    907:911:boolean needMirroring() -> c
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    681:683:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:369:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:532:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1 -> a.t.c.a.i$a:
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> a.t.c.a.i$b:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    1810:1810:boolean isClipPath() -> c
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> a.t.c.a.i$c:
    int[] mThemeAttrs -> f
    float mTrimPathStart -> l
    android.graphics.Paint$Cap mStrokeLineCap -> o
    float mFillAlpha -> k
    float mStrokeAlpha -> j
    float mStrokeWidth -> h
    android.graphics.Paint$Join mStrokeLineJoin -> p
    androidx.core.content.res.ComplexColorCompat mStrokeColor -> g
    androidx.core.content.res.ComplexColorCompat mFillColor -> i
    float mStrokeMiterlimit -> q
    float mTrimPathOffset -> n
    float mTrimPathEnd -> m
    1835:1837:void <init>() -> <init>
    1840:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    1859:1861:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> a
    1872:1874:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> a
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    1960:1960:boolean isStateful() -> a
    1965:1967:boolean onStateChanged(int[]) -> a
    1972:1981:void applyTheme(android.content.res.Resources$Theme) -> a
    1886:1886:boolean canApplyTheme() -> b
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> a.t.c.a.i$d:
    android.graphics.Matrix mLocalMatrix -> j
    float mTranslateY -> i
    float mTranslateX -> h
    float mScaleY -> g
    int mChangingConfigurations -> k
    float mScaleX -> f
    java.lang.String mGroupName -> m
    float mPivotY -> e
    float mPivotX -> d
    float mRotate -> c
    java.util.ArrayList mChildren -> b
    android.graphics.Matrix mStackedMatrix -> a
    int[] mThemeAttrs -> l
    1466:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1506:1507:void <init>() -> <init>
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    1664:1669:boolean isStateful() -> a
    1674:1678:boolean onStateChanged(int[]) -> a
    1563:1568:void updateLocalMatrix() -> b
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> a.t.c.a.i$e:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> a
    1438:1438:boolean onStateChanged(int[]) -> a
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> a.t.c.a.i$f:
    int mChangingConfigurations -> d
    int FILL_TYPE_WINDING -> e
    androidx.core.graphics.PathParser$PathDataNode[] mNodes -> a
    java.lang.String mPathName -> b
    int mFillRule -> c
    1693:1695:void <init>() -> <init>
    1719:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1698:1705:void printVPath(int) -> a
    1708:1716:java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[]) -> a
    1726:1730:void toPath(android.graphics.Path) -> a
    1741:1741:void applyTheme(android.content.res.Resources$Theme) -> a
    1737:1737:boolean canApplyTheme() -> b
    1744:1744:boolean isClipPath() -> c
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> a.t.c.a.i$g:
    android.graphics.Path mPath -> a
    float mViewportHeight -> l
    float mViewportWidth -> k
    float mBaseHeight -> j
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> h
    float mBaseWidth -> i
    int mRootAlpha -> m
    java.lang.Boolean mIsStateful -> o
    int mChangingConfigurations -> g
    java.lang.String mRootName -> n
    android.graphics.Matrix IDENTITY_MATRIX -> q
    android.graphics.Path mRenderPath -> b
    androidx.collection.ArrayMap mVGTargetsMap -> p
    android.graphics.PathMeasure mPathMeasure -> f
    android.graphics.Paint mFillPaint -> e
    android.graphics.Paint mStrokePaint -> d
    android.graphics.Matrix mFinalPathMatrix -> c
    1170:1170:void <clinit>() -> <clinit>
    1191:1195:void <init>() -> <init>
    1216:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1379:1379:float cross(float,float,float,float) -> a
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> a
    1412:1415:boolean isStateful() -> a
    1419:1419:boolean onStateChanged(int[]) -> a
    1213:1213:float getAlpha() -> getAlpha
    1202:1202:int getRootAlpha() -> getRootAlpha
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> a.t.c.a.i$h:
    int mCachedRootAlpha -> j
    boolean mCachedAutoMirrored -> k
    boolean mCacheDirty -> l
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
    android.graphics.Bitmap mCachedBitmap -> f
    android.graphics.PorterDuff$Mode mTintMode -> d
    android.graphics.Paint mTempPaint -> m
    int mChangingConfigurations -> a
    int[] mCachedThemeAttrs -> g
    android.graphics.PorterDuff$Mode mCachedTintMode -> i
    android.content.res.ColorStateList mTint -> c
    boolean mAutoMirrored -> e
    android.content.res.ColorStateList mCachedTint -> h
    1033:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1121:1123:void <init>() -> <init>
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> a
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> a
    1093:1097:boolean canReuseBitmap(int,int) -> a
    1101:1108:boolean canReuseCache() -> a
    1147:1149:boolean onStateChanged(int[]) -> a
    1057:1057:boolean hasTranslucentRoot() -> b
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> b
    1078:1081:void updateCachedBitmap(int,int) -> c
    1143:1143:boolean isStateful() -> c
    1114:1119:void updateCacheStates() -> d
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> a.t.c.a.i$i:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
    36:36:void onPreParceling(boolean) -> a
    45:45:void onPostParceling() -> a
androidx.versionedparcelable.NonParcelField -> a.u.a:
androidx.versionedparcelable.ParcelField -> a.u.b:
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> b
    60:60:void <clinit>() -> <clinit>
    34:36:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    38:40:void <init>(android.os.Parcel) -> <init>
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> a
    51:51:int describeContents() -> describeContents
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> a.u.c:
    java.lang.String INNER_BUNDLE_KEY -> a
    40:40:void <init>() -> <init>
    48:48:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> a
    58:59:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> a
    70:73:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> a
    82:83:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> a
    91:97:void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable) -> a
    109:117:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> a
    126:133:void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List) -> a
    144:157:java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String) -> b
androidx.versionedparcelable.R -> a.u.d:
    668:668:void <init>() -> <init>
androidx.versionedparcelable.VersionedParcel -> a.u.e:
    int TYPE_PARCELABLE -> n
    int TYPE_SERIALIZABLE -> o
    int EX_PARCELABLE -> l
    int TYPE_VERSIONED_PARCELABLE -> m
    int EX_NETWORK_MAIN_THREAD -> j
    int EX_UNSUPPORTED_OPERATION -> k
    int EX_NULL_POINTER -> h
    int EX_ILLEGAL_STATE -> i
    int EX_BAD_PARCELABLE -> f
    int EX_ILLEGAL_ARGUMENT -> g
    int EX_SECURITY -> e
    androidx.collection.ArrayMap mParcelizerCache -> c
    int TYPE_INTEGER -> r
    androidx.collection.ArrayMap mReadCache -> a
    int TYPE_FLOAT -> s
    androidx.collection.ArrayMap mWriteCache -> b
    int TYPE_STRING -> p
    java.lang.String TAG -> d
    int TYPE_BINDER -> q
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    void closeField() -> a
    boolean readField(int) -> a
    void writeBoolean(boolean) -> a
    void writeBundle(android.os.Bundle) -> a
    void writeByteArray(byte[]) -> a
    void writeByteArray(byte[],int,int) -> a
    void writeCharSequence(java.lang.CharSequence) -> a
    void writeDouble(double) -> a
    void writeFloat(float) -> a
    void writeLong(long) -> a
    void writeParcelable(android.os.Parcelable) -> a
    void writeString(java.lang.String) -> a
    void writeStrongBinder(android.os.IBinder) -> a
    void writeStrongInterface(android.os.IInterface) -> a
    269:269:void setSerializationFlags(boolean,boolean) -> a
    276:278:void writeStrongInterface(android.os.IInterface,int) -> a
    316:318:void writeByteArray(byte[],int,int,int) -> a
    399:402:boolean readBoolean(boolean,int) -> a
    409:412:int readInt(int,int) -> a
    419:422:long readLong(long,int) -> a
    430:433:float readFloat(float,int) -> a
    441:444:double readDouble(double,int) -> a
    451:454:java.lang.String readString(java.lang.String,int) -> a
    461:464:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> a
    472:475:byte[] readByteArray(byte[],int) -> a
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> a
    493:496:android.os.Bundle readBundle(android.os.Bundle,int) -> a
    564:573:void writeBooleanArray(boolean[]) -> a
    578:581:boolean[] readBooleanArray(boolean[],int) -> a
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> a
    625:636:char[] readCharArray(char[],int) -> a
    649:658:void writeIntArray(int[]) -> a
    663:666:int[] readIntArray(int[],int) -> a
    693:702:void writeLongArray(long[]) -> a
    707:710:long[] readLongArray(long[],int) -> a
    737:746:void writeFloatArray(float[]) -> a
    751:754:float[] readFloatArray(float[],int) -> a
    781:790:void writeDoubleArray(double[]) -> a
    795:798:double[] readDoubleArray(double[],int) -> a
    875:877:void writeCollection(java.util.Collection,int) -> a
    995:1010:int getType(java.lang.Object) -> a
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> a
    1057:1059:void writeSerializable(java.io.Serializable,int) -> a
    1062:1077:void writeSerializable(java.io.Serializable) -> a
    1170:1178:java.lang.Exception readException(java.lang.Exception,int) -> a
    1208:1209:java.lang.Throwable getRootCause(java.lang.Throwable) -> a
    1219:1221:java.lang.Exception createException(int,java.lang.String) -> a
    1245:1248:byte readByte(byte,int) -> a
    1256:1264:android.util.Size readSize(android.util.Size,int) -> a
    1272:1280:android.util.SizeF readSizeF(android.util.SizeF,int) -> a
    1289:1302:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> a
    1318:1321:java.util.Set readSet(java.util.Set,int) -> a
    1337:1340:java.util.List readList(java.util.List,int) -> a
    1344:1386:java.util.Collection readCollection(java.util.Collection) -> a
    1401:1419:java.util.Map readMap(java.util.Map,int) -> a
    1435:1438:java.lang.Object[] readArray(java.lang.Object[],int) -> a
    1444:1487:java.lang.Object[] readArray(java.lang.Object[]) -> a
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> a
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> a
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> a
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    void setOutputField(int) -> b
    285:287:void writeBundle(android.os.Bundle,int) -> b
    294:296:void writeBoolean(boolean,int) -> b
    304:306:void writeByteArray(byte[],int) -> b
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> b
    334:336:void writeInt(int,int) -> b
    343:345:void writeLong(long,int) -> b
    352:354:void writeFloat(float,int) -> b
    361:363:void writeDouble(double,int) -> b
    370:372:void writeString(java.lang.String,int) -> b
    379:381:void writeStrongBinder(android.os.IBinder,int) -> b
    391:393:void writeParcelable(android.os.Parcelable,int) -> b
    504:506:void writeByte(byte,int) -> b
    514:520:void writeSize(android.util.Size,int) -> b
    528:534:void writeSizeF(android.util.SizeF,int) -> b
    539:552:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> b
    557:559:void writeBooleanArray(boolean[],int) -> b
    601:611:void writeCharArray(char[],int) -> b
    642:644:void writeIntArray(int[],int) -> b
    686:688:void writeLongArray(long[],int) -> b
    730:732:void writeFloatArray(float[],int) -> b
    774:776:void writeDoubleArray(double[],int) -> b
    826:827:void writeSet(java.util.Set,int) -> b
    840:841:void writeList(java.util.List,int) -> b
    854:872:void writeMap(java.util.Map,int) -> b
    880:928:void writeCollection(java.util.Collection) -> b
    941:943:void writeArray(java.lang.Object[],int) -> b
    948:992:void writeArray(java.lang.Object[]) -> b
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> b
    1040:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> b
    1107:1147:void writeException(java.lang.Exception,int) -> b
    1198:1199:java.lang.Exception readException(int,java.lang.String) -> b
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> b
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> b
    void writeInt(int) -> c
    96:96:boolean isStream() -> c
    boolean readBoolean() -> d
    587:595:boolean[] readBooleanArray() -> e
    android.os.Bundle readBundle() -> f
    byte[] readByteArray() -> g
    java.lang.CharSequence readCharSequence() -> h
    double readDouble() -> i
    804:812:double[] readDoubleArray() -> j
    float readFloat() -> k
    760:768:float[] readFloatArray() -> l
    int readInt() -> m
    672:680:int[] readIntArray() -> n
    long readLong() -> o
    716:724:long[] readLongArray() -> p
    android.os.Parcelable readParcelable() -> q
    1523:1549:java.io.Serializable readSerializable() -> r
    java.lang.String readString() -> s
    android.os.IBinder readStrongBinder() -> t
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> u
    1157:1158:void writeNoException() -> v
    1193:1194:int readExceptionCode() -> w
androidx.versionedparcelable.VersionedParcel$1 -> a.u.e$a:
    androidx.versionedparcelable.VersionedParcel this$0 -> b
    1535:1535:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> a.u.e$b:
    1642:1643:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> a.u.f:
    android.util.SparseIntArray mPositionLookup -> t
    java.lang.String mPrefix -> x
    int mNextRead -> z
    android.os.Parcel mParcel -> u
    int mCurrentField -> y
    int mOffset -> v
    int mEnd -> w
    java.lang.String TAG -> C
    boolean DEBUG -> B
    int mFieldId -> A
    51:54:void <init>(android.os.Parcel) -> <init>
    60:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    70:84:boolean readField(int) -> a
    99:111:void closeField() -> a
    126:132:void writeByteArray(byte[]) -> a
    136:142:void writeByteArray(byte[],int,int) -> a
    151:152:void writeLong(long) -> a
    156:157:void writeFloat(float) -> a
    161:162:void writeDouble(double) -> a
    166:167:void writeString(java.lang.String) -> a
    171:172:void writeStrongBinder(android.os.IBinder) -> a
    176:177:void writeParcelable(android.os.Parcelable) -> a
    181:182:void writeBoolean(boolean) -> a
    186:187:void writeStrongInterface(android.os.IInterface) -> a
    191:192:void writeBundle(android.os.Bundle) -> a
    196:197:void writeCharSequence(java.lang.CharSequence) -> a
    89:95:void setOutputField(int) -> b
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    146:147:void writeInt(int) -> c
    258:258:boolean readBoolean() -> d
    253:253:android.os.Bundle readBundle() -> f
    236:242:byte[] readByteArray() -> g
    201:201:java.lang.CharSequence readCharSequence() -> h
    221:221:double readDouble() -> i
    216:216:float readFloat() -> k
    206:206:int readInt() -> m
    211:211:long readLong() -> o
    248:248:android.os.Parcelable readParcelable() -> q
    226:226:java.lang.String readString() -> s
    231:231:android.os.IBinder readStrongBinder() -> t
androidx.versionedparcelable.VersionedParcelStream -> a.u.g:
    int TYPE_LONG -> O
    androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer -> x
    int TYPE_INT -> M
    int TYPE_DOUBLE -> K
    int TYPE_BOOLEAN -> I
    java.io.DataInputStream mCurrentInput -> v
    int TYPE_STRING -> G
    int TYPE_SUB_BUNDLE -> E
    int mFieldId -> A
    boolean mIgnoreParcelables -> y
    java.io.DataInputStream mMasterInput -> t
    int TYPE_FLOAT_ARRAY -> R
    int TYPE_LONG_ARRAY -> P
    int TYPE_INT_ARRAY -> N
    int TYPE_DOUBLE_ARRAY -> L
    int TYPE_BOOLEAN_ARRAY -> J
    java.io.DataOutputStream mCurrentOutput -> w
    int TYPE_STRING_ARRAY -> H
    java.io.DataOutputStream mMasterOutput -> u
    int TYPE_SUB_PERSISTABLE_BUNDLE -> F
    int TYPE_NULL -> D
    int mFieldSize -> B
    java.nio.charset.Charset UTF_16 -> C
    int mCount -> z
    int TYPE_FLOAT -> Q
    44:44:void <clinit>() -> <clinit>
    76:78:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    84:123:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    134:135:void setSerializationFlags(boolean,boolean) -> a
    142:152:void closeField() -> a
    164:186:boolean readField(int) -> a
    199:206:void writeByteArray(byte[]) -> a
    213:220:void writeByteArray(byte[],int,int) -> a
    226:227:void writeCharSequence(java.lang.CharSequence) -> a
    243:245:void writeLong(long) -> a
    253:255:void writeFloat(float) -> a
    263:265:void writeDouble(double) -> a
    273:281:void writeString(java.lang.String) -> a
    288:290:void writeBoolean(boolean) -> a
    296:297:void writeStrongBinder(android.os.IBinder) -> a
    303:304:void writeParcelable(android.os.Parcelable) -> a
    310:311:void writeStrongInterface(android.os.IInterface) -> a
    411:423:void writeBundle(android.os.Bundle) -> a
    442:484:void writeObject(java.lang.Object) -> a
    489:538:void readObject(int,java.lang.String,android.os.Bundle) -> a
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    191:194:void setOutputField(int) -> b
    127:127:boolean isStream() -> c
    234:236:void writeInt(int) -> c
    402:404:boolean readBoolean() -> d
    429:438:android.os.Bundle readBundle() -> f
    381:390:byte[] readByteArray() -> g
    396:396:java.lang.CharSequence readCharSequence() -> h
    356:358:double readDouble() -> i
    347:349:float readFloat() -> k
    329:331:int readInt() -> m
    338:340:long readLong() -> o
    323:323:android.os.Parcelable readParcelable() -> q
    365:374:java.lang.String readString() -> s
    317:317:android.os.IBinder readStrongBinder() -> t
androidx.versionedparcelable.VersionedParcelStream$1 -> a.u.g$a:
    androidx.versionedparcelable.VersionedParcelStream this$0 -> b
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:93:int read() -> read
    98:105:int read(byte[],int,int) -> read
    110:117:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> a.u.g$b:
    java.io.DataOutputStream mDataStream -> b
    java.io.ByteArrayOutputStream mOutput -> a
    java.io.DataOutputStream mTarget -> d
    int mFieldId -> c
    549:552:void <init>(int,java.io.DataOutputStream) -> <init>
    555:563:void flushField() -> a
androidx.versionedparcelable.VersionedParcelable -> a.u.h:
androidx.versionedparcelable.VersionedParcelize -> a.u.i:
androidx.viewpager.R -> a.v.a:
    668:668:void <init>() -> <init>
androidx.viewpager.R$attr -> a.v.a$a:
    455:455:void <init>() -> <init>
androidx.viewpager.R$color -> a.v.a$b:
    471:471:void <init>() -> <init>
androidx.viewpager.R$dimen -> a.v.a$c:
    750:750:void <init>() -> <init>
androidx.viewpager.R$drawable -> a.v.a$d:
    806:806:void <init>() -> <init>
androidx.viewpager.R$id -> a.v.a$e:
    785:785:void <init>() -> <init>
androidx.viewpager.R$integer -> a.v.a$f:
    388:388:void <init>() -> <init>
androidx.viewpager.R$layout -> a.v.a$g:
    476:476:void <init>() -> <init>
androidx.viewpager.R$string -> a.v.a$h:
    304:304:void <init>() -> <init>
androidx.viewpager.R$style -> a.v.a$i:
    384:384:void <init>() -> <init>
androidx.viewpager.R$styleable -> a.v.a$j:
    656:648:void <clinit>() -> <clinit>
    88:88:void <init>() -> <init>
androidx.viewpager.widget.PagerAdapter -> a.v.b.a:
    int POSITION_NONE -> d
    android.database.DataSetObservable mObservable -> a
    int POSITION_UNCHANGED -> c
    android.database.DataSetObserver mViewPagerObserver -> b
    81:82:void <init>() -> <init>
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    154:155:void finishUpdate(android.view.ViewGroup) -> a
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> a
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> a
    231:231:void finishUpdate(android.view.View) -> a
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    281:281:int getItemPosition(java.lang.Object) -> a
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> a
    332:332:java.lang.CharSequence getPageTitle(int) -> a
    99:100:void startUpdate(android.view.ViewGroup) -> b
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    166:166:void startUpdate(android.view.View) -> b
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    289:293:void notifyDataSetChanged() -> b
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> b
    343:343:float getPageWidth(int) -> b
    252:252:android.os.Parcelable saveState() -> c
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> c
androidx.viewpager.widget.PagerTabStrip -> a.v.b.b:
    int TAB_SPACING -> N
    android.graphics.Paint mTabPaint -> z
    int MIN_TEXT_SPACING -> O
    int MIN_PADDING_BOTTOM -> L
    int TAB_PADDING -> M
    float mInitialMotionY -> H
    java.lang.String TAG -> J
    int INDICATOR_HEIGHT -> K
    float mInitialMotionX -> G
    int mTouchSlop -> I
    int mFullUnderlineHeight -> E
    int mTabAlpha -> B
    android.graphics.Rect mTempRect -> A
    int mMinStripHeight -> x
    int mTabPadding -> y
    int mMinPaddingBottom -> v
    int mMinTextSpacing -> w
    boolean mIgnoreTap -> F
    int mIndicatorColor -> t
    int mIndicatorHeight -> u
    int FULL_UNDERLINE_HEIGHT -> P
    boolean mDrawFullUnderline -> C
    int MIN_STRIP_HEIGHT -> Q
    boolean mDrawFullUnderlineSet -> D
    83:84:void <init>(android.content.Context) -> <init>
    87:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    285:301:void updateTextPositions(int,float,boolean) -> a
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:281:void onDraw(android.graphics.Canvas) -> onDraw
    228:260:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:188:void setBackgroundColor(int) -> setBackgroundColor
    176:180:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:196:void setBackgroundResource(int) -> setBackgroundResource
    205:208:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:164:void setPadding(int,int,int,int) -> setPadding
    136:139:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:148:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:172:void setTextSpacing(int) -> setTextSpacing
androidx.viewpager.widget.PagerTabStrip$1 -> a.v.b.b$a:
    androidx.viewpager.widget.PagerTabStrip this$0 -> b
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:114:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> a.v.b.b$b:
    androidx.viewpager.widget.PagerTabStrip this$0 -> b
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:122:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> a.v.b.c:
    int mNonPrimaryAlpha -> n
    int mTextColor -> o
    androidx.viewpager.widget.PagerTitleStrip$PageListener mPageListener -> l
    float mLastKnownPositionOffset -> g
    boolean mUpdatingText -> j
    int mScaledTextSpacing -> h
    boolean mUpdatingPositions -> k
    androidx.viewpager.widget.ViewPager mPager -> b
    int mGravity -> i
    int mLastKnownCurrentPage -> f
    java.lang.ref.WeakReference mWatchingAdapter -> m
    android.widget.TextView mPrevText -> c
    android.widget.TextView mNextText -> e
    android.widget.TextView mCurrText -> d
    int[] ATTRS -> p
    float SIDE_ALPHA -> r
    int[] TEXT_ATTRS -> q
    int TEXT_SPACING -> s
    73:80:void <clinit>() -> <clinit>
    109:110:void <init>(android.content.Context) -> <init>
    113:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    221:224:void setTextSize(int,float) -> a
    268:304:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> a
    314:328:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> a
    331:416:void updateTextPositions(int,float,boolean) -> a
    463:468:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:243:void onAttachedToWindow() -> onAttachedToWindow
    258:265:void onDetachedFromWindow() -> onDetachedFromWindow
    456:460:void onLayout(boolean,int,int,int,int) -> onLayout
    420:422:void onMeasure(int,int) -> onMeasure
    308:311:void requestLayout() -> requestLayout
    233:235:void setGravity(int) -> setGravity
    190:194:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:106:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:208:void setTextColor(int) -> setTextColor
    173:175:void setTextSpacing(int) -> setTextSpacing
androidx.viewpager.widget.PagerTitleStrip$PageListener -> a.v.b.c$a:
    androidx.viewpager.widget.PagerTitleStrip this$0 -> b
    int mScrollState -> a
    475:476:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:507:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:515:void onChanged() -> onChanged
    500:501:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    480:485:void onPageScrolled(int,float,int) -> onPageScrolled
    489:496:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> a.v.b.c$b:
    java.util.Locale mLocale -> b
    93:95:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> a.v.b.d:
    int SCROLL_STATE_DRAGGING -> B0
    android.widget.EdgeEffect mRightEdge -> R
    int mMinimumVelocity -> K
    int mRestoredCurItem -> h
    float mLastMotionY -> F
    java.util.List mOnPageChangeListeners -> W
    int mGutterSize -> C
    boolean mNeedCalculatePageOffsets -> T
    int mOffscreenPageLimit -> y
    float mLastOffset -> s
    int mChildHeightMeasureSpec -> u
    androidx.viewpager.widget.PagerAdapter mAdapter -> f
    android.widget.Scroller mScroller -> k
    long mFakeDragBeginTime -> P
    int mBottomPageBounds -> q
    java.lang.String TAG -> j0
    int mMaximumVelocity -> L
    float mInitialMotionX -> G
    androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener -> a0
    int mDrawingOrder -> f0
    android.os.Parcelable mRestoredAdapterState -> i
    boolean mCalledSuper -> U
    boolean mInLayout -> v
    androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer -> d0
    int mTouchSlop -> D
    android.widget.EdgeEffect mLeftEdge -> Q
    int DEFAULT_GUTTER_SIZE -> p0
    int MAX_SETTLE_DURATION -> n0
    int[] LAYOUT_ATTRS -> r0
    androidx.viewpager.widget.ViewPager$ItemInfo mTempItem -> d
    int DRAW_ORDER_FORWARD -> x0
    boolean mIsBeingDragged -> z
    int CLOSE_ENOUGH -> v0
    boolean USE_CACHE -> l0
    java.util.List mAdapterChangeListeners -> c0
    int SCROLL_STATE_SETTLING -> C0
    int mPageMargin -> n
    java.lang.ClassLoader mRestoredClassLoader -> j
    int SCROLL_STATE_IDLE -> A0
    int mFlingDistance -> M
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    android.graphics.Rect mTempRect -> e
    boolean mScrollingCacheEnabled -> w
    int mExpectedAdapterCount -> b
    java.util.ArrayList mItems -> c
    androidx.viewpager.widget.ViewPager$PagerObserver mObserver -> m
    java.lang.Runnable mEndScrollRunnable -> h0
    java.util.ArrayList mDrawingOrderedChildren -> g0
    int mDecorChildCount -> V
    boolean mIsUnableToDrag -> A
    android.view.animation.Interpolator sInterpolator -> t0
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    boolean mIsScrollStarted -> l
    float mLastMotionX -> E
    androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener -> b0
    int mPageTransformerLayerType -> e0
    int mCurItem -> g
    boolean mPopulatePending -> x
    int mScrollState -> i0
    int mDefaultGutterSize -> B
    int MIN_DISTANCE_FOR_FLING -> o0
    boolean mFirstLayout -> S
    int DEFAULT_OFFSCREEN_PAGES -> m0
    int MIN_FLING_VELOCITY -> q0
    java.util.Comparator COMPARATOR -> s0
    int DRAW_ORDER_DEFAULT -> w0
    int INVALID_POINTER -> u0
    float mFirstOffset -> r
    int mChildWidthMeasureSpec -> t
    int DRAW_ORDER_REVERSE -> y0
    android.graphics.drawable.Drawable mMarginDrawable -> o
    androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator -> z0
    boolean DEBUG -> k0
    int mTopPageBounds -> p
    122:251:void <clinit>() -> <clinit>
    391:393:void <init>(android.content.Context) -> <init>
    396:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> a
    622:624:void setCurrentItem(int,boolean) -> a
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> a
    635:637:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    676:696:void scrollToItem(int,boolean,int,boolean) -> a
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> a
    769:770:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> a
    787:798:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> a
    927:929:float distanceInfluenceForSnapDuration(float) -> a
    950:1005:void smoothScrollTo(int,int,int) -> a
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> a
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> a
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> a
    1865:1920:void onPageScrolled(int,float,int) -> a
    1974:2008:void completeScroll(boolean) -> a
    2011:2011:boolean isGutterDrag(float,float) -> a
    2406:2421:int determineTargetPage(int,float,int,int) -> a
    2528:2544:boolean beginFakeDrag() -> a
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> a
    2793:2855:boolean arrowScroll(int) -> a
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> b
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> b
    745:748:void clearOnPageChangeListeners() -> b
    939:940:void smoothScrollTo(int,int) -> b
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> b
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> b
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> b
    2015:2021:void enableLayers(boolean) -> b
    2586:2587:void fakeDragBy(float) -> b
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> c
    1023:1089:void dataSetChanged() -> c
    1096:1143:void populate(int) -> c
    1498:1499:boolean isDecorView(android.view.View) -> c
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> c
    2310:2355:boolean performDrag(float) -> c
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1793:1815:void computeScroll() -> computeScroll
    1940:1954:void dispatchOnPageSelected(int) -> d
    2554:2555:void endFakeDrag() -> d
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    401:475:void initViewPager() -> e
    1957:1971:void dispatchOnScrollStateChanged(int) -> e
    1818:1844:boolean pageScrolled(int) -> f
    2640:2640:boolean isFakeDragging() -> f
    2885:2889:boolean pageLeft() -> g
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    2893:2897:boolean pageRight() -> h
    1092:1093:void populate() -> i
    2659:2666:void endDrag() -> j
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> k
    555:563:void removeNonDecorViews() -> l
    2294:2299:boolean resetTouch() -> m
    1282:1295:void sortChildDrawingOrder() -> n
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2038:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2181:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1504:1509:void removeView(android.view.View) -> removeView
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> a.v.b.d$a:
    140:140:void <init>() -> <init>
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> a
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager.widget.ViewPager$2 -> a.v.b.d$b:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> a.v.b.d$c:
    androidx.viewpager.widget.ViewPager this$0 -> b
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> a.v.b.d$d:
    androidx.viewpager.widget.ViewPager this$0 -> b
    android.graphics.Rect mTempRect -> a
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$DecorView -> a.v.b.d$e:
androidx.viewpager.widget.ViewPager$ItemInfo -> a.v.b.d$f:
    float offset -> e
    float widthFactor -> d
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> a.v.b.d$g:
    int childIndex -> f
    float widthFactor -> c
    int position -> e
    boolean isDecor -> a
    int gravity -> b
    boolean needsMeasure -> d
    3145:3146:void <init>() -> <init>
    3149:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> a.v.b.d$h:
    androidx.viewpager.widget.ViewPager this$0 -> a
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> a
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3075:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener -> a.v.b.d$i:
androidx.viewpager.widget.ViewPager$OnPageChangeListener -> a.v.b.d$j:
androidx.viewpager.widget.ViewPager$PageTransformer -> a.v.b.d$k:
    void transformPage(android.view.View,float) -> a
androidx.viewpager.widget.ViewPager$PagerObserver -> a.v.b.d$l:
    androidx.viewpager.widget.ViewPager this$0 -> a
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> a.v.b.d$m:
    android.os.Parcelable adapterState -> c
    int position -> b
    java.lang.ClassLoader loader -> d
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> a.v.b.d$m$a:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> a.v.b.d$n:
    321:321:void <init>() -> <init>
    335:335:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    325:325:void onPageScrolled(int,float,int) -> onPageScrolled
    330:330:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> a.v.b.d$o:
    3157:3157:void <init>() -> <init>
    3160:3165:int compare(android.view.View,android.view.View) -> a
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager2.R -> a.w.a:
    668:668:void <init>() -> <init>
androidx.viewpager2.R$attr -> a.w.a$a:
    455:455:void <init>() -> <init>
androidx.viewpager2.R$color -> a.w.a$b:
    578:578:void <init>() -> <init>
androidx.viewpager2.R$dimen -> a.w.a$c:
    150:150:void <init>() -> <init>
androidx.viewpager2.R$drawable -> a.w.a$d:
    785:785:void <init>() -> <init>
androidx.viewpager2.R$id -> a.w.a$e:
    818:818:void <init>() -> <init>
androidx.viewpager2.R$integer -> a.w.a$f:
    634:634:void <init>() -> <init>
androidx.viewpager2.R$layout -> a.w.a$g:
    18:18:void <init>() -> <init>
androidx.viewpager2.R$string -> a.w.a$h:
    166:166:void <init>() -> <init>
androidx.viewpager2.R$style -> a.w.a$i:
    405:405:void <init>() -> <init>
androidx.viewpager2.R$styleable -> a.w.a$j:
    724:513:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
androidx.viewpager2.adapter.FragmentStateAdapter -> androidx.viewpager2.adapter.FragmentStateAdapter:
    androidx.fragment.app.FragmentManager mFragmentManager -> c
    long GRACE_WINDOW_TIME_MS -> l
    java.lang.String KEY_PREFIX_STATE -> k
    boolean mHasStaleFragments -> i
    java.lang.String KEY_PREFIX_FRAGMENT -> j
    boolean mIsInGracePeriod -> h
    androidx.collection.LongSparseArray mSavedStates -> e
    androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer mFragmentMaxLifecycleEnforcer -> g
    androidx.collection.LongSparseArray mItemIdToViewHolder -> f
    androidx.lifecycle.Lifecycle mLifecycle -> b
    androidx.collection.LongSparseArray mFragments -> d
    102:103:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    112:113:void <init>(androidx.fragment.app.Fragment) -> <init>
    123:127:void <init>(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle) -> <init>
    androidx.fragment.app.Fragment createFragment(int) -> a
    166:197:void onBindViewHolder(androidx.viewpager2.adapter.FragmentViewHolder,int) -> a
    368:382:void scheduleViewAttach(androidx.fragment.app.Fragment,android.widget.FrameLayout) -> a
    386:387:void addViewToContainer(android.view.View,android.widget.FrameLayout) -> a
    430:430:boolean onFailedToRecycleView(androidx.viewpager2.adapter.FragmentViewHolder) -> a
    496:496:boolean containsItem(long) -> a
    509:530:android.os.Parcelable saveState() -> a
    535:536:void restoreState(android.os.Parcelable) -> a
    600:600:java.lang.String createKey(java.lang.String,long) -> a
    605:605:boolean isValidKey(java.lang.String,java.lang.String) -> a
    201:202:void gcFragments() -> b
    233:247:boolean isFragmentViewBound(long) -> b
    265:272:void ensureFragment(int) -> b
    276:278:void onViewAttachedToWindow(androidx.viewpager2.adapter.FragmentViewHolder) -> b
    610:610:long parseIdFromKey(java.lang.String,java.lang.String) -> b
    251:261:java.lang.Long itemForViewHolder(int) -> c
    407:413:void onViewRecycled(androidx.viewpager2.adapter.FragmentViewHolder) -> c
    434:466:void removeFragment(long) -> c
    470:470:boolean shouldDelayFragmentTransactions() -> c
    285:287:void placeFragmentInViewHolder(androidx.viewpager2.adapter.FragmentViewHolder) -> d
    575:596:void scheduleGracePeriodEnd() -> d
    486:486:long getItemId(int) -> getItemId
    132:135:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    67:67:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    67:67:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    161:161:androidx.viewpager2.adapter.FragmentViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    140:142:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    67:67:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    67:67:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    67:67:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    501:501:void setHasStableIds(boolean) -> setHasStableIds
androidx.viewpager2.adapter.FragmentStateAdapter$1 -> androidx.viewpager2.adapter.FragmentStateAdapter$a:
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> c
    androidx.viewpager2.adapter.FragmentViewHolder val$holder -> b
    android.widget.FrameLayout val$container -> a
    184:184:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.widget.FrameLayout,androidx.viewpager2.adapter.FragmentViewHolder) -> <init>
    188:192:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.viewpager2.adapter.FragmentStateAdapter$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$2:
    androidx.viewpager2.adapter.FragmentViewHolder val$holder -> a
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> b
    347:347:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.viewpager2.adapter.FragmentViewHolder) -> <init>
    351:358:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.viewpager2.adapter.FragmentStateAdapter$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$b:
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> c
    androidx.fragment.app.Fragment val$fragment -> a
    android.widget.FrameLayout val$container -> b
    369:369:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.fragment.app.Fragment,android.widget.FrameLayout) -> <init>
    376:380:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> a
androidx.viewpager2.adapter.FragmentStateAdapter$4 -> androidx.viewpager2.adapter.FragmentStateAdapter$c:
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> b
    576:576:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter) -> <init>
    579:581:void run() -> run
androidx.viewpager2.adapter.FragmentStateAdapter$5 -> androidx.viewpager2.adapter.FragmentStateAdapter$5:
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> c
    java.lang.Runnable val$runnable -> b
    android.os.Handler val$handler -> a
    584:584:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.os.Handler,java.lang.Runnable) -> <init>
    588:592:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver -> androidx.viewpager2.adapter.FragmentStateAdapter$d:
    744:744:void <init>() -> <init>
    744:744:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$1) -> <init>
    750:751:void onItemRangeChanged(int,int) -> onItemRangeChanged
    756:757:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    761:762:void onItemRangeInserted(int,int) -> onItemRangeInserted
    771:772:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    766:767:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer:
    androidx.viewpager2.adapter.FragmentStateAdapter this$0 -> f
    androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mPageChangeCallback -> a
    long mPrimaryItemId -> e
    androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mDataObserver -> b
    androidx.viewpager2.widget.ViewPager2 mViewPager -> d
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> c
    617:623:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter) -> <init>
    626:661:void register(androidx.recyclerview.widget.RecyclerView) -> a
    672:681:void updateFragmentMaxLifecycle(boolean) -> a
    664:669:void unregister(androidx.recyclerview.widget.RecyclerView) -> b
    732:736:androidx.viewpager2.widget.ViewPager2 inferViewPager(androidx.recyclerview.widget.RecyclerView) -> c
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$a:
    androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1 -> a
    629:629:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer) -> <init>
    632:633:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    637:638:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$b:
    androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1 -> a
    643:643:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer) -> <init>
    646:647:void onChanged() -> onChanged
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3 -> androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1 -> a
    653:653:void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer) -> <init>
    657:658:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.viewpager2.adapter.FragmentViewHolder -> a.w.b.a:
    33:34:void <init>(android.widget.FrameLayout) -> <init>
    37:43:androidx.viewpager2.adapter.FragmentViewHolder create(android.view.ViewGroup) -> a
    47:47:android.widget.FrameLayout getContainer() -> a
androidx.viewpager2.adapter.StatefulAdapter -> a.w.b.b:
    void restoreState(android.os.Parcelable) -> a
    android.os.Parcelable saveState() -> a
androidx.viewpager2.widget.AnimateLayoutChangeDetector -> a.w.c.a:
    android.view.ViewGroup$MarginLayoutParams ZERO_MARGIN_LAYOUT_PARAMS -> b
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> a
    46:48:void <clinit>() -> <clinit>
    52:54:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    60:60:boolean mayHaveInterferingAnimations() -> a
    127:140:boolean hasRunningChangingLayoutTransition(android.view.View) -> a
    66:111:boolean arePagesLaidOutContiguously() -> b
    117:123:boolean hasRunningChangingLayoutTransition() -> c
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 -> a.w.c.a$a:
    androidx.viewpager2.widget.AnimateLayoutChangeDetector this$0 -> b
    94:94:void <init>(androidx.viewpager2.widget.AnimateLayoutChangeDetector) -> <init>
    97:97:int compare(int[],int[]) -> a
    94:94:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager2.widget.CompositeOnPageChangeCallback -> a.w.c.b:
    java.util.List mCallbacks -> a
    34:36:void <init>(int) -> <init>
    42:43:void addOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> a
    95:95:void throwCallbackListModifiedWhileInUse(java.util.ConcurrentModificationException) -> a
    49:50:void removeOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> b
    86:92:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    58:64:void onPageScrolled(int,float,int) -> onPageScrolled
    72:78:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.CompositePageTransformer -> a.w.c.c:
    java.util.List mTransformers -> a
    33:34:void <init>() -> <init>
    42:43:void addTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> a
    52:55:void transformPage(android.view.View,float) -> a
    47:48:void removeTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> b
androidx.viewpager2.widget.FakeDrag -> a.w.c.d:
    androidx.viewpager2.widget.ScrollEventAdapter mScrollEventAdapter -> b
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> c
    float mRequestedDragDistance -> f
    long mFakeDragBeginTime -> h
    int mActualDraggedDistance -> g
    androidx.viewpager2.widget.ViewPager2 mViewPager -> a
    int mMaximumVelocity -> e
    android.view.VelocityTracker mVelocityTracker -> d
    44:48:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ScrollEventAdapter,androidx.recyclerview.widget.RecyclerView) -> <init>
    56:69:boolean beginFakeDrag() -> a
    74:97:boolean fakeDragBy(float) -> a
    134:137:void addFakeMotionEvent(long,int,float,float) -> a
    102:120:boolean endFakeDrag() -> b
    51:51:boolean isFakeDragging() -> c
    124:131:void beginFakeVelocityTracker() -> d
androidx.viewpager2.widget.MarginPageTransformer -> a.w.c.e:
    int mMarginPx -> a
    47:50:void <init>(int) -> <init>
    54:63:void transformPage(android.view.View,float) -> a
    66:73:androidx.viewpager2.widget.ViewPager2 requireViewPager(android.view.View) -> a
androidx.viewpager2.widget.PageTransformerAdapter -> a.w.c.f:
    androidx.viewpager2.widget.ViewPager2$PageTransformer mPageTransformer -> b
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> a
    36:38:void <init>(androidx.recyclerview.widget.LinearLayoutManager) -> <init>
    41:41:androidx.viewpager2.widget.ViewPager2$PageTransformer getPageTransformer() -> a
    53:54:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> a
    82:82:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    58:74:void onPageScrolled(int,float,int) -> onPageScrolled
    78:78:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ScrollEventAdapter -> a.w.c.g:
    int STATE_IDLE -> n
    boolean mFakeDragging -> m
    int STATE_IN_PROGRESS_MANUAL_DRAG -> o
    androidx.viewpager2.widget.ViewPager2 mViewPager -> b
    boolean mDispatchSelected -> j
    int mDragStartPosition -> h
    boolean mScrollHappened -> k
    int mTarget -> i
    boolean mDataSetChangeHappened -> l
    int mScrollState -> f
    int mAdapterState -> e
    androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mCallback -> a
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> c
    androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues mScrollValues -> g
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> d
    int STATE_IN_PROGRESS_FAKE_DRAG -> r
    int NO_POSITION -> s
    int STATE_IN_PROGRESS_SMOOTH_SCROLL -> p
    int STATE_IN_PROGRESS_IMMEDIATE_SCROLL -> q
    77:84:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    287:300:void startDrag(boolean) -> a
    310:322:void notifyProgrammaticScroll(int,boolean) -> a
    356:357:void setOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> a
    407:408:double getRelativeScrollPosition() -> a
    431:434:void dispatchSelected(int) -> a
    437:440:void dispatchScrolled(int,float,int) -> a
    360:360:int getScrollState() -> b
    416:428:void dispatchStateChanged(int) -> b
    375:375:boolean isDragging() -> c
    383:383:boolean isFakeDragging() -> d
    367:367:boolean isIdle() -> e
    328:330:void notifyBeginFakeDrag() -> f
    303:304:void notifyDataSetChangeHappened() -> g
    336:353:void notifyEndFakeDrag() -> h
    443:443:int getPosition() -> i
    392:392:boolean isInAnyDraggingState() -> j
    87:96:void resetState() -> k
    224:284:void updateScrollEventValues() -> l
    105:169:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    177:217:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues -> a.w.c.g$a:
    float mOffset -> b
    int mOffsetPx -> c
    int mPosition -> a
    452:453:void <init>() -> <init>
    456:459:void reset() -> a
androidx.viewpager2.widget.ViewPager2 -> a.w.c.h:
    android.os.Parcelable mPendingAdapterState -> j
    androidx.viewpager2.widget.CompositeOnPageChangeCallback mPageChangeEventDispatcher -> n
    android.graphics.Rect mTmpChildRect -> c
    boolean mUserInputEnabled -> s
    int OFFSCREEN_PAGE_LIMIT_DEFAULT -> A
    androidx.recyclerview.widget.RecyclerView$ItemAnimator mSavedItemAnimator -> q
    androidx.recyclerview.widget.LinearLayoutManager mLayoutManager -> h
    androidx.viewpager2.widget.FakeDrag mFakeDragger -> o
    int SCROLL_STATE_DRAGGING -> y
    int ORIENTATION_VERTICAL -> w
    boolean mCurrentItemDirty -> f
    androidx.viewpager2.widget.CompositeOnPageChangeCallback mExternalPageChangeCallbacks -> d
    int mPendingCurrentItem -> i
    androidx.viewpager2.widget.PageTransformerAdapter mPageTransformerAdapter -> p
    int mCurrentItem -> e
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> k
    boolean mSavedItemAnimatorPresent -> r
    android.graphics.Rect mTmpContainerRect -> b
    androidx.recyclerview.widget.PagerSnapHelper mPagerSnapHelper -> l
    int SCROLL_STATE_SETTLING -> z
    int SCROLL_STATE_IDLE -> x
    int ORIENTATION_HORIZONTAL -> v
    androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mCurrentItemDataSetChangeObserver -> g
    int mOffscreenPageLimit -> t
    boolean sFeatureEnhancedA11yEnabled -> B
    androidx.viewpager2.widget.ViewPager2$AccessibilityProvider mAccessibilityProvider -> u
    androidx.viewpager2.widget.ScrollEventAdapter mScrollEventAdapter -> m
    121:121:void <clinit>() -> <clinit>
    157:159:void <init>(android.content.Context) -> <init>
    162:164:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    167:169:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:176:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    179:255:void initialize(android.content.Context,android.util.AttributeSet) -> a
    469:472:void registerCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    603:604:void setCurrentItem(int,boolean) -> a
    713:713:boolean beginFakeDrag() -> a
    735:735:boolean fakeDragBy(float) -> a
    872:873:void registerOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> a
    1144:1145:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> a
    1163:1164:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> a
    1175:1175:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> a
    292:301:void setOrientation(android.content.Context,android.util.AttributeSet) -> b
    475:478:void unregisterCurrentItemDataSetTracker(androidx.recyclerview.widget.RecyclerView$Adapter) -> b
    614:666:void setCurrentItemInternal(int,boolean) -> b
    749:749:boolean endFakeDrag() -> b
    882:883:void unregisterOnPageChangeCallback(androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) -> b
    1202:1203:void removeItemDecorationAt(int) -> b
    1215:1216:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> b
    1192:1193:void invalidateItemDecorations() -> c
    855:855:boolean canScrollHorizontally(int) -> canScrollHorizontally
    860:860:boolean canScrollVertically(int) -> canScrollVertically
    761:761:boolean isFakeDragging() -> d
    364:376:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    577:577:boolean isRtl() -> e
    803:803:boolean isUserInputEnabled() -> f
    930:938:void requestTransform() -> g
    285:288:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    482:482:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    675:675:int getCurrentItem() -> getCurrentItem
    1184:1184:int getItemDecorationCount() -> getItemDecorationCount
    850:850:int getOffscreenPageLimit() -> getOffscreenPageLimit
    573:573:int getOrientation() -> getOrientation
    556:557:int getPageSize() -> getPageSize
    687:687:int getScrollState() -> getScrollState
    770:779:void snapToPage() -> h
    537:538:void updateCurrentItem() -> i
    263:263:androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener enforceChildFillListener() -> j
    340:359:void restorePendingState() -> k
    949:951:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    516:533:void onLayout(boolean,int,int,int,int) -> onLayout
    498:512:void onMeasure(int,int) -> onMeasure
    328:337:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    308:323:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    488:489:void onViewAdded(android.view.View) -> onViewAdded
    956:959:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    458:466:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    591:592:void setCurrentItem(int) -> setCurrentItem
    943:945:void setLayoutDirection(int) -> setLayoutDirection
    832:839:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    568:570:void setOrientation(int) -> setOrientation
    900:921:void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer) -> setPageTransformer
    792:794:void setUserInputEnabled(boolean) -> setUserInputEnabled
androidx.viewpager2.widget.ViewPager2$1 -> a.w.c.h$a:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    133:133:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    136:138:void onChanged() -> onChanged
androidx.viewpager2.widget.ViewPager2$2 -> a.w.c.h$b:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    212:212:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    223:226:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    215:219:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$3 -> a.w.c.h$c:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    230:230:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    233:237:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$4 -> a.w.c.h$d:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    263:263:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    266:270:void onChildViewAttachedToWindow(android.view.View) -> a
    278:278:void onChildViewDetachedFromWindow(android.view.View) -> b
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider -> a.w.c.h$e:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    1220:1220:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1220:1220:void <init>(androidx.viewpager2.widget.ViewPager2,androidx.viewpager2.widget.ViewPager2$1) -> <init>
    1223:1223:void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView) -> a
    1226:1226:boolean handlesGetAccessibilityClassName() -> a
    1237:1237:void onAttachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    1255:1255:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> a
    1258:1258:boolean handlesPerformAccessibilityAction(int,android.os.Bundle) -> a
    1266:1266:void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    1269:1269:boolean handlesLmPerformAccessibilityAction(int) -> a
    1277:1277:void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1240:1240:void onDetachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> b
    1262:1262:boolean onPerformAccessibilityAction(int,android.os.Bundle) -> b
    1273:1273:boolean onLmPerformAccessibilityAction(int) -> b
    1280:1280:boolean handlesRvGetAccessibilityClassName() -> b
    1230:1230:java.lang.String onGetAccessibilityClassName() -> c
    1234:1234:void onRestorePendingState() -> d
    1284:1284:java.lang.CharSequence onRvGetAccessibilityClassName() -> e
    1252:1252:void onSetLayoutDirection() -> f
    1246:1246:void onSetNewCurrentItem() -> g
    1243:1243:void onSetOrientation() -> h
    1249:1249:void onSetUserInputEnabled() -> i
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider -> a.w.c.h$f:
    androidx.viewpager2.widget.ViewPager2 this$0 -> b
    1288:1288:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1291:1291:boolean handlesLmPerformAccessibilityAction(int) -> a
    1307:1312:void onLmInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1298:1299:boolean onLmPerformAccessibilityAction(int) -> b
    1316:1316:boolean handlesRvGetAccessibilityClassName() -> b
    1321:1322:java.lang.CharSequence onRvGetAccessibilityClassName() -> e
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver -> a.w.c.h$g:
    1577:1577:void <init>() -> <init>
    1577:1577:void <init>(androidx.viewpager2.widget.ViewPager2$1) -> <init>
    1583:1584:void onItemRangeChanged(int,int) -> onItemRangeChanged
    1589:1590:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    1594:1595:void onItemRangeInserted(int,int) -> onItemRangeInserted
    1604:1605:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    1599:1600:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl -> a.w.c.h$h:
    androidx.viewpager2.widget.ViewPager2 this$0 -> a
    1001:1003:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    1024:1033:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    1017:1019:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1008:1011:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    1039:1039:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit -> a.w.c.h$i:
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback -> a.w.c.h$j:
    1076:1076:void <init>() -> <init>
    1106:1106:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    1088:1088:void onPageScrolled(int,float,int) -> onPageScrolled
    1097:1097:void onPageSelected(int) -> onPageSelected
androidx.viewpager2.widget.ViewPager2$Orientation -> a.w.c.h$k:
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider -> a.w.c.h$l:
    androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mAdapterDataObserver -> d
    androidx.viewpager2.widget.ViewPager2 this$0 -> e
    androidx.core.view.accessibility.AccessibilityViewCommand mActionPageBackward -> c
    androidx.core.view.accessibility.AccessibilityViewCommand mActionPageForward -> b
    1328:1340:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1356:1371:void onInitialize(androidx.viewpager2.widget.CompositeOnPageChangeCallback,androidx.recyclerview.widget.RecyclerView) -> a
    1375:1375:boolean handlesGetAccessibilityClassName() -> a
    1393:1397:void onAttachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    1431:1435:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> a
    1439:1439:boolean handlesPerformAccessibilityAction(int,android.os.Bundle) -> a
    1458:1460:void onRvInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    1401:1404:void onDetachAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> b
    1445:1446:boolean onPerformAccessibilityAction(int,android.os.Bundle) -> b
    1537:1552:void addCollectionInfo(android.view.accessibility.AccessibilityNodeInfo) -> b
    1380:1381:java.lang.String onGetAccessibilityClassName() -> c
    1468:1471:void setCurrentItemFromAccessibilityCommand(int) -> c
    1555:1561:void addScrollActions(android.view.accessibility.AccessibilityNodeInfo) -> c
    1388:1389:void onRestorePendingState() -> d
    1426:1427:void onSetLayoutDirection() -> f
    1413:1414:void onSetNewCurrentItem() -> g
    1408:1409:void onSetOrientation() -> h
    1418:1422:void onSetUserInputEnabled() -> i
    1478:1534:void updatePageAccessibilityActions() -> j
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1 -> a.w.c.h$l$a:
    androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider this$1 -> a
    1330:1330:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1334:1336:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2 -> a.w.c.h$l$b:
    androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider this$1 -> a
    1341:1341:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1345:1347:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3 -> a.w.c.h$l$c:
    androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider this$1 -> a
    1359:1359:void <init>(androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider) -> <init>
    1362:1363:void onChanged() -> onChanged
androidx.viewpager2.widget.ViewPager2$PageTransformer -> a.w.c.h$m:
    void transformPage(android.view.View,float) -> a
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl -> a.w.c.h$n:
    androidx.viewpager2.widget.ViewPager2 this$0 -> h
    1044:1045:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    1054:1054:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl -> a.w.c.h$o:
    androidx.viewpager2.widget.ViewPager2 this$0 -> b
    967:969:void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context) -> <init>
    974:977:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    982:986:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    996:996:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    991:991:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.viewpager2.widget.ViewPager2$SavedState -> a.w.c.h$p:
    android.os.Parcelable mAdapterState -> d
    int mRecyclerViewId -> b
    int mCurrentItem -> c
    412:412:void <clinit>() -> <clinit>
    385:387:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    390:392:void <init>(android.os.Parcel) -> <init>
    395:396:void <init>(android.os.Parcelable) -> <init>
    399:402:void readValues(android.os.Parcel,java.lang.ClassLoader) -> a
    406:410:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager2.widget.ViewPager2$SavedState$1 -> a.w.c.h$p$a:
    412:412:void <init>() -> <init>
    412:412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    412:412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    415:415:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    422:422:androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    412:412:java.lang.Object[] newArray(int) -> newArray
    427:427:androidx.viewpager2.widget.ViewPager2$SavedState[] newArray(int) -> newArray
androidx.viewpager2.widget.ViewPager2$ScrollState -> a.w.c.h$q:
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition -> a.w.c.h$r:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> c
    int mPosition -> b
    1062:1065:void <init>(int,androidx.recyclerview.widget.RecyclerView) -> <init>
    1069:1070:void run() -> run
com.app.uninstaller.appuninstaller212.MyApplication -> com.app.uninstaller.appuninstaller212.MyApplication:
    164:164:void <init>() -> <init>
    479:427:void onCreate() -> onCreate
com.app.uninstaller.appuninstaller212.NotificationListener -> com.app.uninstaller.appuninstaller212.NotificationListener:
    java.lang.String j -> a
    238:238:void <init>() -> <init>
    712:639:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.app.uninstaller.appuninstaller212.R -> b.a.a.a.a:
    668:668:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$anim -> b.a.a.a.a$a:
    479:479:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$animator -> b.a.a.a.a$b:
    807:807:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$attr -> b.a.a.a.a$c:
    561:561:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$bool -> b.a.a.a.a$d:
    4974:4974:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$color -> b.a.a.a.a$e:
    19435:19435:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$dimen -> b.a.a.a.a$f:
    24718:24718:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$drawable -> b.a.a.a.a$g:
    21742:21742:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$id -> b.a.a.a.a$h:
    20198:20198:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$integer -> b.a.a.a.a$i:
    17184:17184:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$interpolator -> b.a.a.a.a$j:
    19858:19858:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$layout -> b.a.a.a.a$k:
    23412:23412:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$menu -> b.a.a.a.a$l:
    18402:18402:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$mipmap -> b.a.a.a.a$m:
    7768:7768:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$plurals -> b.a.a.a.a$n:
    17040:17040:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$string -> b.a.a.a.a$o:
    10295:10295:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$style -> b.a.a.a.a$p:
    17835:17835:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$styleable -> b.a.a.a.a$q:
    20608:10228:void <clinit>() -> <clinit>
    25446:25446:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.R$xml -> b.a.a.a.a$r:
    17050:17050:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.RepeatNotification -> com.app.uninstaller.appuninstaller212.RepeatNotification:
    java.lang.String j -> a
    124:124:void <init>() -> <init>
    322:262:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.app.uninstaller.appuninstaller212.activity.ActivityAppSetting -> com.app.uninstaller.appuninstaller212.activity.ActivityAppSetting:
    android.widget.TextView e -> N
    java.lang.String f -> H
    int i -> I
    java.lang.String a -> O
    android.widget.LinearLayout g -> F
    java.lang.String L -> S
    com.app.uninstaller.appuninstaller212.o.y B -> G
    androidx.appcompat.widget.Toolbar k -> J
    android.widget.ImageView G -> K
    android.widget.ImageView E -> Q
    android.content.Intent A -> P
    android.widget.ImageView j -> T
    android.widget.TextView h -> M
    android.widget.ImageView M -> R
    android.widget.TextView K -> L
    238:238:void <init>() -> <init>
    691:879:void onClick(android.view.View) -> onClick
    158:296:void onCreate(android.os.Bundle) -> onCreate
    228:143:void l() -> q
com.app.uninstaller.appuninstaller212.activity.ActivityMain -> com.app.uninstaller.appuninstaller212.activity.ActivityMain:
    android.widget.ImageView b -> y0
    int A -> B0
    android.widget.LinearLayout L -> o0
    android.widget.FrameLayout f -> g0
    android.widget.ImageView y -> s0
    java.lang.String M -> C0
    android.content.SharedPreferences u -> S
    java.lang.Thread h -> k0
    android.widget.RadioGroup F -> Y
    android.content.SharedPreferences$Editor c -> d0
    android.widget.ImageView O -> J
    java.lang.String P -> r0
    android.widget.LinearLayout J -> Z
    android.os.Handler q -> N
    android.widget.TextView R -> I
    android.app.Dialog Z -> T
    android.widget.RadioGroup T -> M
    android.widget.FrameLayout Q -> G
    android.widget.TextView C -> a0
    android.widget.TextView x -> V
    int U -> t0
    android.widget.TextView a -> m0
    android.widget.EditText z -> v0
    android.widget.ImageView K -> A0
    android.widget.ProgressBar r -> U
    android.app.PendingIntent v -> R
    android.widget.TextView k -> i0
    android.widget.TextView V -> O
    android.widget.ImageView D -> x0
    com.app.uninstaller.appuninstaller212.q.y d -> X
    android.widget.LinearLayout E -> n0
    android.widget.TextView X -> w0
    android.widget.TextView s -> u0
    com.google.android.material.navigation.NavigationView g -> e0
    com.app.uninstaller.appuninstaller212.o.y i -> h0
    android.widget.LinearLayout p -> P
    android.app.Dialog m -> c0
    java.lang.String w -> q0
    java.lang.Runnable l -> b0
    androidx.fragment.app.FragmentManager Y -> F
    java.lang.String I -> z0
    android.widget.TextView j -> p0
    androidx.drawerlayout.widget.DrawerLayout H -> W
    android.widget.TextView e -> l0
    android.widget.LinearLayout o -> K
    android.widget.TextView G -> j0
    android.widget.TextView t -> H
    android.widget.TextView B -> f0
    android.app.Dialog n -> Q
    android.widget.TextView N -> L
    262:561:void <clinit>() -> <clinit>
    150:604:void <init>() -> <init>
    150:150:void l(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> a
    462:204:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    644:189:void onClick(android.view.View) -> onClick
    70:30:void onCreate(android.os.Bundle) -> onCreate
    650:378:boolean onNavigationItemSelected(android.view.MenuItem) -> onNavigationItemSelected
    102:543:void onResume() -> onResume
    387:845:void k() -> q
    673:657:void l() -> r
com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory -> com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory:
    com.app.uninstaller.appuninstaller212.o.i a -> I
    com.app.uninstaller.appuninstaller212.u.e e -> H
    android.widget.ImageView h -> G
    android.widget.ImageView L -> M
    java.util.List A -> J
    android.app.Dialog j -> N
    android.widget.TextView K -> F
    android.widget.TextView E -> K
    androidx.recyclerview.widget.RecyclerView M -> L
    714:714:void <init>() -> <init>
    6:228:void onClick(android.view.View) -> onClick
    660:402:void onCreate(android.os.Bundle) -> onCreate
com.app.uninstaller.appuninstaller212.activity.c -> com.app.uninstaller.appuninstaller212.activity.ActivityMain$a:
    com.app.uninstaller.appuninstaller212.activity.ActivityMain j -> b
    707:707:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> <init>
    314:52:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.activity.g -> com.app.uninstaller.appuninstaller212.activity.ActivityMain$b:
    com.app.uninstaller.appuninstaller212.activity.ActivityMain j -> b
    91:91:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> <init>
    439:94:void run() -> run
com.app.uninstaller.appuninstaller212.activity.i -> com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory$a:
    com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory j -> b
    658:658:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory) -> <init>
    684:212:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.activity.j -> com.app.uninstaller.appuninstaller212.activity.ActivityMain$c:
    com.app.uninstaller.appuninstaller212.activity.ActivityMain j -> b
    604:604:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> <init>
    317:433:void run() -> run
com.app.uninstaller.appuninstaller212.activity.w -> com.app.uninstaller.appuninstaller212.activity.ActivityMain$d:
    com.app.uninstaller.appuninstaller212.activity.ActivityMain j -> a
    345:345:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> <init>
    274:64:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.app.uninstaller.appuninstaller212.activity.x -> com.app.uninstaller.appuninstaller212.activity.ActivityMain$e:
    com.app.uninstaller.appuninstaller212.activity.ActivityMain j -> b
    735:735:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> <init>
    577:319:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.activity.y -> com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory$b:
    com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory j -> b
    22:22:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityUninstallHistory) -> <init>
    785:3:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.activity.z -> com.app.uninstaller.appuninstaller212.activity.ActivityMain$f:
    com.app.uninstaller.appuninstaller212.activity.ActivityMain j -> a
    235:235:void <init>(com.app.uninstaller.appuninstaller212.activity.ActivityMain) -> <init>
    511:553:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.app.uninstaller.appuninstaller212.ads.ActivityMyBase -> com.app.uninstaller.appuninstaller212.ads.ActivityMyBase:
    java.lang.Runnable j -> E
    android.os.Handler M -> C
    boolean E -> B
    boolean L -> D
    447:574:void <init>() -> <init>
    447:447:boolean l(com.app.uninstaller.appuninstaller212.ads.ActivityMyBase,boolean) -> a
    528:227:void onBackPressed() -> onBackPressed
    455:233:void onCreate(android.os.Bundle) -> onCreate
    614:222:void setContentView(int) -> setContentView
com.app.uninstaller.appuninstaller212.ads.MainActivity -> com.app.uninstaller.appuninstaller212.ads.MainActivity:
    164:164:void <init>() -> <init>
    479:260:void onCreate(android.os.Bundle) -> onCreate
    478:712:void onDestroy() -> onDestroy
com.app.uninstaller.appuninstaller212.ads.i -> b.a.a.a.b.a:
    164:164:void <init>() -> <init>
    668:455:boolean l(android.content.Context) -> a
com.app.uninstaller.appuninstaller212.ads.w -> com.app.uninstaller.appuninstaller212.ads.ActivityMyBase$a:
    com.app.uninstaller.appuninstaller212.ads.ActivityMyBase j -> b
    793:793:void <init>(com.app.uninstaller.appuninstaller212.ads.ActivityMyBase) -> <init>
    807:561:void run() -> run
com.app.uninstaller.appuninstaller212.ads.x -> com.app.uninstaller.appuninstaller212.ads.ActivityMyBase$b:
    com.app.uninstaller.appuninstaller212.ads.ActivityMyBase j -> b
    692:692:void <init>(com.app.uninstaller.appuninstaller212.ads.ActivityMyBase) -> <init>
    290:143:void run() -> run
com.app.uninstaller.appuninstaller212.ads.y -> b.a.a.a.b.b:
    void l(java.lang.Object,int) -> a
com.app.uninstaller.appuninstaller212.i -> b.a.a.a.c:
    java.lang.String j -> f
    int M -> d
    java.lang.String A -> b
    boolean E -> c
    java.lang.String L -> e
    164:164:void <clinit>() -> <clinit>
    670:670:void <init>() -> <init>
com.app.uninstaller.appuninstaller212.k.i -> b.a.a.a.d.a:
    221:221:void <init>() -> <init>
    233:503:java.lang.String l() -> a
    238:533:java.util.Date k(java.lang.String) -> a
    222:863:java.util.Date l(java.lang.String) -> b
com.app.uninstaller.appuninstaller212.k.x -> b.a.a.a.d.b:
    714:714:void <init>() -> <init>
    java.lang.String l(java.lang.String) -> a
    102:790:java.lang.String l(java.util.Date) -> a
    174:791:java.util.Date l(java.util.Date[]) -> a
    199:199:java.util.Date A(android.content.pm.PackageManager,java.lang.String) -> a
    406:656:float l(android.content.Context,java.lang.String) -> a
    478:807:java.util.ArrayList l(boolean,android.content.Context) -> a
    804:384:java.util.ArrayList k(android.content.Context) -> a
    36:648:java.util.Date k(android.content.pm.PackageManager,java.lang.String) -> b
    150:216:java.util.ArrayList l(android.content.Context) -> b
    370:634:java.util.Date l(android.content.pm.PackageManager,java.lang.String) -> c
com.app.uninstaller.appuninstaller212.k.y -> b.a.a.a.d.c:
    447:447:void <init>() -> <init>
    java.lang.String l(java.lang.String) -> a
    221:487:float l() -> a
    238:848:long l() -> a
    533:296:java.lang.String l(float) -> a
com.app.uninstaller.appuninstaller212.o.i -> b.a.a.a.e.a:
    android.database.sqlite.SQLiteDatabase j -> a
    313:158:void <init>(android.content.Context) -> <init>
    java.lang.String l(java.lang.String) -> a
    6:675:java.util.List l() -> a
    127:807:boolean l(com.app.uninstaller.appuninstaller212.x.i) -> a
    143:335:byte[] l(android.graphics.drawable.Drawable) -> a
    444:402:boolean l(java.lang.String,int) -> a
    639:118:boolean l(int) -> a
    692:255:boolean l() -> a
com.app.uninstaller.appuninstaller212.o.y -> b.a.a.a.e.b:
    android.database.sqlite.SQLiteDatabase j -> a
    487:260:void <init>(android.content.Context) -> <init>
    3:692:int l() -> a
    186:798:com.app.uninstaller.appuninstaller212.x.y l() -> a
    228:658:boolean A(java.lang.String) -> a
    322:222:boolean l(com.app.uninstaller.appuninstaller212.x.y) -> a
    750:376:boolean k(java.lang.String) -> b
    330:567:boolean l(java.lang.String) -> c
com.app.uninstaller.appuninstaller212.q.y -> b.a.a.a.f.a:
    java.lang.String e -> g
    java.lang.String h -> f
    java.lang.String A -> i
    java.lang.String a -> h
    java.lang.String M -> k
    java.lang.String E -> j
    java.lang.String j -> m
    java.lang.String L -> l
    java.lang.String k -> c
    java.lang.String i -> b
    java.lang.String K -> e
    java.lang.String G -> d
    712:533:void <init>(android.content.Context) -> <init>
    318:318:android.database.sqlite.SQLiteDatabase l() -> a
    222:786:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    341:341:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.app.uninstaller.appuninstaller212.u.a -> b.a.a.a.g.a$a:
    android.widget.TextView A -> a
    com.app.uninstaller.appuninstaller212.u.e L -> d
    android.widget.TextView j -> e
    android.widget.ImageView E -> b
    android.widget.LinearLayout M -> c
    647:262:void <init>(com.app.uninstaller.appuninstaller212.u.e,android.view.View) -> <init>
com.app.uninstaller.appuninstaller212.u.b -> b.a.a.a.g.a$b$a:
    com.app.uninstaller.appuninstaller212.u.o j -> b
    316:316:void <init>(com.app.uninstaller.appuninstaller212.u.o) -> <init>
    661:304:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.c -> b.a.a.a.g.b$a$a$a:
    com.app.uninstaller.appuninstaller212.u.j j -> b
    429:429:void <init>(com.app.uninstaller.appuninstaller212.u.j) -> <init>
    405:174:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.e -> b.a.a.a.g.a:
    android.widget.TextView e -> a
    android.app.Dialog j -> g
    android.widget.TextView A -> c
    com.app.uninstaller.appuninstaller212.o.i E -> d
    java.util.List M -> e
    int a -> b
    android.content.Context L -> f
    863:150:void <init>(android.content.Context,int,java.util.List) -> <init>
    79:608:com.app.uninstaller.appuninstaller212.u.a l(android.view.ViewGroup,int) -> a
    241:241:android.widget.TextView k(com.app.uninstaller.appuninstaller212.u.e) -> a
    241:241:android.widget.TextView k(com.app.uninstaller.appuninstaller212.u.e,android.widget.TextView) -> a
    241:241:android.app.Dialog l(com.app.uninstaller.appuninstaller212.u.e,android.app.Dialog) -> a
    684:543:void l(com.app.uninstaller.appuninstaller212.u.a,int) -> a
    241:241:android.app.Dialog l(com.app.uninstaller.appuninstaller212.u.e) -> b
    241:241:android.content.Context l(com.app.uninstaller.appuninstaller212.u.e) -> b
    241:241:android.widget.TextView l(com.app.uninstaller.appuninstaller212.u.e) -> b
    241:241:android.widget.TextView l(com.app.uninstaller.appuninstaller212.u.e,android.widget.TextView) -> b
    241:241:com.app.uninstaller.appuninstaller212.o.i l(com.app.uninstaller.appuninstaller212.u.e) -> b
    720:720:int getItemCount() -> getItemCount
    241:241:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    241:241:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.app.uninstaller.appuninstaller212.u.g -> b.a.a.a.g.b$a$b:
    com.app.uninstaller.appuninstaller212.u.t j -> a
    420:420:void <init>(com.app.uninstaller.appuninstaller212.u.t) -> <init>
    634:634:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.app.uninstaller.appuninstaller212.u.h -> b.a.a.a.g.a$b$b:
    com.app.uninstaller.appuninstaller212.u.o j -> b
    763:763:void <init>(com.app.uninstaller.appuninstaller212.u.o) -> <init>
    384:30:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.i -> b.a.a.a.g.b$a$c:
    com.app.uninstaller.appuninstaller212.u.t j -> b
    663:663:void <init>(com.app.uninstaller.appuninstaller212.u.t) -> <init>
    513:276:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.j -> b.a.a.a.g.b$a$a:
    com.app.uninstaller.appuninstaller212.u.t j -> b
    182:182:void <init>(com.app.uninstaller.appuninstaller212.u.t) -> <init>
    18:314:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.o -> b.a.a.a.g.a$b:
    com.app.uninstaller.appuninstaller212.u.e j -> c
    com.app.uninstaller.appuninstaller212.x.i L -> b
    191:191:void <init>(com.app.uninstaller.appuninstaller212.u.e,com.app.uninstaller.appuninstaller212.x.i) -> <init>
    382:9:boolean onLongClick(android.view.View) -> onLongClick
com.app.uninstaller.appuninstaller212.u.p -> b.a.a.a.g.b$b:
    com.app.uninstaller.appuninstaller212.u.v L -> c
    float M -> b
    com.app.uninstaller.appuninstaller212.x.i j -> d
    691:691:void <init>(com.app.uninstaller.appuninstaller212.u.v,com.app.uninstaller.appuninstaller212.x.i,float) -> <init>
    335:699:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.q -> b.a.a.a.g.a$c:
    com.app.uninstaller.appuninstaller212.u.e L -> b
    com.app.uninstaller.appuninstaller212.x.i j -> c
    840:840:void <init>(com.app.uninstaller.appuninstaller212.u.e,com.app.uninstaller.appuninstaller212.x.i) -> <init>
    691:219:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.t -> b.a.a.a.g.b$a:
    com.app.uninstaller.appuninstaller212.u.v M -> c
    com.app.uninstaller.appuninstaller212.u.y L -> d
    com.app.uninstaller.appuninstaller212.x.i j -> e
    java.lang.String E -> b
    543:543:void <init>(com.app.uninstaller.appuninstaller212.u.v,com.app.uninstaller.appuninstaller212.u.y,com.app.uninstaller.appuninstaller212.x.i,java.lang.String) -> <init>
    816:162:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.v -> b.a.a.a.g.b:
    android.widget.TextView G -> o
    java.util.List K -> p
    android.widget.TextView e -> r
    int I -> i
    boolean E -> u
    android.widget.TextView L -> w
    android.widget.TextView j -> x
    android.app.Dialog J -> b
    android.widget.ImageView C -> c
    android.content.Context a -> s
    android.widget.TextView D -> d
    com.app.uninstaller.appuninstaller212.y B -> k
    android.widget.TextView m -> g
    android.app.Dialog k -> n
    int M -> v
    android.widget.TextView b -> f
    double l -> e
    android.widget.TextView c -> h
    com.app.uninstaller.appuninstaller212.o.i f -> l
    android.widget.ImageView A -> t
    android.widget.TextView g -> j
    java.util.List i -> m
    int h -> q
    444:647:void <init>(android.content.Context,int,java.util.List,boolean,com.app.uninstaller.appuninstaller212.y) -> <init>
    3:412:void l(com.app.uninstaller.appuninstaller212.u.y,int) -> a
    70:675:com.app.uninstaller.appuninstaller212.u.y l(android.view.ViewGroup,int) -> a
    660:660:android.widget.TextView A(com.app.uninstaller.appuninstaller212.u.v) -> a
    660:660:android.widget.TextView A(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> a
    660:660:android.app.Dialog k(com.app.uninstaller.appuninstaller212.u.v,android.app.Dialog) -> a
    660:660:android.widget.ImageView k(com.app.uninstaller.appuninstaller212.u.v,android.widget.ImageView) -> a
    660:660:com.app.uninstaller.appuninstaller212.o.i l(com.app.uninstaller.appuninstaller212.u.v,com.app.uninstaller.appuninstaller212.o.i) -> a
    660:660:android.widget.TextView B(com.app.uninstaller.appuninstaller212.u.v) -> b
    660:660:android.widget.TextView B(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> b
    660:660:android.app.Dialog l(com.app.uninstaller.appuninstaller212.u.v,android.app.Dialog) -> b
    660:660:android.widget.ImageView l(com.app.uninstaller.appuninstaller212.u.v,android.widget.ImageView) -> b
    660:660:android.widget.TextView K(com.app.uninstaller.appuninstaller212.u.v) -> c
    660:660:android.widget.TextView K(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> c
    660:660:android.widget.TextView b(com.app.uninstaller.appuninstaller212.u.v) -> d
    660:660:android.widget.TextView b(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> d
    660:660:android.widget.TextView f(com.app.uninstaller.appuninstaller212.u.v) -> e
    660:660:android.widget.TextView f(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> e
    660:660:android.widget.TextView g(com.app.uninstaller.appuninstaller212.u.v) -> f
    660:660:android.widget.TextView g(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> f
    660:660:android.widget.TextView j(com.app.uninstaller.appuninstaller212.u.v) -> g
    660:660:android.widget.TextView j(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> g
    878:878:int getItemCount() -> getItemCount
    660:660:android.app.Dialog k(com.app.uninstaller.appuninstaller212.u.v) -> h
    660:660:android.widget.ImageView k(com.app.uninstaller.appuninstaller212.u.v) -> h
    660:660:android.widget.TextView k(com.app.uninstaller.appuninstaller212.u.v) -> h
    660:660:android.widget.TextView k(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> h
    660:660:int l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:android.app.Dialog l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:android.content.Context l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:android.widget.ImageView l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:android.widget.TextView l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:android.widget.TextView l(com.app.uninstaller.appuninstaller212.u.v,android.widget.TextView) -> i
    660:660:com.app.uninstaller.appuninstaller212.o.i l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:boolean l(com.app.uninstaller.appuninstaller212.u.v) -> i
    660:660:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    296:296:void onClick(android.view.View) -> onClick
    660:660:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.app.uninstaller.appuninstaller212.u.w -> b.a.a.a.g.b$a$d:
    com.app.uninstaller.appuninstaller212.u.t j -> b
    52:52:void <init>(com.app.uninstaller.appuninstaller212.u.t) -> <init>
    546:730:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.x -> b.a.a.a.g.b$a$e:
    com.app.uninstaller.appuninstaller212.u.t j -> b
    575:575:void <init>(com.app.uninstaller.appuninstaller212.u.t) -> <init>
    300:57:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.u.y -> b.a.a.a.g.b$c:
    android.widget.CheckBox A -> c
    android.widget.TextView e -> a
    com.app.uninstaller.appuninstaller212.u.v E -> d
    android.widget.TextView j -> g
    android.widget.TextView L -> f
    android.widget.ImageView M -> e
    android.widget.ImageView a -> b
    79:684:void <init>(com.app.uninstaller.appuninstaller212.u.v,android.view.View) -> <init>
com.app.uninstaller.appuninstaller212.u.z -> b.a.a.a.g.b$a$a$b:
    com.app.uninstaller.appuninstaller212.u.j j -> b
    590:590:void <init>(com.app.uninstaller.appuninstaller212.u.j) -> <init>
    389:707:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.x.i -> b.a.a.a.h.a:
    java.util.Date A -> f
    java.lang.String L -> i
    java.lang.String M -> h
    android.graphics.drawable.Drawable E -> g
    int e -> d
    int K -> b
    java.lang.String h -> c
    java.lang.Float G -> a
    java.lang.String a -> e
    260:238:void <init>() -> <init>
    6:262:void A(java.lang.String) -> a
    186:22:void l(android.graphics.drawable.Drawable) -> a
    465:692:void l(java.util.Date) -> a
    662:127:void k(int) -> a
    675:804:void l(java.lang.Float) -> a
    818:818:java.lang.String A() -> a
    578:578:java.lang.String b() -> b
    711:505:void l(int) -> b
    840:251:void b(java.lang.String) -> b
    150:150:java.lang.String f() -> c
    184:807:void f(java.lang.String) -> c
    241:241:int k() -> d
    402:402:java.lang.String k() -> d
    445:398:void k(java.lang.String) -> d
    java.lang.String l(java.lang.String) -> e
    176:176:android.graphics.drawable.Drawable l() -> e
    639:639:java.util.Date l() -> e
    712:533:void l(java.lang.String) -> e
    714:714:java.lang.String l() -> e
    785:785:java.lang.Float l() -> e
    806:806:int l() -> e
com.app.uninstaller.appuninstaller212.x.y -> b.a.a.a.h.b:
    java.lang.String E -> a
    java.lang.String M -> b
    int L -> c
    java.lang.String j -> d
    479:221:void <init>() -> <init>
    184:807:void A(java.lang.String) -> a
    578:578:java.lang.String A() -> a
    662:127:void l(int) -> a
    712:533:void k(java.lang.String) -> b
    714:714:java.lang.String k() -> b
    233:233:java.lang.String l() -> c
    241:241:int l() -> c
    260:238:void l(java.lang.String) -> c
com.app.uninstaller.appuninstaller212.y -> b.a.a.a.j:
    void l(int,double,java.util.List) -> a
com.app.uninstaller.appuninstaller212.y.a -> b.a.a.a.i.a$a:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    206:206:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    388:388:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    206:206:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.b -> b.a.a.a.i.a$b:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    70:70:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    798:798:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    70:70:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.c -> b.a.a.a.i.b$a:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    290:290:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    251:251:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    290:290:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.e -> b.a.a.a.i.a:
    java.lang.String L -> g
    androidx.recyclerview.widget.RecyclerView a -> c
    java.util.List E -> e
    com.app.uninstaller.appuninstaller212.u.v M -> f
    android.content.SharedPreferences e -> b
    java.util.List j -> h
    java.lang.String A -> d
    222:793:void <init>() -> <init>
    222:222:void l(com.app.uninstaller.appuninstaller212.y.e) -> a
    370:370:void l(int,double,java.util.List) -> a
    871:625:java.lang.String l(java.lang.String) -> a
    199:343:void l() -> b
    376:341:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    402:91:void onResume() -> onResume
com.app.uninstaller.appuninstaller212.y.g -> b.a.a.a.i.b$b:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    785:785:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    70:827:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    785:785:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.h -> b.a.a.a.i.a$c:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    44:44:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    840:227:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    44:44:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.i -> b.a.a.a.i.b$c:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    680:680:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    40:40:void afterTextChanged(android.text.Editable) -> afterTextChanged
    524:524:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    30:466:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.app.uninstaller.appuninstaller212.y.j -> b.a.a.a.i.b$d:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    446:446:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    255:255:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    446:446:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.o -> b.a.a.a.i.a$d:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    212:212:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    635:635:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    212:212:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.p -> b.a.a.a.i.a$e:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    763:763:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    816:816:void afterTextChanged(android.text.Editable) -> afterTextChanged
    384:384:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    406:543:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.app.uninstaller.appuninstaller212.y.q -> b.a.a.a.i.a$f:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    228:228:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    79:528:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    228:228:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.t -> b.a.a.a.i.b:
    androidx.recyclerview.widget.RecyclerView a -> f
    java.lang.String E -> h
    java.util.List h -> d
    com.app.uninstaller.appuninstaller212.u.v G -> b
    java.util.List M -> i
    boolean A -> g
    int K -> c
    com.app.uninstaller.appuninstaller212.o.i j -> k
    android.content.SharedPreferences L -> j
    376:402:void <init>() -> <init>
    52:431:java.lang.String l(java.lang.String) -> a
    376:376:void l(com.app.uninstaller.appuninstaller212.y.t) -> a
    586:707:void l(int,double,java.util.List) -> a
    871:408:void l() -> b
    314:156:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    262:79:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    658:370:void onResume() -> onResume
com.app.uninstaller.appuninstaller212.y.v -> b.a.a.a.i.a$g:
    com.app.uninstaller.appuninstaller212.y.e j -> b
    476:476:void <init>(com.app.uninstaller.appuninstaller212.y.e) -> <init>
    532:532:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    476:476:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.w -> b.a.a.a.i.b$e:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    699:699:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    855:855:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    699:699:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.x -> b.a.a.a.i.b$f:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    661:661:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    763:763:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    661:661:int compare(java.lang.Object,java.lang.Object) -> compare
com.app.uninstaller.appuninstaller212.y.y -> b.a.a.a.i.b$g:
    com.app.uninstaller.appuninstaller212.o.i j -> d
    java.util.List L -> c
    com.app.uninstaller.appuninstaller212.y.t M -> b
    203:203:void <init>(com.app.uninstaller.appuninstaller212.y.t,java.util.List,com.app.uninstaller.appuninstaller212.o.i) -> <init>
    174:623:void onClick(android.view.View) -> onClick
com.app.uninstaller.appuninstaller212.y.z -> b.a.a.a.i.b$h:
    com.app.uninstaller.appuninstaller212.y.t j -> b
    746:746:void <init>(com.app.uninstaller.appuninstaller212.y.t) -> <init>
    594:191:int l(com.app.uninstaller.appuninstaller212.x.i,com.app.uninstaller.appuninstaller212.x.i) -> a
    746:746:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.material.R -> com.google.android.material.R:
    668:668:void <init>() -> <init>
com.google.android.material.R$anim -> com.google.android.material.R$anim:
    455:455:void <init>() -> <init>
com.google.android.material.R$animator -> com.google.android.material.R$animator:
    444:444:void <init>() -> <init>
com.google.android.material.R$attr -> com.google.android.material.R$attr:
    711:711:void <init>() -> <init>
com.google.android.material.R$bool -> com.google.android.material.R$bool:
    626:626:void <init>() -> <init>
com.google.android.material.R$color -> com.google.android.material.R$color:
    13:13:void <init>() -> <init>
com.google.android.material.R$dimen -> com.google.android.material.R$dimen:
    3469:3469:void <init>() -> <init>
com.google.android.material.R$drawable -> com.google.android.material.R$drawable:
    2351:2351:void <init>() -> <init>
com.google.android.material.R$id -> com.google.android.material.R$id:
    3206:3206:void <init>() -> <init>
com.google.android.material.R$integer -> com.google.android.material.R$integer:
    1768:1768:void <init>() -> <init>
com.google.android.material.R$interpolator -> com.google.android.material.R$interpolator:
    1085:1085:void <init>() -> <init>
com.google.android.material.R$layout -> com.google.android.material.R$layout:
    1399:1399:void <init>() -> <init>
com.google.android.material.R$plurals -> com.google.android.material.R$plurals:
    2066:2066:void <init>() -> <init>
com.google.android.material.R$string -> com.google.android.material.R$string:
    1176:1176:void <init>() -> <init>
com.google.android.material.R$style -> com.google.android.material.R$style:
    3096:3096:void <init>() -> <init>
com.google.android.material.R$styleable -> com.google.android.material.R$styleable:
    3064:1661:void <clinit>() -> <clinit>
    2296:2296:void <init>() -> <init>
com.google.android.material.R$xml -> com.google.android.material.R$xml:
    1020:1020:void <init>() -> <init>
com.google.android.material.animation.AnimationUtils -> com.google.android.material.animation.AnimationUtils:
    36:43:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    47:47:float lerp(float,float,float) -> lerp
    52:52:int lerp(int,int,float) -> lerp
com.google.android.material.animation.AnimatorSetCompat -> com.google.android.material.animation.AnimatorSetCompat:
    32:32:void <init>() -> <init>
    38:48:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
com.google.android.material.animation.ArgbEvaluatorCompat -> com.google.android.material.animation.ArgbEvaluatorCompat:
    29:29:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    28:28:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    58:91:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    40:40:com.google.android.material.animation.ArgbEvaluatorCompat getInstance() -> getInstance
com.google.android.material.animation.ChildrenAlphaProperty -> com.google.android.material.animation.ChildrenAlphaProperty:
    38:38:void <clinit>() -> <clinit>
    42:43:void <init>(java.lang.String) -> <init>
    33:33:java.lang.Object get(java.lang.Object) -> get
    48:52:java.lang.Float get(android.view.ViewGroup) -> get
    33:33:void set(java.lang.Object,java.lang.Object) -> set
    58:66:void set(android.view.ViewGroup,java.lang.Float) -> set
com.google.android.material.animation.DrawableAlphaProperty -> com.google.android.material.animation.DrawableAlphaProperty:
    36:36:void <clinit>() -> <clinit>
    42:43:void <init>() -> <init>
    30:30:java.lang.Object get(java.lang.Object) -> get
    48:54:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    30:30:void set(java.lang.Object,java.lang.Object) -> set
    59:64:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
com.google.android.material.animation.ImageMatrixProperty -> com.google.android.material.animation.ImageMatrixProperty:
    31:32:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:43:android.graphics.Matrix get(android.widget.ImageView) -> get
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    36:37:void set(android.widget.ImageView,android.graphics.Matrix) -> set
com.google.android.material.animation.MatrixEvaluator -> com.google.android.material.animation.MatrixEvaluator:
    26:29:void <init>() -> <init>
    26:26:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    34:41:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.animation.MotionSpec -> com.google.android.material.animation.MotionSpec:
    66:71:void <init>() -> <init>
    215:220:void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator) -> addInfoFromAnimator
    128:132:android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[]) -> clonePropertyValuesHolder
    175:181:com.google.android.material.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    188:201:com.google.android.material.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    207:211:com.google.android.material.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    226:235:boolean equals(java.lang.Object) -> equals
    148:152:android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property) -> getAnimator
    110:111:android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String) -> getPropertyValues
    84:85:com.google.android.material.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    160:165:long getTotalDuration() -> getTotalDuration
    99:99:boolean hasPropertyValues(java.lang.String) -> hasPropertyValues
    76:76:boolean hasTiming(java.lang.String) -> hasTiming
    240:240:int hashCode() -> hashCode
    123:124:void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[]) -> setPropertyValues
    92:93:void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming) -> setTiming
    246:254:java.lang.String toString() -> toString
com.google.android.material.animation.MotionTiming -> com.google.android.material.animation.MotionTiming:
    39:42:void <init>(long,long) -> <init>
    44:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> apply
    83:88:com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    116:137:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    70:70:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    102:104:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    74:74:int getRepeatCount() -> getRepeatCount
    78:78:int getRepeatMode() -> getRepeatMode
    142:147:int hashCode() -> hashCode
    153:169:java.lang.String toString() -> toString
com.google.android.material.animation.Positioning -> com.google.android.material.animation.Positioning:
    34:38:void <init>(int,float,float) -> <init>
com.google.android.material.appbar.AppBarLayout -> com.google.android.material.appbar.AppBarLayout:
    190:191:void <init>(android.content.Context) -> <init>
    194:195:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:270:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    280:286:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> addOnOffsetChangedListener
    290:291:void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> addOnOffsetChangedListener
    572:572:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    928:932:void clearLiftOnScrollTargetView() -> clearLiftOnScrollTargetView
    380:389:void draw(android.graphics.Canvas) -> draw
    393:401:void drawableStateChanged() -> drawableStateChanged
    910:924:android.view.View findLiftOnScrollTargetView(android.view.View) -> findLiftOnScrollTargetView
    125:125:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    125:125:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    577:577:com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    125:125:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    125:125:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    125:125:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    125:125:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    582:582:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    587:592:com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    659:697:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    702:733:int getDownNestedScrollRange() -> getDownNestedScrollRange
    896:896:int getLiftOnScrollTargetViewId() -> getLiftOnScrollTargetViewId
    756:773:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    958:958:int getPendingAction() -> getPendingAction
    375:375:android.graphics.drawable.Drawable getStatusBarForeground() -> getStatusBarForeground
    954:954:float getTargetElevation() -> getTargetElevation
    967:967:int getTopInset() -> getTopInset
    612:645:int getTotalScrollRange() -> getTotalScrollRange
    654:654:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    603:603:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    493:498:boolean hasCollapsibleChild() -> hasCollapsibleChild
    649:649:boolean hasScrollableChildren() -> hasScrollableChildren
    503:506:void invalidateScrollRanges() -> invalidateScrollRanges
    877:877:boolean isLiftOnScroll() -> isLiftOnScroll
    519:522:void onAttachedToWindow() -> onAttachedToWindow
    778:794:int[] onCreateDrawableState(int) -> onCreateDrawableState
    597:600:void onDetachedFromWindow() -> onDetachedFromWindow
    450:482:void onLayout(boolean,int,int,int,int) -> onLayout
    420:446:void onMeasure(int,int) -> onMeasure
    737:753:void onOffsetChanged(int) -> onOffsetChanged
    983:997:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    302:305:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener) -> removeOnOffsetChangedListener
    309:310:void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener) -> removeOnOffsetChangedListener
    962:963:void resetPendingAction() -> resetPendingAction
    527:530:void setElevation(float) -> setElevation
    544:545:void setExpanded(boolean) -> setExpanded
    559:560:void setExpanded(boolean,boolean) -> setExpanded
    563:568:void setExpanded(boolean,boolean,boolean) -> setExpanded
    872:873:void setLiftOnScroll(boolean) -> setLiftOnScroll
    885:888:void setLiftOnScrollTargetViewId(int) -> setLiftOnScrollTargetViewId
    803:804:boolean setLiftable(boolean) -> setLiftable
    809:814:boolean setLiftableState(boolean) -> setLiftableState
    823:823:boolean setLifted(boolean) -> setLifted
    828:836:boolean setLiftedState(boolean) -> setLiftedState
    510:511:void setOrientation(int) -> setOrientation
    323:339:void setStatusBarForeground(android.graphics.drawable.Drawable) -> setStatusBarForeground
    351:352:void setStatusBarForegroundColor(int) -> setStatusBarForegroundColor
    364:365:void setStatusBarForegroundResource(int) -> setStatusBarForegroundResource
    943:946:void setTargetElevation(float) -> setTargetElevation
    410:416:void setVisibility(int) -> setVisibility
    489:489:boolean shouldDrawStatusBarForeground() -> shouldDrawStatusBarForeground
    900:904:boolean shouldLift(android.view.View) -> shouldLift
    975:979:boolean shouldOffsetFirstChild() -> shouldOffsetFirstChild
    841:861:void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> startLiftOnScrollElevationOverlayAnimation
    485:486:void updateWillNotDraw() -> updateWillNotDraw
    405:405:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.AppBarLayout$1 -> com.google.android.material.appbar.AppBarLayout$1:
    264:264:void <init>(com.google.android.material.appbar.AppBarLayout) -> <init>
    267:267:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.AppBarLayout$2 -> com.google.android.material.appbar.AppBarLayout$2:
    854:854:void <init>(com.google.android.material.appbar.AppBarLayout,com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    857:858:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior -> com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    1234:1234:void <init>() -> <init>
    1237:1238:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1203:1203:int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior) -> access$000
    1357:1369:void animateOffsetTo(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,float) -> animateOffsetTo
    1376:1402:void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int) -> animateOffsetWithDuration
    1203:1203:boolean canDragView(android.view.View) -> canDragView
    1563:1577:boolean canDragView(com.google.android.material.appbar.AppBarLayout) -> canDragView
    1271:1271:boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View) -> canScrollChildren
    1471:1471:boolean checkFlag(int,int) -> checkFlag
    1785:1793:android.view.View findFirstScrollingChild(androidx.coordinatorlayout.widget.CoordinatorLayout) -> findFirstScrollingChild
    1773:1780:android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getAppBarChildOnOffset
    1405:1421:int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int) -> getChildIndexOnOffset
    1203:1203:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1592:1592:int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout) -> getMaxDragOffset
    1203:1203:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1597:1597:int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout) -> getScrollRangeForDragFling
    1798:1798:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1660:1704:int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int) -> interpolateOffset
    1656:1656:boolean isOffsetAnimatorRunning() -> isOffsetAnimatorRunning
    1203:1203:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1584:1588:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onFlingFinished
    1203:1203:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1506:1558:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1203:1203:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1482:1499:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1203:1203:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1284:1303:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1203:1203:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1316:1322:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1203:1203:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1828:1838:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1203:1203:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1803:1822:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1203:1203:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1250:1265:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1203:1203:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1331:1341:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1349:1350:void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback) -> setDragCallback
    1203:1203:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1607:1651:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1756:1767:boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> shouldJumpElevationState
    1425:1468:void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> snapToChildIfNeeded
    1713:1751:void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
com.google.android.material.appbar.AppBarLayout$BaseBehavior$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$1:
    1388:1388:void <init>(com.google.android.material.appbar.AppBarLayout$BaseBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> <init>
    1391:1393:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback:
    1209:1209:void <init>() -> <init>
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState:
    1865:1865:void <clinit>() -> <clinit>
    1847:1851:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1854:1855:void <init>(android.os.Parcelable) -> <init>
    1859:1863:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1 -> com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    1866:1866:void <init>() -> <init>
    1866:1866:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1866:1866:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1870:1870:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1876:1876:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1866:1866:java.lang.Object[] newArray(int) -> newArray
    1882:1882:com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.appbar.AppBarLayout$Behavior -> com.google.android.material.appbar.AppBarLayout$Behavior:
    1190:1191:void <init>() -> <init>
    1194:1195:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1184:1184:int getLeftAndRightOffset() -> getLeftAndRightOffset
    1184:1184:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1184:1184:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    1184:1184:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    1184:1184:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int) -> onLayoutChild
    1184:1184:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int) -> onMeasureChild
    1184:1184:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    1184:1184:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    1184:1184:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    1184:1184:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout) -> onSaveInstanceState
    1184:1184:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1184:1184:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    1184:1184:void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback) -> setDragCallback
    1184:1184:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    1184:1184:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    1184:1184:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    1184:1184:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback -> com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback:
    1187:1187:void <init>() -> <init>
com.google.android.material.appbar.AppBarLayout$LayoutParams -> com.google.android.material.appbar.AppBarLayout$LayoutParams:
    1084:1092:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1095:1096:void <init>(int,int) -> <init>
    1099:1100:void <init>(int,int,float) -> <init>
    1103:1104:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1107:1108:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1113:1114:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    1119:1122:void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams) -> <init>
    1147:1147:int getScrollFlags() -> getScrollFlags
    1169:1169:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    1174:1174:boolean isCollapsible() -> isCollapsible
    1136:1137:void setScrollFlags(int) -> setScrollFlags
    1158:1159:void setScrollInterpolator(android.view.animation.Interpolator) -> setScrollInterpolator
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior -> com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    1894:1894:void <init>() -> <init>
    1897:1904:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1892:1892:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    1994:2000:com.google.android.material.appbar.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    1983:1988:int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout) -> getAppBarLayoutOffset
    1892:1892:int getLeftAndRightOffset() -> getLeftAndRightOffset
    1962:1979:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    2005:2008:int getScrollRange(android.view.View) -> getScrollRange
    1892:1892:int getTopAndBottomOffset() -> getTopAndBottomOffset
    1892:1892:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    1892:1892:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    1909:1909:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    1945:1958:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    1915:1917:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1892:1892:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1892:1892:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1926:1941:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    1892:1892:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    1892:1892:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    1892:1892:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    1892:1892:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
    2013:2019:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
com.google.android.material.appbar.CollapsingToolbarLayout -> com.google.android.material.appbar.CollapsingToolbarLayout:
    147:148:void <init>(android.content.Context) -> <init>
    151:152:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:246:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    616:637:void animateScrim(int) -> animateScrim
    1107:1107:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    300:324:void draw(android.graphics.Canvas) -> draw
    331:337:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    741:761:void drawableStateChanged() -> drawableStateChanged
    349:381:void ensureToolbar() -> ensureToolbar
    392:398:android.view.View findDirectChild(android.view.View) -> findDirectChild
    112:112:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1112:1112:com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    112:112:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1117:1117:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1122:1122:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    861:861:int getCollapsedTitleGravity() -> getCollapsedTitleGravity
    923:923:android.graphics.Typeface getCollapsedTitleTypeface() -> getCollapsedTitleTypeface
    707:707:android.graphics.drawable.Drawable getContentScrim() -> getContentScrim
    908:908:int getExpandedTitleGravity() -> getExpandedTitleGravity
    1031:1031:int getExpandedTitleMarginBottom() -> getExpandedTitleMarginBottom
    1010:1010:int getExpandedTitleMarginEnd() -> getExpandedTitleMarginEnd
    968:968:int getExpandedTitleMarginStart() -> getExpandedTitleMarginStart
    989:989:int getExpandedTitleMarginTop() -> getExpandedTitleMarginTop
    938:938:android.graphics.Typeface getExpandedTitleTypeface() -> getExpandedTitleTypeface
    513:518:int getHeightWithMargins(android.view.View) -> getHeightWithMargins
    1241:1243:int getMaxOffsetForPinChild(android.view.View) -> getMaxOffsetForPinChild
    651:651:int getScrimAlpha() -> getScrimAlpha
    1102:1102:long getScrimAnimationDuration() -> getScrimAnimationDuration
    1071:1087:int getScrimVisibleHeightTrigger() -> getScrimVisibleHeightTrigger
    813:813:android.graphics.drawable.Drawable getStatusBarScrim() -> getStatusBarScrim
    551:551:java.lang.CharSequence getTitle() -> getTitle
    523:528:com.google.android.material.appbar.ViewOffsetHelper getViewOffsetHelper(android.view.View) -> getViewOffsetHelper
    579:579:boolean isTitleEnabled() -> isTitleEnabled
    384:384:boolean isToolbarChild(android.view.View) -> isToolbarChild
    250:266:void onAttachedToWindow() -> onAttachedToWindow
    271:277:void onDetachedFromWindow() -> onDetachedFromWindow
    437:510:void onLayout(boolean,int,int,int,int) -> onLayout
    421:433:void onMeasure(int,int) -> onMeasure
    342:346:void onSizeChanged(int,int,int,int) -> onSizeChanged
    280:295:androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat) -> onWindowInsetChanged
    852:853:void setCollapsedTitleGravity(int) -> setCollapsedTitleGravity
    824:825:void setCollapsedTitleTextAppearance(int) -> setCollapsedTitleTextAppearance
    833:834:void setCollapsedTitleTextColor(int) -> setCollapsedTitleTextColor
    842:843:void setCollapsedTitleTextColor(android.content.res.ColorStateList) -> setCollapsedTitleTextColor
    917:918:void setCollapsedTitleTypeface(android.graphics.Typeface) -> setCollapsedTitleTypeface
    663:675:void setContentScrim(android.graphics.drawable.Drawable) -> setContentScrim
    685:686:void setContentScrimColor(int) -> setContentScrimColor
    696:697:void setContentScrimResource(int) -> setContentScrimResource
    880:881:void setExpandedTitleColor(int) -> setExpandedTitleColor
    899:900:void setExpandedTitleGravity(int) -> setExpandedTitleGravity
    955:960:void setExpandedTitleMargin(int,int,int,int) -> setExpandedTitleMargin
    1042:1044:void setExpandedTitleMarginBottom(int) -> setExpandedTitleMarginBottom
    1021:1023:void setExpandedTitleMarginEnd(int) -> setExpandedTitleMarginEnd
    979:981:void setExpandedTitleMarginStart(int) -> setExpandedTitleMarginStart
    1000:1002:void setExpandedTitleMarginTop(int) -> setExpandedTitleMarginTop
    871:872:void setExpandedTitleTextAppearance(int) -> setExpandedTitleTextAppearance
    889:890:void setExpandedTitleTextColor(android.content.res.ColorStateList) -> setExpandedTitleTextColor
    932:933:void setExpandedTitleTypeface(android.graphics.Typeface) -> setExpandedTitleTypeface
    640:648:void setScrimAlpha(int) -> setScrimAlpha
    1097:1098:void setScrimAnimationDuration(long) -> setScrimAnimationDuration
    1057:1062:void setScrimVisibleHeightTrigger(int) -> setScrimVisibleHeightTrigger
    592:593:void setScrimsShown(boolean) -> setScrimsShown
    605:613:void setScrimsShown(boolean,boolean) -> setScrimsShown
    721:737:void setStatusBarScrim(android.graphics.drawable.Drawable) -> setStatusBarScrim
    791:792:void setStatusBarScrimColor(int) -> setStatusBarScrimColor
    802:803:void setStatusBarScrimResource(int) -> setStatusBarScrimResource
    539:541:void setTitle(java.lang.CharSequence) -> setTitle
    564:570:void setTitleEnabled(boolean) -> setTitleEnabled
    770:779:void setVisibility(int) -> setVisibility
    1248:1249:void updateContentDescriptionFromTitle() -> updateContentDescriptionFromTitle
    402:417:void updateDummyView() -> updateDummyView
    1235:1238:void updateScrimVisibility() -> updateScrimVisibility
    765:765:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.appbar.CollapsingToolbarLayout$1 -> com.google.android.material.appbar.CollapsingToolbarLayout$1:
    239:239:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    243:243:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.appbar.CollapsingToolbarLayout$2 -> com.google.android.material.appbar.CollapsingToolbarLayout$2:
    625:625:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    628:629:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams -> com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams:
    1154:1165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1168:1169:void <init>(int,int) -> <init>
    1172:1173:void <init>(int,int,int) -> <init>
    1176:1177:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1180:1181:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1186:1187:void <init>(android.widget.FrameLayout$LayoutParams) -> <init>
    1207:1207:int getCollapseMode() -> getCollapseMode
    1229:1229:float getParallaxMultiplier() -> getParallaxMultiplier
    1196:1197:void setCollapseMode(int) -> setCollapseMode
    1219:1220:void setParallaxMultiplier(float) -> setParallaxMultiplier
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener -> com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener:
    1252:1252:void <init>(com.google.android.material.appbar.CollapsingToolbarLayout) -> <init>
    1256:1289:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
com.google.android.material.appbar.HeaderBehavior -> com.google.android.material.appbar.HeaderBehavior:
    50:50:void <init>() -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    286:286:boolean canDragView(android.view.View) -> canDragView
    299:302:void ensureVelocityTracker() -> ensureVelocityTracker
    247:272:boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    291:291:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    295:295:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    228:228:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    282:282:void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    59:122:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    128:143:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    233:233:int scroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    203:203:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
    209:224:int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
com.google.android.material.appbar.HeaderBehavior$FlingRunnable -> com.google.android.material.appbar.HeaderBehavior$FlingRunnable:
    308:311:void <init>(com.google.android.material.appbar.HeaderBehavior,androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> <init>
    315:324:void run() -> run
com.google.android.material.appbar.HeaderScrollingViewBehavior -> com.google.android.material.appbar.HeaderScrollingViewBehavior:
    47:47:void <init>() -> <init>
    50:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:166:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    162:162:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    204:204:int getOverlayTop() -> getOverlayTop
    179:179:int getScrollRange(android.view.View) -> getScrollRange
    186:186:int getVerticalLayoutGap() -> getVerticalLayoutGap
    113:155:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    61:105:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    172:172:int resolveGravity(int) -> resolveGravity
    196:197:void setOverlayTop(int) -> setOverlayTop
    158:158:boolean shouldHeaderOverlapScrollingChild() -> shouldHeaderOverlapScrollingChild
com.google.android.material.appbar.MaterialToolbar -> com.google.android.material.appbar.MaterialToolbar:
    61:61:void <clinit>() -> <clinit>
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    95:106:void initBackground(android.content.Context) -> initBackground
    81:84:void onAttachedToWindow() -> onAttachedToWindow
    89:92:void setElevation(float) -> setElevation
com.google.android.material.appbar.ViewOffsetBehavior -> com.google.android.material.appbar.ViewOffsetBehavior:
    33:33:void <init>() -> <init>
    36:37:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    92:92:int getLeftAndRightOffset() -> getLeftAndRightOffset
    88:88:int getTopAndBottomOffset() -> getTopAndBottomOffset
    112:112:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    102:102:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    66:67:void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    43:60:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    106:109:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    79:84:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    70:75:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    96:99:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
com.google.android.material.appbar.ViewOffsetHelper -> com.google.android.material.appbar.ViewOffsetHelper:
    40:42:void <init>(android.view.View) -> <init>
    51:53:void applyOffsets() -> applyOffsets
    98:98:int getLayoutLeft() -> getLayoutLeft
    94:94:int getLayoutTop() -> getLayoutTop
    90:90:int getLeftAndRightOffset() -> getLeftAndRightOffset
    86:86:int getTopAndBottomOffset() -> getTopAndBottomOffset
    114:114:boolean isHorizontalOffsetEnabled() -> isHorizontalOffsetEnabled
    106:106:boolean isVerticalOffsetEnabled() -> isVerticalOffsetEnabled
    46:48:void onViewLayout() -> onViewLayout
    110:111:void setHorizontalOffsetEnabled(boolean) -> setHorizontalOffsetEnabled
    77:82:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    62:67:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    102:103:void setVerticalOffsetEnabled(boolean) -> setVerticalOffsetEnabled
com.google.android.material.appbar.ViewUtilsLollipop -> com.google.android.material.appbar.ViewUtilsLollipop:
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    39:40:void setBoundsViewOutlineProvider(android.view.View) -> setBoundsViewOutlineProvider
    62:80:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
    44:56:void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int) -> setStateListAnimatorFromAttrs
com.google.android.material.badge.BadgeDrawable -> com.google.android.material.badge.BadgeDrawable:
    144:145:void <clinit>() -> <clinit>
    359:374:void <init>(android.content.Context) -> <init>
    687:735:void calculateCenterAndBounds(android.content.Context,android.graphics.Rect,android.view.View) -> calculateCenterAndBounds
    486:488:void clearNumber() -> clearNumber
    262:262:com.google.android.material.badge.BadgeDrawable create(android.content.Context) -> create
    294:296:com.google.android.material.badge.BadgeDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    279:284:com.google.android.material.badge.BadgeDrawable createFromResource(android.content.Context,int) -> createFromResource
    254:256:com.google.android.material.badge.BadgeDrawable createFromSavedState(android.content.Context,com.google.android.material.badge.BadgeDrawable$SavedState) -> createFromSavedState
    577:579:void draw(android.graphics.Canvas) -> draw
    738:746:void drawText(android.graphics.Canvas) -> drawText
    548:548:int getAlpha() -> getAlpha
    402:402:int getBackgroundColor() -> getBackgroundColor
    518:518:int getBadgeGravity() -> getBadgeGravity
    751:759:java.lang.String getBadgeText() -> getBadgeText
    428:428:int getBadgeTextColor() -> getBadgeTextColor
    613:630:java.lang.CharSequence getContentDescription() -> getContentDescription
    566:566:int getIntrinsicHeight() -> getIntrinsicHeight
    572:572:int getIntrinsicWidth() -> getIntrinsicWidth
    497:497:int getMaxCharacterCount() -> getMaxCharacterCount
    460:463:int getNumber() -> getNumber
    560:560:int getOpacity() -> getOpacity
    247:247:com.google.android.material.badge.BadgeDrawable$SavedState getSavedState() -> getSavedState
    447:447:boolean hasNumber() -> hasNumber
    538:538:boolean isStateful() -> isStateful
    328:352:void loadDefaultStateFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> loadDefaultStateFromAttributes
    600:600:boolean onStateChange(int[]) -> onStateChange
    595:596:void onTextSizeChange() -> onTextSizeChange
    356:356:int readColorFromAttributes(android.content.Context,android.content.res.TypedArray,int) -> readColorFromAttributes
    308:324:void restoreFromSavedState(com.google.android.material.badge.BadgeDrawable$SavedState) -> restoreFromSavedState
    553:556:void setAlpha(int) -> setAlpha
    412:418:void setBackgroundColor(int) -> setBackgroundColor
    527:534:void setBadgeGravity(int) -> setBadgeGravity
    438:443:void setBadgeTextColor(int) -> setBadgeTextColor
    544:544:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    604:605:void setContentDescriptionNumberless(java.lang.CharSequence) -> setContentDescriptionNumberless
    608:609:void setContentDescriptionQuantityStringsResource(int) -> setContentDescriptionQuantityStringsResource
    507:514:void setMaxCharacterCount(int) -> setMaxCharacterCount
    475:482:void setNumber(int) -> setNumber
    643:652:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    635:640:void setTextAppearanceResource(int) -> setTextAppearanceResource
    304:305:void setVisible(boolean) -> setVisible
    388:392:void updateBadgeCoordinates(android.view.View,android.view.ViewGroup) -> updateBadgeCoordinates
    655:658:void updateCenterAndBounds() -> updateCenterAndBounds
    767:768:void updateMaxBadgeNumber() -> updateMaxBadgeNumber
com.google.android.material.badge.BadgeDrawable$SavedState -> com.google.android.material.badge.BadgeDrawable$SavedState:
    212:212:void <clinit>() -> <clinit>
    190:199:void <init>(android.content.Context) -> <init>
    201:210:void <init>(android.os.Parcel) -> <init>
    179:179:int access$000(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$000
    179:179:int access$002(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$002
    179:179:int access$100(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$100
    179:179:int access$102(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$102
    179:179:int access$200(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$200
    179:179:int access$202(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$202
    179:179:int access$300(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$300
    179:179:int access$302(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$302
    179:179:int access$400(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$400
    179:179:int access$402(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$402
    179:179:int access$500(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$500
    179:179:int access$502(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$502
    179:179:java.lang.CharSequence access$600(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$600
    179:179:java.lang.CharSequence access$602(com.google.android.material.badge.BadgeDrawable$SavedState,java.lang.CharSequence) -> access$602
    179:179:int access$700(com.google.android.material.badge.BadgeDrawable$SavedState) -> access$700
    179:179:int access$702(com.google.android.material.badge.BadgeDrawable$SavedState,int) -> access$702
    229:229:int describeContents() -> describeContents
    234:242:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.badge.BadgeDrawable$SavedState$1 -> com.google.android.material.badge.BadgeDrawable$SavedState$1:
    213:213:void <init>() -> <init>
    213:213:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    217:217:com.google.android.material.badge.BadgeDrawable$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    213:213:java.lang.Object[] newArray(int) -> newArray
    223:223:com.google.android.material.badge.BadgeDrawable$SavedState[] newArray(int) -> newArray
com.google.android.material.badge.BadgeUtils -> com.google.android.material.badge.BadgeUtils:
    41:41:void <clinit>() -> <clinit>
    43:45:void <init>() -> <init>
    76:82:void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> attachBadgeDrawable
    156:166:android.util.SparseArray createBadgeDrawablesFromSavedStates(android.content.Context,com.google.android.material.internal.ParcelableSparseArray) -> createBadgeDrawablesFromSavedStates
    131:140:com.google.android.material.internal.ParcelableSparseArray createParcelableBadgeStates(android.util.SparseArray) -> createParcelableBadgeStates
    94:102:void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> detachBadgeDrawable
    112:117:void setBadgeDrawableBounds(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout) -> setBadgeDrawableBounds
    58:63:void updateBadgeBounds(android.graphics.Rect,float,float,float,float) -> updateBadgeBounds
com.google.android.material.behavior.HideBottomViewOnScrollBehavior -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    52:52:void <init>() -> <init>
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    148:161:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    61:64:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    100:105:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    88:88:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    74:79:void setAdditionalHiddenOffsetY(android.view.View,int) -> setAdditionalHiddenOffsetY
    130:144:void slideDown(android.view.View) -> slideDown
    112:123:void slideUp(android.view.View) -> slideUp
com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1 -> com.google.android.material.behavior.HideBottomViewOnScrollBehavior$1:
    155:155:void <init>(com.google.android.material.behavior.HideBottomViewOnScrollBehavior) -> <init>
    158:159:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.behavior.SwipeDismissBehavior -> com.google.android.material.behavior.SwipeDismissBehavior:
    38:208:void <init>() -> <init>
    205:205:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    386:386:float clamp(float,float,float) -> clamp
    390:390:int clamp(int,int,int) -> clamp
    356:362:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    405:405:float fraction(float,float,float) -> fraction
    400:400:int getDragState() -> getDragState
    167:186:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    191:195:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    131:132:void setDragDismissDistance(float) -> setDragDismissDistance
    149:150:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    112:113:void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener) -> setListener
    160:162:void setSensitivity(float) -> setSensitivity
    140:141:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    122:123:void setSwipeDirection(int) -> setSwipeDirection
com.google.android.material.behavior.SwipeDismissBehavior$1 -> com.google.android.material.behavior.SwipeDismissBehavior$1:
    209:213:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    302:328:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    333:333:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    297:297:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    224:233:void onViewCaptured(android.view.View,int) -> onViewCaptured
    237:240:void onViewDragStateChanged(int) -> onViewDragStateChanged
    338:352:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    245:267:void onViewReleased(android.view.View,float,float) -> onViewReleased
    270:289:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    218:218:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable -> com.google.android.material.behavior.SwipeDismissBehavior$SettleRunnable:
    368:371:void <init>(com.google.android.material.behavior.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    375:382:void run() -> run
com.google.android.material.bottomappbar.BottomAppBar -> com.google.android.material.bottomappbar.BottomAppBar:
    111:111:void <clinit>() -> <clinit>
    211:212:void <init>(android.content.Context) -> <init>
    215:216:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:274:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:109:int access$000(com.google.android.material.bottomappbar.BottomAppBar) -> access$000
    109:109:boolean access$100(com.google.android.material.bottomappbar.BottomAppBar) -> access$100
    109:109:void access$1000(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> access$1000
    109:109:com.google.android.material.floatingactionbutton.FloatingActionButton access$1100(com.google.android.material.bottomappbar.BottomAppBar) -> access$1100
    109:109:float access$1200(com.google.android.material.bottomappbar.BottomAppBar) -> access$1200
    109:109:int access$1600(com.google.android.material.bottomappbar.BottomAppBar) -> access$1600
    109:109:android.view.View access$1700(com.google.android.material.bottomappbar.BottomAppBar) -> access$1700
    109:109:void access$1800(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$1800
    109:109:void access$1900(com.google.android.material.bottomappbar.BottomAppBar) -> access$1900
    109:109:void access$200(com.google.android.material.bottomappbar.BottomAppBar,int,boolean) -> access$200
    109:109:com.google.android.material.shape.MaterialShapeDrawable access$300(com.google.android.material.bottomappbar.BottomAppBar) -> access$300
    109:109:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$400(com.google.android.material.bottomappbar.BottomAppBar) -> access$400
    109:109:int access$502(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$502
    109:109:void access$600(com.google.android.material.bottomappbar.BottomAppBar) -> access$600
    109:109:void access$700(com.google.android.material.bottomappbar.BottomAppBar) -> access$700
    109:109:float access$800(com.google.android.material.bottomappbar.BottomAppBar,int) -> access$800
    109:109:android.animation.Animator access$902(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator) -> access$902
    429:433:void addAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener) -> addAnimationListener
    810:825:void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton) -> addFabAnimationListeners
    748:754:void cancelAnimations() -> cancelAnimations
    546:549:void createFabDefaultXAnimation(int,java.util.List) -> createFabDefaultXAnimation
    572:576:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    621:665:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    452:458:void dispatchAnimationEnd() -> dispatchAnimationEnd
    443:449:void dispatchAnimationStart() -> dispatchAnimationStart
    511:512:com.google.android.material.floatingactionbutton.FloatingActionButton findDependentFab() -> findDependentFab
    517:529:android.view.View findDependentView() -> findDependentView
    684:691:androidx.appcompat.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    722:744:int getActionMenuViewTranslationX(androidx.appcompat.widget.ActionMenuView,int,boolean) -> getActionMenuViewTranslationX
    324:324:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    109:109:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    844:847:com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior() -> getBehavior
    828:828:int getBottomInset() -> getBottomInset
    364:364:float getCradleVerticalOffset() -> getCradleVerticalOffset
    282:282:int getFabAlignmentMode() -> getFabAlignmentMode
    304:304:int getFabAnimationMode() -> getFabAnimationMode
    331:331:float getFabCradleMargin() -> getFabCradleMargin
    347:347:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    672:673:float getFabTranslationX(int) -> getFabTranslationX
    679:679:float getFabTranslationX() -> getFabTranslationX
    668:668:float getFabTranslationY() -> getFabTranslationY
    386:386:boolean getHideOnScroll() -> getHideOnScroll
    776:776:com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment() -> getTopEdgeTreatment
    533:534:boolean isFabVisibleOrWillBeShown() -> isFabVisibleOrWillBeShown
    579:614:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    475:476:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    852:861:void onAttachedToWindow() -> onAttachedToWindow
    758:772:void onLayout(boolean,int,int,int,int) -> onLayout
    996:1004:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    987:991:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    400:401:void performHide() -> performHide
    405:406:void performShow() -> performShow
    436:440:void removeAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener) -> removeAnimationListener
    423:425:void replaceMenu(int) -> replaceMenu
    792:801:void setActionMenuViewPosition() -> setActionMenuViewPosition
    319:320:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    373:378:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    782:789:void setCutoutState() -> setCutoutState
    410:415:void setElevation(float) -> setElevation
    293:296:void setFabAlignmentMode(int) -> setFabAlignmentMode
    315:316:void setFabAnimationMode(int) -> setFabAnimationMode
    338:342:void setFabCradleMargin(float) -> setFabCradleMargin
    352:356:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    465:471:boolean setFabDiameter(int) -> setFabDiameter
    395:396:void setHideOnScroll(boolean) -> setHideOnScroll
    839:839:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    834:834:void setTitle(java.lang.CharSequence) -> setTitle
    708:710:void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean) -> translateActionMenuView
com.google.android.material.bottomappbar.BottomAppBar$1 -> com.google.android.material.bottomappbar.BottomAppBar$1:
    176:176:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    179:180:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$2 -> com.google.android.material.bottomappbar.BottomAppBar$2:
    186:186:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    186:186:void onScaleChanged(android.view.View) -> onScaleChanged
    189:191:void onScaleChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onScaleChanged
    186:186:void onTranslationChanged(android.view.View) -> onTranslationChanged
    195:207:void onTranslationChanged(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onTranslationChanged
com.google.android.material.bottomappbar.BottomAppBar$3 -> com.google.android.material.bottomappbar.BottomAppBar$3:
    261:261:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    268:271:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomappbar.BottomAppBar$4 -> com.google.android.material.bottomappbar.BottomAppBar$4:
    495:495:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    503:504:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    498:499:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$5 -> com.google.android.material.bottomappbar.BottomAppBar$5:
    555:555:void <init>(com.google.android.material.bottomappbar.BottomAppBar,int) -> <init>
    558:566:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
com.google.android.material.bottomappbar.BottomAppBar$5$1 -> com.google.android.material.bottomappbar.BottomAppBar$5$1:
    560:560:void <init>(com.google.android.material.bottomappbar.BottomAppBar$5) -> <init>
    563:564:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.bottomappbar.BottomAppBar$6 -> com.google.android.material.bottomappbar.BottomAppBar$6:
    601:601:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    609:611:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    604:605:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$7 -> com.google.android.material.bottomappbar.BottomAppBar$7:
    640:640:void <init>(com.google.android.material.bottomappbar.BottomAppBar,androidx.appcompat.widget.ActionMenuView,int,boolean) -> <init>
    645:646:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    650:653:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.bottomappbar.BottomAppBar$8 -> com.google.android.material.bottomappbar.BottomAppBar$8:
    812:812:void <init>(com.google.android.material.bottomappbar.BottomAppBar) -> <init>
    815:822:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.bottomappbar.BottomAppBar$Behavior -> com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    924:926:void <init>() -> <init>
    929:931:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    867:867:java.lang.ref.WeakReference access$1300(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$1300
    867:867:android.graphics.Rect access$1400(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$1400
    867:867:int access$1500(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> access$1500
    867:867:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    936:966:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int) -> onLayoutChild
    867:867:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    978:978:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.google.android.material.bottomappbar.BottomAppBar$Behavior$1 -> com.google.android.material.bottomappbar.BottomAppBar$Behavior$1:
    876:876:void <init>(com.google.android.material.bottomappbar.BottomAppBar$Behavior) -> <init>
    888:893:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomappbar.BottomAppBar$SavedState -> com.google.android.material.bottomappbar.BottomAppBar$SavedState:
    1027:1027:void <clinit>() -> <clinit>
    1011:1012:void <init>(android.os.Parcelable) -> <init>
    1015:1018:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1022:1025:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1 -> com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    1028:1028:void <init>() -> <init>
    1028:1028:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1028:1028:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1032:1032:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1038:1038:com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1028:1028:java.lang.Object[] newArray(int) -> newArray
    1044:1044:com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment -> com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    60:65:void <init>(float,float,float) -> <init>
    192:192:float getCradleVerticalOffset() -> getCradleVerticalOffset
    73:149:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    205:205:float getFabCradleMargin() -> getFabCradleMargin
    213:213:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    158:158:float getFabDiameter() -> getFabDiameter
    183:183:float getHorizontalOffset() -> getHorizontalOffset
    201:202:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    209:210:void setFabCradleMargin(float) -> setFabCradleMargin
    217:218:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    168:169:void setFabDiameter(float) -> setFabDiameter
    173:174:void setHorizontalOffset(float) -> setHorizontalOffset
com.google.android.material.bottomnavigation.BottomNavigationItemView -> com.google.android.material.bottomnavigation.BottomNavigationItemView:
    56:56:void <clinit>() -> <clinit>
    80:81:void <init>(android.content.Context) -> <init>
    84:85:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    89:128:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:android.widget.ImageView access$000(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> access$000
    53:53:void access$100(com.google.android.material.bottomnavigation.BottomNavigationItemView,android.view.View) -> access$100
    393:396:void calculateTextScaleFactors(float,float) -> calculateTextScaleFactors
    420:420:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    470:474:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    182:182:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    155:155:int getItemPosition() -> getItemPosition
    428:428:boolean hasBadge() -> hasBadge
    132:148:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    320:324:int[] onCreateDrawableState(int) -> onCreateDrawableState
    279:288:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    352:352:boolean prefersCondensedTitle() -> prefersCondensedTitle
    424:425:void removeBadge() -> removeBadge
    412:416:void setBadge(com.google.android.material.badge.BadgeDrawable) -> setBadge
    201:202:void setCheckable(boolean) -> setCheckable
    206:275:void setChecked(boolean) -> setChecked
    305:316:void setEnabled(boolean) -> setEnabled
    332:348:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    369:373:void setIconSize(int) -> setIconSize
    361:366:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    399:402:void setItemBackground(int) -> setItemBackground
    405:409:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    151:152:void setItemPosition(int) -> setItemPosition
    170:178:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    159:167:void setShifting(boolean) -> setShifting
    328:328:void setShortcut(boolean,char) -> setShortcut
    381:383:void setTextAppearanceActive(int) -> setTextAppearanceActive
    376:378:void setTextAppearanceInactive(int) -> setTextAppearanceInactive
    386:390:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    187:197:void setTitle(java.lang.CharSequence) -> setTitle
    291:295:void setViewLayoutParams(android.view.View,int,int) -> setViewLayoutParams
    298:301:void setViewValues(android.view.View,float,float,int) -> setViewValues
    357:357:boolean showsIcon() -> showsIcon
    440:451:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    454:466:void tryRemoveBadgeFromAnchor(android.view.View) -> tryRemoveBadgeFromAnchor
    432:437:void tryUpdateBadgeBounds(android.view.View) -> tryUpdateBadgeBounds
com.google.android.material.bottomnavigation.BottomNavigationItemView$1 -> com.google.android.material.bottomnavigation.BottomNavigationItemView$1:
    109:109:void <init>(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> <init>
    121:124:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.bottomnavigation.BottomNavigationMenu -> com.google.android.material.bottomnavigation.BottomNavigationMenu:
    35:36:void <init>(android.content.Context) -> <init>
    46:47:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    41:41:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.bottomnavigation.BottomNavigationMenuView -> com.google.android.material.bottomnavigation.BottomNavigationMenuView:
    60:61:void <clinit>() -> <clinit>
    95:96:void <init>(android.content.Context) -> <init>
    99:130:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:56:com.google.android.material.bottomnavigation.BottomNavigationPresenter access$000(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> access$000
    56:56:androidx.appcompat.view.menu.MenuBuilder access$100(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> access$100
    497:548:void buildMenuView() -> buildMenuView
    473:485:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    700:708:com.google.android.material.bottomnavigation.BottomNavigationItemView findItemView(int) -> findItemView
    632:632:com.google.android.material.badge.BadgeDrawable getBadge(int) -> getBadge
    618:618:android.util.SparseArray getBadgeDrawables() -> getBadgeDrawables
    261:261:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    413:418:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    389:389:int getItemBackgroundRes() -> getItemBackgroundRes
    283:283:int getItemIconSize() -> getItemIconSize
    364:364:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    335:335:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    306:306:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    445:445:int getLabelVisibilityMode() -> getLabelVisibilityMode
    587:591:com.google.android.material.bottomnavigation.BottomNavigationItemView getNewItem() -> getNewItem
    643:654:com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int) -> getOrCreateBadge
    595:595:int getSelectedItemId() -> getSelectedItemId
    237:237:int getWindowAnimations() -> getWindowAnimations
    134:135:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    468:468:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    599:599:boolean isShifting(int,int) -> isShifting
    712:712:boolean isValidId(int) -> isValidId
    217:233:void onLayout(boolean,int,int,int,int) -> onLayout
    139:213:void onMeasure(int,int) -> onMeasure
    658:667:void removeBadge(int) -> removeBadge
    683:695:void removeUnusedBadges() -> removeUnusedBadges
    622:628:void setBadgeDrawables(android.util.SparseArray) -> setBadgeDrawables
    670:680:void setBadgeIfNeeded(com.google.android.material.bottomnavigation.BottomNavigationItemView) -> setBadgeIfNeeded
    246:252:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    398:404:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    373:379:void setItemBackgroundRes(int) -> setItemBackgroundRes
    457:458:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    272:278:void setItemIconSize(int) -> setItemIconSize
    344:355:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    315:326:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    292:298:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    436:437:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    493:494:void setPresenter(com.google.android.material.bottomnavigation.BottomNavigationPresenter) -> setPresenter
    605:615:void tryRestoreSelectedItemId(int) -> tryRestoreSelectedItemId
    551:552:void updateMenuView() -> updateMenuView
    716:717:void validateMenuItemId(int) -> validateMenuItemId
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1 -> com.google.android.material.bottomnavigation.BottomNavigationMenuView$1:
    119:119:void <init>(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> <init>
    122:127:void onClick(android.view.View) -> onClick
com.google.android.material.bottomnavigation.BottomNavigationPresenter -> com.google.android.material.bottomnavigation.BottomNavigationPresenter:
    40:43:void <init>() -> <init>
    96:96:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    91:91:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    86:86:boolean flagActionItems() -> flagActionItems
    105:105:int getId() -> getId
    58:58:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    52:54:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    82:82:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    120:127:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    111:115:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    78:78:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    47:48:void setBottomNavigationMenuView(com.google.android.material.bottomnavigation.BottomNavigationMenuView) -> setBottomNavigationMenuView
    74:74:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    100:101:void setId(int) -> setId
    130:131:void setUpdateSuspended(boolean) -> setUpdateSuspended
    63:71:void updateMenuView(boolean) -> updateMenuView
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState:
    155:155:void <clinit>() -> <clinit>
    137:137:void <init>() -> <init>
    139:142:void <init>(android.os.Parcel) -> <init>
    146:146:int describeContents() -> describeContents
    151:153:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1:
    156:156:void <init>() -> <init>
    156:156:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    160:160:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    156:156:java.lang.Object[] newArray(int) -> newArray
    166:166:com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomnavigation.BottomNavigationView -> com.google.android.material.bottomnavigation.BottomNavigationView:
    116:116:void <clinit>() -> <clinit>
    129:130:void <init>(android.content.Context) -> <init>
    133:134:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    138:251:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener access$000(com.google.android.material.bottomnavigation.BottomNavigationView) -> access$000
    114:114:com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener access$100(com.google.android.material.bottomnavigation.BottomNavigationView) -> access$100
    714:723:void addCompatibilityTopDivider(android.content.Context) -> addCompatibilityTopDivider
    254:268:void applyWindowInsets() -> applyWindowInsets
    272:279:com.google.android.material.shape.MaterialShapeDrawable createMaterialShapeDrawableBackground(android.content.Context) -> createMaterialShapeDrawableBackground
    662:662:com.google.android.material.badge.BadgeDrawable getBadge(int) -> getBadge
    466:466:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    442:442:int getItemBackgroundResource() -> getItemBackgroundResource
    405:405:int getItemIconSize() -> getItemIconSize
    360:360:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    491:491:android.content.res.ColorStateList getItemRippleColor() -> getItemRippleColor
    624:624:int getItemTextAppearanceActive() -> getItemTextAppearanceActive
    605:605:int getItemTextAppearanceInactive() -> getItemTextAppearanceInactive
    418:418:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    586:586:int getLabelVisibilityMode() -> getLabelVisibilityMode
    349:349:int getMaxItemCount() -> getMaxItemCount
    330:330:android.view.Menu getMenu() -> getMenu
    726:729:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    674:674:com.google.android.material.badge.BadgeDrawable getOrCreateBadge(int) -> getOrCreateBadge
    539:539:int getSelectedItemId() -> getSelectedItemId
    341:345:void inflateMenu(int) -> inflateMenu
    649:649:boolean isItemHorizontalTranslationEnabled() -> isItemHorizontalTranslationEnabled
    284:287:void onAttachedToWindow() -> onAttachedToWindow
    743:750:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    734:738:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    685:686:void removeBadge(int) -> removeBadge
    297:300:void setElevation(float) -> setElevation
    478:480:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    454:456:void setItemBackgroundResource(int) -> setItemBackgroundResource
    635:639:void setItemHorizontalTranslationEnabled(boolean) -> setItemHorizontalTranslationEnabled
    382:383:void setItemIconSize(int) -> setItemIconSize
    394:395:void setItemIconSizeRes(int) -> setItemIconSizeRes
    370:371:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    503:530:void setItemRippleColor(android.content.res.ColorStateList) -> setItemRippleColor
    614:615:void setItemTextAppearanceActive(int) -> setItemTextAppearanceActive
    595:596:void setItemTextAppearanceInactive(int) -> setItemTextAppearanceInactive
    429:430:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    572:576:void setLabelVisibilityMode(int) -> setLabelVisibilityMode
    324:325:void setOnNavigationItemReselectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener) -> setOnNavigationItemReselectedListener
    312:313:void setOnNavigationItemSelectedListener(com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener) -> setOnNavigationItemSelectedListener
    549:555:void setSelectedItemId(int) -> setSelectedItemId
com.google.android.material.bottomnavigation.BottomNavigationView$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$1:
    236:236:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    239:243:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    247:247:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
com.google.android.material.bottomnavigation.BottomNavigationView$2 -> com.google.android.material.bottomnavigation.BottomNavigationView$2:
    256:256:void <init>(com.google.android.material.bottomnavigation.BottomNavigationView) -> <init>
    263:265:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding) -> onApplyWindowInsets
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState:
    777:777:void <clinit>() -> <clinit>
    756:757:void <init>(android.os.Parcelable) -> <init>
    760:765:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    774:775:void readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    769:771:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1 -> com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1:
    778:778:void <init>() -> <init>
    778:778:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    778:778:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    782:782:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    788:788:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    778:778:java.lang.Object[] newArray(int) -> newArray
    794:794:com.google.android.material.bottomnavigation.BottomNavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior -> com.google.android.material.bottomsheet.BottomSheetBehavior:
    214:214:void <clinit>() -> <clinit>
    261:261:void <init>() -> <init>
    264:302:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:75:com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$000
    75:75:boolean access$200(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$200
    75:75:int access$300(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$300
    75:75:int access$400(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$400
    75:75:boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior) -> access$500
    1584:1595:void addAccessibilityActionForState(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,int) -> addAccessibilityActionForState
    903:906:void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> addBottomSheetCallback
    1025:1036:void calculateCollapsedOffset() -> calculateCollapsedOffset
    1039:1040:void calculateHalfExpandedOffset() -> calculateHalfExpandedOffset
    1102:1103:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean) -> createMaterialShapeDrawable
    1110:1127:void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean,android.content.res.ColorStateList) -> createMaterialShapeDrawable
    1130:1142:void createShapeValueAnimator() -> createShapeValueAnimator
    1366:1367:void disableShapeAnimations() -> disableShapeAnimations
    1338:1348:void dispatchOnSlide(int) -> dispatchOnSlide
    1085:1097:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    1479:1481:com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View) -> from
    1153:1153:int getExpandedOffset() -> getExpandedOffset
    799:799:float getHalfExpandedRatio() -> getHalfExpandedRatio
    753:753:int getPeekHeight() -> getPeekHeight
    1352:1352:int getPeekHeightMin() -> getPeekHeightMin
    872:872:int getSaveFlags() -> getSaveFlags
    850:850:boolean getSkipCollapsed() -> getSkipCollapsed
    970:970:int getState() -> getState
    1145:1149:float getYVelocity() -> getYVelocity
    666:666:boolean isFitToContents() -> isFitToContents
    826:826:boolean isHideable() -> isHideable
    327:332:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    336:340:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    407:458:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    345:401:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    651:656:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    520:556:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    642:642:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    313:323:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    307:307:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    506:508:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    564:571:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    470:495:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    914:915:void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> removeBottomSheetCallback
    1043:1048:void reset() -> reset
    1051:1068:void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState) -> restoreOptionalState
    884:895:void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback) -> setBottomSheetCallback
    785:786:void setExpandedOffset(int) -> setExpandedOffset
    677:691:void setFitToContents(boolean) -> setFitToContents
    768:769:void setHalfExpandedRatio(float) -> setHalfExpandedRatio
    809:817:void setHideable(boolean) -> setHideable
    702:703:void setPeekHeight(int) -> setPeekHeight
    716:742:void setPeekHeight(int,boolean) -> setPeekHeight
    862:863:void setSaveFlags(int) -> setSaveFlags
    838:839:void setSkipCollapsed(boolean) -> setSkipCollapsed
    925:939:void setState(int) -> setState
    974:999:void setStateInternal(int) -> setStateInternal
    1158:1172:void settleToState(android.view.View,int) -> settleToState
    942:960:void settleToStatePendingLayout(int) -> settleToStatePendingLayout
    1071:1079:boolean shouldHide(android.view.View,float) -> shouldHide
    1178:1202:void startSettlingAnimation(android.view.View,int,int,boolean) -> startSettlingAnimation
    1541:1580:void updateAccessibilityActions() -> updateAccessibilityActions
    1002:1021:void updateDrawableForTargetState(int) -> updateDrawableForTargetState
    1492:1538:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
com.google.android.material.bottomsheet.BottomSheetBehavior$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$1:
    951:951:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    954:955:void run() -> run
com.google.android.material.bottomsheet.BottomSheetBehavior$2 -> com.google.android.material.bottomsheet.BottomSheetBehavior$2:
    1133:1133:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1136:1140:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.bottomsheet.BottomSheetBehavior$3 -> com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    1205:1205:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1324:1324:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1318:1318:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1329:1332:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    1233:1236:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1228:1229:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1242:1314:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1209:1222:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
com.google.android.material.bottomsheet.BottomSheetBehavior$4 -> com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    1588:1588:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,int) -> <init>
    1591:1592:boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments) -> perform
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback -> com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback:
    78:78:void <init>() -> <init>
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    1448:1448:void <clinit>() -> <clinit>
    1402:1403:void <init>(android.os.Parcel) -> <init>
    1406:1413:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1416:1422:void <init>(android.os.Parcelable,com.google.android.material.bottomsheet.BottomSheetBehavior) -> <init>
    1434:1436:void <init>(android.os.Parcelable,int) -> <init>
    1440:1446:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1 -> com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    1449:1449:void <init>() -> <init>
    1449:1449:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1449:1449:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1453:1453:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1459:1459:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1449:1449:java.lang.Object[] newArray(int) -> newArray
    1465:1465:com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable -> com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    1377:1380:void <init>(com.google.android.material.bottomsheet.BottomSheetBehavior,android.view.View,int) -> <init>
    1369:1369:boolean access$100(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable) -> access$100
    1369:1369:boolean access$102(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean) -> access$102
    1384:1390:void run() -> run
com.google.android.material.bottomsheet.BottomSheetDialog -> com.google.android.material.bottomsheet.BottomSheetDialog:
    56:57:void <init>(android.content.Context) -> <init>
    60:64:void <init>(android.content.Context,int) -> <init>
    68:71:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    138:145:void cancel() -> cancel
    186:195:android.widget.FrameLayout ensureContainerAndBehavior() -> ensureContainerAndBehavior
    159:163:com.google.android.material.bottomsheet.BottomSheetBehavior getBehavior() -> getBehavior
    181:181:boolean getDismissWithAnimation() -> getDismissWithAnimation
    273:283:int getThemeResId(android.content.Context,int) -> getThemeResId
    80:89:void onCreate(android.os.Bundle) -> onCreate
    114:118:void onStart() -> onStart
    287:288:void removeDefaultCallback() -> removeDefaultCallback
    103:110:void setCancelable(boolean) -> setCancelable
    149:155:void setCanceledOnTouchOutside(boolean) -> setCanceledOnTouchOutside
    75:76:void setContentView(int) -> setContentView
    93:94:void setContentView(android.view.View) -> setContentView
    98:99:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    173:174:void setDismissWithAnimation(boolean) -> setDismissWithAnimation
    261:269:boolean shouldWindowCloseOnTouchOutside() -> shouldWindowCloseOnTouchOutside
    200:257:android.view.View wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams) -> wrapInBottomSheet
com.google.android.material.bottomsheet.BottomSheetDialog$1 -> com.google.android.material.bottomsheet.BottomSheetDialog$1:
    216:216:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    219:222:void onClick(android.view.View) -> onClick
com.google.android.material.bottomsheet.BottomSheetDialog$2 -> com.google.android.material.bottomsheet.BottomSheetDialog$2:
    227:227:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    231:238:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    242:246:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.bottomsheet.BottomSheetDialog$3 -> com.google.android.material.bottomsheet.BottomSheetDialog$3:
    250:250:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    254:254:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.bottomsheet.BottomSheetDialog$4 -> com.google.android.material.bottomsheet.BottomSheetDialog$4:
    292:292:void <init>(com.google.android.material.bottomsheet.BottomSheetDialog) -> <init>
    302:302:void onSlide(android.view.View,float) -> onSlide
    296:299:void onStateChanged(android.view.View,int) -> onStateChanged
com.google.android.material.bottomsheet.BottomSheetDialogFragment -> com.google.android.material.bottomsheet.BottomSheetDialogFragment:
    31:31:void <init>() -> <init>
    31:31:void access$100(com.google.android.material.bottomsheet.BottomSheetDialogFragment) -> access$100
    47:50:void dismiss() -> dismiss
    93:98:void dismissAfterAnimation() -> dismissAfterAnimation
    54:57:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    79:90:void dismissWithAnimation(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean) -> dismissWithAnimation
    42:42:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    64:74:boolean tryDismissWithAnimation(boolean) -> tryDismissWithAnimation
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback -> com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback:
    100:100:void <init>(com.google.android.material.bottomsheet.BottomSheetDialogFragment) -> <init>
    100:100:void <init>(com.google.android.material.bottomsheet.BottomSheetDialogFragment,com.google.android.material.bottomsheet.BottomSheetDialogFragment$1) -> <init>
    110:110:void onSlide(android.view.View,float) -> onSlide
    104:107:void onStateChanged(android.view.View,int) -> onStateChanged
com.google.android.material.button.MaterialButton -> com.google.android.material.button.MaterialButton:
    125:167:void <clinit>() -> <clinit>
    187:188:void <init>(android.content.Context) -> <init>
    191:192:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:226:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    916:917:void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> addOnCheckedChangeListener
    931:932:void clearOnCheckedChangeListeners() -> clearOnCheckedChangeListeners
    231:231:java.lang.String getA11yClassName() -> getA11yClassName
    333:333:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    344:344:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    862:862:int getCornerRadius() -> getCornerRadius
    585:585:android.graphics.drawable.Drawable getIcon() -> getIcon
    874:874:int getIconGravity() -> getIconGravity
    511:511:int getIconPadding() -> getIconPadding
    541:541:int getIconSize() -> getIconSize
    624:624:android.content.res.ColorStateList getIconTint() -> getIconTint
    649:649:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    736:736:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1018:1021:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    778:778:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    821:821:int getStrokeWidth() -> getStrokeWidth
    278:284:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    316:321:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    977:977:boolean isCheckable() -> isCheckable
    955:955:boolean isChecked() -> isChecked
    474:474:boolean isLayoutRTL() -> isLayoutRTL
    1044:1044:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    415:419:void onAttachedToWindow() -> onAttachedToWindow
    893:903:int[] onCreateDrawableState(int) -> onCreateDrawableState
    245:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    236:241:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    394:399:void onLayout(boolean,int,int,int,int) -> onLayout
    403:405:void onMeasure(int,int) -> onMeasure
    409:411:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    965:967:boolean performClick() -> performClick
    926:927:void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener) -> removeOnCheckedChangeListener
    691:696:void resetIconDrawable(boolean) -> resetIconDrawable
    360:361:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    349:356:void setBackgroundColor(int) -> setBackgroundColor
    374:390:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    365:370:void setBackgroundResource(int) -> setBackgroundResource
    327:328:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    338:339:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    987:990:void setCheckable(boolean) -> setCheckable
    936:951:void setChecked(boolean) -> setChecked
    833:836:void setCornerRadius(int) -> setCornerRadius
    847:850:void setCornerRadiusResource(int) -> setCornerRadiusResource
    424:428:void setElevation(float) -> setElevation
    554:558:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    885:889:void setIconGravity(int) -> setIconGravity
    496:500:void setIconPadding(int) -> setIconPadding
    569:574:void setIconResource(int) -> setIconResource
    522:523:void setIconSize(int) -> setIconSize
    597:601:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    635:639:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    612:613:void setIconTintResource(int) -> setIconTintResource
    485:486:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    1032:1033:void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener) -> setOnPressedChangeListenerInternal
    1037:1041:void setPressed(boolean) -> setPressed
    707:710:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    721:724:void setRippleColorResource(int) -> setRippleColorResource
    999:1002:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1048:1051:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    749:752:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    764:767:void setStrokeColorResource(int) -> setStrokeColorResource
    791:794:void setStrokeWidth(int) -> setStrokeWidth
    806:809:void setStrokeWidthResource(int) -> setStrokeWidthResource
    259:266:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    297:304:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    960:961:void toggle() -> toggle
    657:688:void updateIcon(boolean) -> updateIcon
    431:432:void updateIconPosition() -> updateIconPosition
com.google.android.material.button.MaterialButtonHelper -> com.google.android.material.button.MaterialButtonHelper:
    52:52:void <clinit>() -> <clinit>
    75:78:void <init>(com.google.android.material.button.MaterialButton,com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    195:231:android.graphics.drawable.Drawable createBackground() -> createBackground
    315:315:int getCornerRadius() -> getCornerRadius
    367:376:com.google.android.material.shape.Shapeable getMaskDrawable() -> getMaskDrawable
    320:332:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean) -> getMaterialShapeDrawable
    337:337:com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable() -> getMaterialShapeDrawable
    262:262:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    386:386:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    274:274:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    285:285:int getStrokeWidth() -> getStrokeWidth
    168:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    181:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    350:350:com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable() -> getSurfaceColorStrokeDrawable
    150:150:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    345:345:boolean isCheckable() -> isCheckable
    81:134:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    242:245:void setBackgroundColor(int) -> setBackgroundColor
    142:147:void setBackgroundOverwritten() -> setBackgroundOverwritten
    341:342:void setCheckable(boolean) -> setCheckable
    306:312:void setCornerRadius(int) -> setCornerRadius
    248:258:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    380:382:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    185:187:void setShouldDrawSurfaceColorStroke(boolean) -> setShouldDrawSurfaceColorStroke
    266:270:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    278:282:void setStrokeWidth(int) -> setStrokeWidth
    159:165:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    172:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    354:363:void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel) -> updateButtonShape
    236:239:void updateMaskBounds(int,int) -> updateMaskBounds
    289:301:void updateStroke() -> updateStroke
    155:155:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
com.google.android.material.button.MaterialButtonToggleGroup -> com.google.android.material.button.MaterialButtonToggleGroup:
    132:132:void <clinit>() -> <clinit>
    165:166:void <init>(android.content.Context) -> <init>
    169:170:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    174:189:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    115:115:boolean access$200(com.google.android.material.button.MaterialButtonToggleGroup) -> access$200
    115:115:boolean access$300(com.google.android.material.button.MaterialButtonToggleGroup) -> access$300
    115:115:int access$402(com.google.android.material.button.MaterialButtonToggleGroup,int) -> access$402
    115:115:void access$500(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> access$500
    115:115:void access$600(com.google.android.material.button.MaterialButtonToggleGroup,int,boolean) -> access$600
    384:385:void addOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> addOnButtonCheckedListener
    213:238:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    467:494:void adjustChildMarginsAndUpdateLayout() -> adjustChildMarginsAndUpdateLayout
    666:674:android.widget.LinearLayout$LayoutParams buildLayoutParams(android.view.View) -> buildLayoutParams
    285:290:void check(int) -> check
    633:636:void checkForced(int) -> checkForced
    318:328:void clearChecked() -> clearChecked
    399:400:void clearOnButtonCheckedListeners() -> clearOnButtonCheckedListeners
    203:205:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    627:630:void dispatchOnButtonChecked(int,boolean) -> dispatchOnButtonChecked
    269:269:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    346:346:int getCheckedButtonId() -> getCheckedButtonId
    363:371:java.util.List getCheckedButtonIds() -> getCheckedButtonIds
    497:497:com.google.android.material.button.MaterialButton getChildButton(int) -> getChildButton
    683:685:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    541:548:int getFirstVisibleChildIndex() -> getFirstVisibleChildIndex
    552:559:int getLastVisibleChildIndex() -> getLastVisibleChildIndex
    573:588:com.google.android.material.button.MaterialButtonToggleGroup$CornerData getNewCornerData(int,int,int) -> getNewCornerData
    563:564:boolean isChildVisible(int) -> isChildVisible
    409:409:boolean isSingleSelection() -> isSingleSelection
    193:199:void onFinishInflate() -> onFinishInflate
    260:264:void onMeasure(int,int) -> onMeasure
    242:256:void onViewRemoved(android.view.View) -> onViewRemoved
    394:395:void removeOnButtonCheckedListener(com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener) -> removeOnButtonCheckedListener
    501:502:void resetChildMargins(int) -> resetChildMargins
    450:453:void setCheckedId(int) -> setCheckedId
    441:447:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    640:643:void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton) -> setGeneratedIdIfNeeded
    421:426:void setSingleSelection(boolean) -> setSingleSelection
    437:438:void setSingleSelection(int) -> setSingleSelection
    653:662:void setupButtonChild(com.google.android.material.button.MaterialButton) -> setupButtonChild
    302:306:void uncheck(int) -> uncheck
    593:603:void updateBuilderWithCornerData(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> updateBuilderWithCornerData
    615:624:void updateCheckedStates(int,boolean) -> updateCheckedStates
    692:699:void updateChildOrder() -> updateChildOrder
    522:538:void updateChildShapes() -> updateChildShapes
com.google.android.material.button.MaterialButtonToggleGroup$1 -> com.google.android.material.button.MaterialButtonToggleGroup$1:
    141:141:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    141:141:int compare(java.lang.Object,java.lang.Object) -> compare
    144:155:int compare(com.google.android.material.button.MaterialButton,com.google.android.material.button.MaterialButton) -> compare
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker:
    701:701:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    701:701:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    705:716:void onCheckedChanged(com.google.android.material.button.MaterialButton,boolean) -> onCheckedChanged
com.google.android.material.button.MaterialButtonToggleGroup$CornerData -> com.google.android.material.button.MaterialButtonToggleGroup$CornerData:
    730:730:void <clinit>() -> <clinit>
    738:743:void <init>(com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize,com.google.android.material.shape.CornerSize) -> <init>
    772:772:com.google.android.material.button.MaterialButtonToggleGroup$CornerData bottom(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> bottom
    752:752:com.google.android.material.button.MaterialButtonToggleGroup$CornerData end(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> end
    757:757:com.google.android.material.button.MaterialButtonToggleGroup$CornerData left(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> left
    762:762:com.google.android.material.button.MaterialButtonToggleGroup$CornerData right(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> right
    747:747:com.google.android.material.button.MaterialButtonToggleGroup$CornerData start(com.google.android.material.button.MaterialButtonToggleGroup$CornerData,android.view.View) -> start
    767:767:com.google.android.material.button.MaterialButtonToggleGroup$CornerData top(com.google.android.material.button.MaterialButtonToggleGroup$CornerData) -> top
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker -> com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker:
    719:719:void <init>(com.google.android.material.button.MaterialButtonToggleGroup) -> <init>
    719:719:void <init>(com.google.android.material.button.MaterialButtonToggleGroup,com.google.android.material.button.MaterialButtonToggleGroup$1) -> <init>
    723:725:void onPressedChanged(com.google.android.material.button.MaterialButton,boolean) -> onPressedChanged
com.google.android.material.canvas.CanvasCompat -> com.google.android.material.canvas.CanvasCompat:
    38:38:void <init>() -> <init>
    45:48:int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int) -> saveLayerAlpha
    58:61:int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int) -> saveLayerAlpha
com.google.android.material.card.MaterialCardView -> com.google.android.material.card.MaterialCardView:
    90:94:void <clinit>() -> <clinit>
    110:111:void <init>(android.content.Context) -> <init>
    114:115:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    118:139:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    77:77:float access$001(com.google.android.material.card.MaterialCardView) -> access$001
    547:550:void forceRippleRedrawIfNeeded() -> forceRippleRedrawIfNeeded
    287:287:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    221:221:float getCardViewRadius() -> getCardViewRadius
    485:485:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    516:516:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    271:271:int getContentPaddingBottom() -> getContentPaddingBottom
    256:256:int getContentPaddingLeft() -> getContentPaddingLeft
    266:266:int getContentPaddingRight() -> getContentPaddingRight
    261:261:int getContentPaddingTop() -> getContentPaddingTop
    242:242:float getProgress() -> getProgress
    217:217:float getRadius() -> getRadius
    474:474:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    543:543:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    185:185:int getStrokeColor() -> getStrokeColor
    191:191:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    206:206:int getStrokeWidth() -> getStrokeWidth
    388:388:boolean isCheckable() -> isCheckable
    353:353:boolean isChecked() -> isChecked
    378:378:boolean isDragged() -> isDragged
    298:301:void onAttachedToWindow() -> onAttachedToWindow
    415:428:int[] onCreateDrawableState(int) -> onCreateDrawableState
    152:155:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:148:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    159:161:void onMeasure(int,int) -> onMeasure
    251:252:void setAncestorContentPadding(int,int,int,int) -> setAncestorContentPadding
    331:332:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    336:344:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    348:349:void setBackgroundInternal(android.graphics.drawable.Drawable) -> setBackgroundInternal
    276:277:void setCardBackgroundColor(int) -> setCardBackgroundColor
    281:282:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    305:307:void setCardElevation(float) -> setCardElevation
    398:399:void setCheckable(boolean) -> setCheckable
    358:361:void setChecked(boolean) -> setChecked
    505:506:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    495:496:void setCheckedIconResource(int) -> setCheckedIconResource
    527:528:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    292:294:void setClickable(boolean) -> setClickable
    247:248:void setContentPadding(int,int,int,int) -> setContentPadding
    369:375:void setDragged(boolean) -> setDragged
    311:313:void setMaxCardElevation(float) -> setMaxCardElevation
    437:438:void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener) -> setOnCheckedChangeListener
    324:327:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    231:232:void setProgress(float) -> setProgress
    211:213:void setRadius(float) -> setRadius
    449:450:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    461:463:void setRippleColorResource(int) -> setRippleColorResource
    532:533:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    169:170:void setStrokeColor(int) -> setStrokeColor
    178:179:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    200:201:void setStrokeWidth(int) -> setStrokeWidth
    317:320:void setUseCompatPadding(boolean) -> setUseCompatPadding
    403:411:void toggle() -> toggle
com.google.android.material.card.MaterialCardViewHelper -> com.google.android.material.card.MaterialCardViewHelper:
    62:67:void <clinit>() -> <clinit>
    123:149:void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int) -> <init>
    538:538:float calculateActualCornerPadding() -> calculateActualCornerPadding
    555:560:float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float) -> calculateCornerPaddingForCornerTreatment
    503:503:float calculateHorizontalBackgroundPadding() -> calculateHorizontalBackgroundPadding
    493:493:float calculateVerticalBackgroundPadding() -> calculateVerticalBackgroundPadding
    508:508:boolean canClipToOutline() -> canClipToOutline
    611:615:android.graphics.drawable.Drawable createCheckedIconLayer() -> createCheckedIconLayer
    593:597:android.graphics.drawable.Drawable createCompatRippleDrawable() -> createCompatRippleDrawable
    582:588:android.graphics.drawable.Drawable createForegroundRippleDrawable() -> createForegroundRippleDrawable
    620:620:com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable() -> createForegroundShapeDrawable
    411:420:void forceRippleRedraw() -> forceRippleRedraw
    239:239:com.google.android.material.shape.MaterialShapeDrawable getBackground() -> getBackground
    247:247:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    375:375:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    365:365:android.content.res.ColorStateList getCheckedIconTint() -> getCheckedIconTint
    565:577:android.graphics.drawable.Drawable getClickableForeground() -> getClickableForeground
    283:283:float getCornerRadius() -> getCornerRadius
    512:516:float getParentCardViewCalculatedCornerPadding() -> getParentCardViewCalculatedCornerPadding
    299:299:float getProgress() -> getProgress
    370:370:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    439:439:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    216:216:int getStrokeColor() -> getStrokeColor
    221:221:android.content.res.ColorStateList getStrokeColorStateList() -> getStrokeColorStateList
    234:234:int getStrokeWidth() -> getStrokeWidth
    257:257:android.graphics.Rect getUserContentPadding() -> getUserContentPadding
    468:476:android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable) -> insetDrawable
    198:198:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    348:348:boolean isCheckable() -> isCheckable
    152:195:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    393:407:void onMeasure(int,int) -> onMeasure
    202:203:void setBackgroundOverwritten(boolean) -> setBackgroundOverwritten
    243:244:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    344:345:void setCheckable(boolean) -> setCheckable
    379:390:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    357:361:void setCheckedIconTint(android.content.res.ColorStateList) -> setCheckedIconTint
    270:280:void setCornerRadius(float) -> setCornerRadius
    287:295:void setProgress(float) -> setProgress
    352:354:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    423:436:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    206:212:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    225:230:void setStrokeWidth(int) -> setStrokeWidth
    251:253:void setUserContentPadding(int,int,int,int) -> setUserContentPadding
    520:520:boolean shouldAddCornerPaddingInsideCardBackground() -> shouldAddCornerPaddingInsideCardBackground
    524:524:boolean shouldAddCornerPaddingOutsideCardBackground() -> shouldAddCornerPaddingOutsideCardBackground
    261:267:void updateClickable() -> updateClickable
    326:341:void updateContentPadding() -> updateContentPadding
    303:304:void updateElevation() -> updateElevation
    448:454:void updateInsetForeground(android.graphics.drawable.Drawable) -> updateInsetForeground
    308:312:void updateInsets() -> updateInsets
    602:607:void updateRippleColor() -> updateRippleColor
    315:316:void updateStroke() -> updateStroke
com.google.android.material.card.MaterialCardViewHelper$1 -> com.google.android.material.card.MaterialCardViewHelper$1:
    477:477:void <init>(com.google.android.material.card.MaterialCardViewHelper,android.graphics.drawable.Drawable,int,int,int,int) -> <init>
    482:482:boolean getPadding(android.graphics.Rect) -> getPadding
com.google.android.material.checkbox.MaterialCheckBox -> com.google.android.material.checkbox.MaterialCheckBox:
    44:46:void <clinit>() -> <clinit>
    57:58:void <init>(android.content.Context) -> <init>
    61:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    117:134:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    113:113:boolean isUseMaterialThemeColors() -> isUseMaterialThemeColors
    90:95:void onAttachedToWindow() -> onAttachedToWindow
    103:109:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.chip.Chip -> com.google.android.material.chip.Chip:
    132:135:void <clinit>() -> <clinit>
    182:183:void <init>(android.content.Context) -> <init>
    186:187:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    190:244:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    126:126:com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip) -> access$000
    126:126:boolean access$100(com.google.android.material.chip.Chip) -> access$100
    126:126:android.graphics.RectF access$200(com.google.android.material.chip.Chip) -> access$200
    126:126:boolean access$302(com.google.android.material.chip.Chip,boolean) -> access$302
    126:126:android.graphics.Rect access$400(com.google.android.material.chip.Chip) -> access$400
    126:126:android.graphics.Rect access$500() -> access$500
    461:462:void applyChipDrawable(com.google.android.material.chip.ChipDrawable) -> applyChipDrawable
    894:934:int[] createCloseIconDrawableState() -> createCloseIconDrawableState
    826:826:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    833:844:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    879:890:void drawableStateChanged() -> drawableStateChanged
    2222:2261:boolean ensureAccessibleTouchTarget(int) -> ensureAccessibleTouchTarget
    427:432:void ensureChipDrawableHasCallback() -> ensureChipDrawableHasCallback
    436:439:android.graphics.drawable.Drawable getBackgroundDrawable() -> getBackgroundDrawable
    1822:1822:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1071:1071:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1139:1139:float getChipCornerRadius() -> getChipCornerRadius
    399:399:android.graphics.drawable.Drawable getChipDrawable() -> getChipDrawable
    2164:2164:float getChipEndPadding() -> getChipEndPadding
    1453:1453:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1523:1523:float getChipIconSize() -> getChipIconSize
    1488:1488:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1105:1105:float getChipMinHeight() -> getChipMinHeight
    1926:1926:float getChipStartPadding() -> getChipStartPadding
    1187:1187:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1221:1221:float getChipStrokeWidth() -> getChipStrokeWidth
    1296:1296:java.lang.CharSequence getChipText() -> getChipText
    1609:1609:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1725:1725:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2130:2130:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1680:1680:float getCloseIconSize() -> getCloseIconSize
    2096:2096:float getCloseIconStartPadding() -> getCloseIconStartPadding
    1646:1646:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    943:950:android.graphics.RectF getCloseIconTouchBounds() -> getCloseIconTouchBounds
    955:957:android.graphics.Rect getCloseIconTouchBoundsInt() -> getCloseIconTouchBoundsInt
    613:613:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    855:861:void getFocusedRect(android.graphics.Rect) -> getFocusedRect
    1892:1892:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1994:1994:float getIconEndPadding() -> getIconEndPadding
    1960:1960:float getIconStartPadding() -> getIconStartPadding
    1256:1256:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1163:1163:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1857:1857:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1390:1390:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2062:2062:float getTextEndPadding() -> getTextEndPadding
    2028:2028:float getTextStartPadding() -> getTextStartPadding
    794:821:boolean handleAccessibilityExit(android.view.MotionEvent) -> handleAccessibilityExit
    938:938:boolean hasCloseIcon() -> hasCloseIcon
    292:309:void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int) -> initMinTouchTarget
    381:395:void initOutlineProvider() -> initOutlineProvider
    2275:2277:void insetChipBackgroundDrawable(int,int,int,int) -> insetChipBackgroundDrawable
    1735:1735:boolean isCheckable() -> isCheckable
    1775:1775:boolean isCheckedIconEnabled() -> isCheckedIconEnabled
    1769:1769:boolean isCheckedIconVisible() -> isCheckedIconVisible
    1406:1406:boolean isChipIconEnabled() -> isChipIconEnabled
    1400:1400:boolean isChipIconVisible() -> isChipIconVisible
    1563:1563:boolean isCloseIconEnabled() -> isCloseIconEnabled
    1557:1557:boolean isCloseIconVisible() -> isCloseIconVisible
    248:251:void onAttachedToWindow() -> onAttachedToWindow
    672:679:void onChipDrawableSizeChange() -> onChipDrawableSizeChange
    466:473:int[] onCreateDrawableState(int) -> onCreateDrawableState
    849:851:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    774:785:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    264:275:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    964:967:android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int) -> onResolvePointerIcon
    337:345:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    738:769:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    721:733:boolean performCloseIconClick() -> performCloseIconClick
    2265:2271:void removeBackgroundInset() -> removeBackgroundInset
    506:511:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    496:497:void setBackgroundColor(int) -> setBackgroundColor
    515:520:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    501:502:void setBackgroundResource(int) -> setBackgroundResource
    486:487:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    491:492:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1757:1760:void setCheckable(boolean) -> setCheckable
    1745:1748:void setCheckableResource(int) -> setCheckableResource
    683:696:void setChecked(boolean) -> setChecked
    1844:1847:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1811:1812:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1805:1806:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1832:1835:void setCheckedIconResource(int) -> setCheckedIconResource
    1785:1788:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1797:1800:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1093:1096:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1081:1084:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1174:1177:void setChipCornerRadius(float) -> setChipCornerRadius
    1150:1153:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    404:414:void setChipDrawable(com.google.android.material.chip.ChipDrawable) -> setChipDrawable
    2186:2189:void setChipEndPadding(float) -> setChipEndPadding
    2174:2177:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1475:1478:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1442:1443:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1436:1437:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1463:1466:void setChipIconResource(int) -> setChipIconResource
    1545:1548:void setChipIconSize(float) -> setChipIconSize
    1533:1536:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1511:1514:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1498:1501:void setChipIconTintResource(int) -> setChipIconTintResource
    1416:1419:void setChipIconVisible(int) -> setChipIconVisible
    1428:1431:void setChipIconVisible(boolean) -> setChipIconVisible
    1127:1130:void setChipMinHeight(float) -> setChipMinHeight
    1115:1118:void setChipMinHeightResource(int) -> setChipMinHeightResource
    1948:1951:void setChipStartPadding(float) -> setChipStartPadding
    1936:1939:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1209:1212:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1197:1200:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1243:1246:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1231:1234:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1332:1333:void setChipText(java.lang.CharSequence) -> setChipText
    1326:1327:void setChipTextResource(int) -> setChipTextResource
    1632:1636:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1713:1716:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1598:1599:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1592:1593:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2152:2155:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2140:2143:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    871:875:void setCloseIconHovered(boolean) -> setCloseIconHovered
    864:868:void setCloseIconPressed(boolean) -> setCloseIconPressed
    1619:1623:void setCloseIconResource(int) -> setCloseIconResource
    1702:1705:void setCloseIconSize(float) -> setCloseIconSize
    1690:1693:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2118:2121:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2106:2109:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    1668:1671:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1656:1659:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1573:1574:void setCloseIconVisible(int) -> setCloseIconVisible
    1583:1587:void setCloseIconVisible(boolean) -> setCloseIconVisible
    528:529:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    572:573:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    585:586:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    601:602:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    540:541:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    556:557:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    256:260:void setElevation(float) -> setElevation
    618:622:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2210:2212:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    478:483:void setGravity(int) -> setGravity
    1914:1917:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1902:1905:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2016:2019:void setIconEndPadding(float) -> setIconEndPadding
    2004:2007:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    1982:1985:void setIconStartPadding(float) -> setIconStartPadding
    1970:1973:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    1301:1307:void setLayoutDirection(int) -> setLayoutDirection
    640:641:void setLines(int) -> setLines
    656:657:void setMaxLines(int) -> setMaxLines
    664:668:void setMaxWidth(int) -> setMaxWidth
    648:649:void setMinLines(int) -> setMinLines
    703:704:void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener) -> setOnCheckedChangeListenerInternal
    708:709:void setOnCloseIconClickListener(android.view.View$OnClickListener) -> setOnCloseIconClickListener
    1281:1287:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1266:1272:void setRippleColorResource(int) -> setRippleColorResource
    1157:1158:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1879:1882:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1867:1870:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    632:633:void setSingleLine(boolean) -> setSingleLine
    1311:1321:void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
    1353:1357:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1361:1366:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    1370:1375:void setTextAppearance(int) -> setTextAppearance
    1342:1343:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2084:2087:void setTextEndPadding(float) -> setTextEndPadding
    2072:2075:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    2050:2053:void setTextStartPadding(float) -> setTextStartPadding
    2038:2041:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    2199:2199:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    455:458:void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable) -> unapplyChipDrawable
    280:288:void updateAccessibilityDelegate() -> updateAccessibilityDelegate
    417:424:void updateBackgroundDrawable() -> updateBackgroundDrawable
    444:452:void updateFrameworkRippleBackground() -> updateFrameworkRippleBackground
    316:317:void updatePaddingInternal() -> updatePaddingInternal
    1378:1386:void updateTextPaintDrawState() -> updateTextPaintDrawState
    348:355:void validateAttributes(android.util.AttributeSet) -> validateAttributes
com.google.android.material.chip.Chip$1 -> com.google.android.material.chip.Chip$1:
    168:168:void <init>(com.google.android.material.chip.Chip) -> <init>
    178:178:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    172:175:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.chip.Chip$2 -> com.google.android.material.chip.Chip$2:
    383:383:void <init>(com.google.android.material.chip.Chip) -> <init>
    387:392:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.google.android.material.chip.Chip$ChipTouchHelper -> com.google.android.material.chip.Chip$ChipTouchHelper:
    973:975:void <init>(com.google.android.material.chip.Chip,com.google.android.material.chip.Chip) -> <init>
    979:979:int getVirtualViewAt(float,float) -> getVirtualViewAt
    986:990:void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    1050:1057:boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    1027:1045:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    1003:1023:void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    994:998:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
com.google.android.material.chip.ChipDrawable -> com.google.android.material.chip.ChipDrawable:
    163:166:void <clinit>() -> <clinit>
    307:329:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1272:1293:void applyChildDrawable(android.graphics.drawable.Drawable) -> applyChildDrawable
    773:789:void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipIconBounds
    517:518:float calculateChipIconWidth() -> calculateChipIconWidth
    881:897:void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateChipTouchBounds
    862:878:void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconBounds
    900:921:void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF) -> calculateCloseIconTouchBounds
    528:531:float calculateCloseIconWidth() -> calculateCloseIconWidth
    836:855:void calculateTextBounds(android.graphics.Rect,android.graphics.RectF) -> calculateTextBounds
    827:828:float calculateTextCenterFromBaseline() -> calculateTextCenterFromBaseline
    794:811:android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF) -> calculateTextOriginAndAlignment
    512:512:boolean canShowCheckedIcon() -> canShowCheckedIcon
    275:277:com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int) -> createFromAttributes
    294:299:com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int) -> createFromResource
    540:542:void draw(android.graphics.Canvas) -> draw
    659:671:void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCheckedIcon
    599:606:void drawChipBackground(android.graphics.Canvas,android.graphics.Rect) -> drawChipBackground
    644:656:void drawChipIcon(android.graphics.Canvas,android.graphics.Rect) -> drawChipIcon
    613:629:void drawChipStroke(android.graphics.Canvas,android.graphics.Rect) -> drawChipStroke
    590:596:void drawChipSurface(android.graphics.Canvas,android.graphics.Rect) -> drawChipSurface
    710:729:void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect) -> drawCloseIcon
    632:641:void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect) -> drawCompatRipple
    732:766:void drawDebug(android.graphics.Canvas,android.graphics.Rect) -> drawDebug
    675:707:void drawText(android.graphics.Canvas,android.graphics.Rect) -> drawText
    1184:1184:int getAlpha() -> getAlpha
    1944:1944:android.graphics.drawable.Drawable getCheckedIcon() -> getCheckedIcon
    1347:1347:android.content.res.ColorStateList getChipBackgroundColor() -> getChipBackgroundColor
    1414:1414:float getChipCornerRadius() -> getChipCornerRadius
    2301:2301:float getChipEndPadding() -> getChipEndPadding
    1643:1643:android.graphics.drawable.Drawable getChipIcon() -> getChipIcon
    1704:1704:float getChipIconSize() -> getChipIconSize
    1672:1672:android.content.res.ColorStateList getChipIconTint() -> getChipIconTint
    1380:1380:float getChipMinHeight() -> getChipMinHeight
    2049:2049:float getChipStartPadding() -> getChipStartPadding
    1451:1451:android.content.res.ColorStateList getChipStrokeColor() -> getChipStrokeColor
    1487:1487:float getChipStrokeWidth() -> getChipStrokeWidth
    463:464:void getChipTouchBounds(android.graphics.RectF) -> getChipTouchBounds
    1772:1772:android.graphics.drawable.Drawable getCloseIcon() -> getCloseIcon
    1862:1862:java.lang.CharSequence getCloseIconContentDescription() -> getCloseIconContentDescription
    2265:2265:float getCloseIconEndPadding() -> getCloseIconEndPadding
    1834:1834:float getCloseIconSize() -> getCloseIconSize
    2229:2229:float getCloseIconStartPadding() -> getCloseIconStartPadding
    961:961:int[] getCloseIconState() -> getCloseIconState
    1814:1814:android.content.res.ColorStateList getCloseIconTint() -> getCloseIconTint
    471:472:void getCloseIconTouchBounds(android.graphics.RectF) -> getCloseIconTouchBounds
    1198:1198:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    1588:1588:android.text.TextUtils$TruncateAt getEllipsize() -> getEllipsize
    2019:2019:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    2122:2122:float getIconEndPadding() -> getIconEndPadding
    2083:2083:float getIconStartPadding() -> getIconStartPadding
    492:492:int getIntrinsicHeight() -> getIntrinsicHeight
    477:486:int getIntrinsicWidth() -> getIntrinsicWidth
    2335:2335:int getMaxWidth() -> getMaxWidth
    1220:1220:int getOpacity() -> getOpacity
    1226:1238:void getOutline(android.graphics.Outline) -> getOutline
    1526:1526:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    1988:1988:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    1555:1555:java.lang.CharSequence getText() -> getText
    1576:1576:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    2195:2195:float getTextEndPadding() -> getTextEndPadding
    2161:2161:float getTextStartPadding() -> getTextStartPadding
    1301:1301:android.graphics.ColorFilter getTintColorFilter() -> getTintColorFilter
    442:442:boolean getUseCompatRipple() -> getUseCompatRipple
    1318:1327:boolean hasState(int[],int) -> hasState
    1242:1246:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1866:1866:boolean isCheckable() -> isCheckable
    1897:1897:boolean isCheckedIconEnabled() -> isCheckedIconEnabled
    1891:1891:boolean isCheckedIconVisible() -> isCheckedIconVisible
    1602:1602:boolean isChipIconEnabled() -> isChipIconEnabled
    1596:1596:boolean isChipIconVisible() -> isChipIconVisible
    1731:1731:boolean isCloseIconEnabled() -> isCloseIconEnabled
    941:941:boolean isCloseIconStateful() -> isCloseIconStateful
    1725:1725:boolean isCloseIconVisible() -> isCloseIconVisible
    535:535:boolean isShapeThemingEnabled() -> isShapeThemingEnabled
    927:927:boolean isStateful() -> isStateful
    1097:1097:boolean isStateful(android.content.res.ColorStateList) -> isStateful
    1101:1101:boolean isStateful(android.graphics.drawable.Drawable) -> isStateful
    1105:1105:boolean isStateful(com.google.android.material.resources.TextAppearance) -> isStateful
    333:429:void loadFromAttributes(android.util.AttributeSet,int,int) -> loadFromAttributes
    1112:1127:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    1132:1147:boolean onLevelChange(int) -> onLevelChange
    452:456:void onSizeChange() -> onSizeChange
    972:975:boolean onStateChange(int[]) -> onStateChange
    981:1093:boolean onStateChange(int[],int[]) -> onStateChange
    966:968:void onTextSizeChange() -> onTextSizeChange
    1250:1254:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1176:1180:void setAlpha(int) -> setAlpha
    1874:1888:void setCheckable(boolean) -> setCheckable
    1870:1871:void setCheckableResource(int) -> setCheckableResource
    1964:1978:void setCheckedIcon(android.graphics.drawable.Drawable) -> setCheckedIcon
    1933:1934:void setCheckedIconEnabled(boolean) -> setCheckedIconEnabled
    1927:1928:void setCheckedIconEnabledResource(int) -> setCheckedIconEnabledResource
    1954:1955:void setCheckedIconResource(int) -> setCheckedIconResource
    1901:1902:void setCheckedIconVisible(int) -> setCheckedIconVisible
    1905:1922:void setCheckedIconVisible(boolean) -> setCheckedIconVisible
    1367:1371:void setChipBackgroundColor(android.content.res.ColorStateList) -> setChipBackgroundColor
    1357:1358:void setChipBackgroundColorResource(int) -> setChipBackgroundColorResource
    1436:1441:void setChipCornerRadius(float) -> setChipCornerRadius
    1425:1426:void setChipCornerRadiusResource(int) -> setChipCornerRadiusResource
    2321:2326:void setChipEndPadding(float) -> setChipEndPadding
    2311:2312:void setChipEndPaddingResource(int) -> setChipEndPaddingResource
    1651:1667:void setChipIcon(android.graphics.drawable.Drawable) -> setChipIcon
    1638:1639:void setChipIconEnabled(boolean) -> setChipIconEnabled
    1632:1633:void setChipIconEnabledResource(int) -> setChipIconEnabledResource
    1647:1648:void setChipIconResource(int) -> setChipIconResource
    1712:1722:void setChipIconSize(float) -> setChipIconSize
    1708:1709:void setChipIconSizeResource(int) -> setChipIconSizeResource
    1692:1701:void setChipIconTint(android.content.res.ColorStateList) -> setChipIconTint
    1682:1683:void setChipIconTintResource(int) -> setChipIconTintResource
    1606:1607:void setChipIconVisible(int) -> setChipIconVisible
    1610:1627:void setChipIconVisible(boolean) -> setChipIconVisible
    1400:1405:void setChipMinHeight(float) -> setChipMinHeight
    1390:1391:void setChipMinHeightResource(int) -> setChipMinHeightResource
    2069:2074:void setChipStartPadding(float) -> setChipStartPadding
    2059:2060:void setChipStartPaddingResource(int) -> setChipStartPaddingResource
    1471:1478:void setChipStrokeColor(android.content.res.ColorStateList) -> setChipStrokeColor
    1461:1462:void setChipStrokeColorResource(int) -> setChipStrokeColorResource
    1507:1516:void setChipStrokeWidth(float) -> setChipStrokeWidth
    1497:1498:void setChipStrokeWidthResource(int) -> setChipStrokeWidthResource
    1310:1314:void setChipSurfaceColor(android.content.res.ColorStateList) -> setChipSurfaceColor
    1780:1799:void setCloseIcon(android.graphics.drawable.Drawable) -> setCloseIcon
    1852:1858:void setCloseIconContentDescription(java.lang.CharSequence) -> setCloseIconContentDescription
    1767:1768:void setCloseIconEnabled(boolean) -> setCloseIconEnabled
    1761:1762:void setCloseIconEnabledResource(int) -> setCloseIconEnabledResource
    2285:2292:void setCloseIconEndPadding(float) -> setCloseIconEndPadding
    2275:2276:void setCloseIconEndPaddingResource(int) -> setCloseIconEndPaddingResource
    1776:1777:void setCloseIconResource(int) -> setCloseIconResource
    1842:1849:void setCloseIconSize(float) -> setCloseIconSize
    1838:1839:void setCloseIconSizeResource(int) -> setCloseIconSizeResource
    2249:2256:void setCloseIconStartPadding(float) -> setCloseIconStartPadding
    2239:2240:void setCloseIconStartPaddingResource(int) -> setCloseIconStartPaddingResource
    949:955:boolean setCloseIconState(int[]) -> setCloseIconState
    1822:1831:void setCloseIconTint(android.content.res.ColorStateList) -> setCloseIconTint
    1818:1819:void setCloseIconTintResource(int) -> setCloseIconTintResource
    1735:1736:void setCloseIconVisible(int) -> setCloseIconVisible
    1739:1756:void setCloseIconVisible(boolean) -> setCloseIconVisible
    1189:1193:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    447:448:void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate) -> setDelegate
    1592:1593:void setEllipsize(android.text.TextUtils$TruncateAt) -> setEllipsize
    2039:2040:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    2029:2030:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    2142:2152:void setIconEndPadding(float) -> setIconEndPadding
    2132:2133:void setIconEndPaddingResource(int) -> setIconEndPaddingResource
    2103:2113:void setIconStartPadding(float) -> setIconStartPadding
    2093:2094:void setIconStartPaddingResource(int) -> setIconStartPaddingResource
    2344:2345:void setMaxWidth(int) -> setMaxWidth
    1546:1551:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1536:1537:void setRippleColorResource(int) -> setRippleColorResource
    2358:2359:void setShouldDrawText(boolean) -> setShouldDrawText
    2008:2009:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1998:1999:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    1563:1572:void setText(java.lang.CharSequence) -> setText
    1584:1585:void setTextAppearance(com.google.android.material.resources.TextAppearance) -> setTextAppearance
    1580:1581:void setTextAppearanceResource(int) -> setTextAppearanceResource
    2215:2220:void setTextEndPadding(float) -> setTextEndPadding
    2205:2206:void setTextEndPaddingResource(int) -> setTextEndPaddingResource
    1559:1560:void setTextResource(int) -> setTextResource
    2181:2186:void setTextStartPadding(float) -> setTextStartPadding
    2171:2172:void setTextStartPaddingResource(int) -> setTextStartPaddingResource
    1203:1207:void setTintList(android.content.res.ColorStateList) -> setTintList
    1211:1216:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    433:438:void setUseCompatRipple(boolean) -> setUseCompatRipple
    1152:1167:boolean setVisible(boolean,boolean) -> setVisible
    2348:2348:boolean shouldDrawText() -> shouldDrawText
    502:502:boolean showsCheckedIcon() -> showsCheckedIcon
    497:497:boolean showsChipIcon() -> showsChipIcon
    507:507:boolean showsCloseIcon() -> showsCloseIcon
    1265:1268:void unapplyChildDrawable(android.graphics.drawable.Drawable) -> unapplyChildDrawable
    1258:1262:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1305:1307:void updateCompatRippleColor() -> updateCompatRippleColor
    1803:1810:void updateFrameworkCloseIconRipple() -> updateFrameworkCloseIconRipple
com.google.android.material.chip.ChipGroup -> com.google.android.material.chip.ChipGroup:
    101:102:void <init>(android.content.Context) -> <init>
    105:106:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:133:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    50:50:boolean access$300(com.google.android.material.chip.ChipGroup) -> access$300
    50:50:int access$400(com.google.android.material.chip.ChipGroup) -> access$400
    50:50:boolean access$500(com.google.android.material.chip.ChipGroup) -> access$500
    50:50:void access$600(com.google.android.material.chip.ChipGroup,int,boolean) -> access$600
    50:50:void access$700(com.google.android.material.chip.ChipGroup,int) -> access$700
    50:50:com.google.android.material.chip.ChipGroup$CheckedStateTracker access$800(com.google.android.material.chip.ChipGroup) -> access$800
    177:188:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    238:251:void check(int) -> check
    155:155:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    275:285:void clearCheck() -> clearCheck
    150:150:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    138:138:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    144:144:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    264:264:int getCheckedChipId() -> getCheckedChipId
    328:328:int getChipSpacingHorizontal() -> getChipSpacingHorizontal
    348:348:int getChipSpacingVertical() -> getChipSpacingVertical
    369:369:boolean isSingleLine() -> isSingleLine
    386:386:boolean isSingleSelection() -> isSingleSelection
    166:173:void onFinishInflate() -> onFinishInflate
    298:303:void setCheckedId(int) -> setCheckedId
    306:312:void setCheckedStateForView(int,boolean) -> setCheckedStateForView
    316:318:void setChipSpacing(int) -> setChipSpacing
    333:338:void setChipSpacingHorizontal(int) -> setChipSpacingHorizontal
    342:343:void setChipSpacingHorizontalResource(int) -> setChipSpacingHorizontalResource
    322:323:void setChipSpacingResource(int) -> setChipSpacingResource
    353:358:void setChipSpacingVertical(int) -> setChipSpacingVertical
    362:363:void setChipSpacingVerticalResource(int) -> setChipSpacingVerticalResource
    193:193:void setDividerDrawableHorizontal(android.graphics.drawable.Drawable) -> setDividerDrawableHorizontal
    201:201:void setDividerDrawableVertical(android.graphics.drawable.Drawable) -> setDividerDrawableVertical
    223:223:void setFlexWrap(int) -> setFlexWrap
    294:295:void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener) -> setOnCheckedChangeListener
    161:162:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    209:209:void setShowDividerHorizontal(int) -> setShowDividerHorizontal
    216:216:void setShowDividerVertical(int) -> setShowDividerVertical
    376:377:void setSingleLine(boolean) -> setSingleLine
    381:382:void setSingleLine(int) -> setSingleLine
    395:400:void setSingleSelection(boolean) -> setSingleSelection
    408:409:void setSingleSelection(int) -> setSingleSelection
com.google.android.material.chip.ChipGroup$CheckedStateTracker -> com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    411:411:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    411:411:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    415:431:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.google.android.material.chip.ChipGroup$LayoutParams -> com.google.android.material.chip.ChipGroup$LayoutParams:
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:74:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    77:78:void <init>(int,int) -> <init>
    81:82:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener -> com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    439:439:void <init>(com.google.android.material.chip.ChipGroup) -> <init>
    439:439:void <init>(com.google.android.material.chip.ChipGroup,com.google.android.material.chip.ChipGroup$1) -> <init>
    439:439:android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener) -> access$202
    444:461:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    465:472:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
com.google.android.material.circularreveal.CircularRevealCompat -> com.google.android.material.circularreveal.CircularRevealCompat:
    39:39:void <init>() -> <init>
    57:79:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    97:112:android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float) -> createCircularReveal
    123:123:android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget) -> createCircularRevealListener
com.google.android.material.circularreveal.CircularRevealCompat$1 -> com.google.android.material.circularreveal.CircularRevealCompat$1:
    123:123:void <init>(com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    131:132:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    126:127:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.circularreveal.CircularRevealFrameLayout -> com.google.android.material.circularreveal.CircularRevealFrameLayout:
    34:35:void <init>(android.content.Context) -> <init>
    38:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:97:void actualDraw(android.graphics.Canvas) -> actualDraw
    110:110:boolean actualIsOpaque() -> actualIsOpaque
    44:45:void buildCircularRevealCache() -> buildCircularRevealCache
    49:50:void destroyCircularRevealCache() -> destroyCircularRevealCache
    87:92:void draw(android.graphics.Canvas) -> draw
    76:76:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    65:65:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    55:55:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    101:104:boolean isOpaque() -> isOpaque
    81:82:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    70:71:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    60:61:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealGridLayout -> com.google.android.material.circularreveal.CircularRevealGridLayout:
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:90:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealHelper -> com.google.android.material.circularreveal.CircularRevealHelper:
    127:134:void <clinit>() -> <clinit>
    136:150:void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate) -> <init>
    153:173:void buildCircularRevealCache() -> buildCircularRevealCache
    176:182:void destroyCircularRevealCache() -> destroyCircularRevealCache
    264:301:void draw(android.graphics.Canvas) -> draw
    352:356:void drawDebugCircle(android.graphics.Canvas,int,float) -> drawDebugCircle
    337:349:void drawDebugMode(android.graphics.Canvas) -> drawDebugMode
    304:313:void drawOverlayDrawable(android.graphics.Canvas) -> drawOverlayDrawable
    233:233:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    228:228:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    254:254:float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> getDistanceToFurthestCorner
    210:218:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    242:251:void invalidateRevealInfo() -> invalidateRevealInfo
    316:316:boolean isOpaque() -> isOpaque
    237:239:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    222:224:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    189:206:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
    320:324:boolean shouldDrawCircularReveal() -> shouldDrawCircularReveal
    333:333:boolean shouldDrawOverlayDrawable() -> shouldDrawOverlayDrawable
    329:329:boolean shouldDrawScrim() -> shouldDrawScrim
com.google.android.material.circularreveal.CircularRevealLinearLayout -> com.google.android.material.circularreveal.CircularRevealLinearLayout:
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:90:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealRelativeLayout -> com.google.android.material.circularreveal.CircularRevealRelativeLayout:
    33:34:void <init>(android.content.Context) -> <init>
    37:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    94:95:void actualDraw(android.graphics.Canvas) -> actualDraw
    108:108:boolean actualIsOpaque() -> actualIsOpaque
    43:44:void buildCircularRevealCache() -> buildCircularRevealCache
    48:49:void destroyCircularRevealCache() -> destroyCircularRevealCache
    85:90:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    99:102:boolean isOpaque() -> isOpaque
    80:81:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:70:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:60:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    209:209:void <clinit>() -> <clinit>
    207:210:void <init>() -> <init>
    207:207:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    216:220:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:186:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    191:191:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    196:197:void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    230:230:void <clinit>() -> <clinit>
    234:235:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object get(java.lang.Object) -> get
    240:240:java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget) -> get
    228:228:void set(java.lang.Object,java.lang.Object) -> set
    245:246:void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo -> com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:150:void <init>(float,float,float) -> <init>
    153:154:void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> <init>
    171:171:boolean isInvalid() -> isInvalid
    157:160:void set(float,float,float) -> set
    163:164:void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> set
com.google.android.material.circularreveal.cardview.CircularRevealCardView -> com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    37:38:void <init>(android.content.Context) -> <init>
    41:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:99:void actualDraw(android.graphics.Canvas) -> actualDraw
    112:112:boolean actualIsOpaque() -> actualIsOpaque
    47:48:void buildCircularRevealCache() -> buildCircularRevealCache
    52:53:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:94:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:85:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout -> com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:99:void actualDraw(android.graphics.Canvas) -> actualDraw
    112:112:boolean actualIsOpaque() -> actualIsOpaque
    47:48:void buildCircularRevealCache() -> buildCircularRevealCache
    52:53:void destroyCircularRevealCache() -> destroyCircularRevealCache
    89:94:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    73:73:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    63:63:com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    103:106:boolean isOpaque() -> isOpaque
    84:85:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    68:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    57:58:void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
com.google.android.material.color.MaterialColors -> com.google.android.material.color.MaterialColors:
    38:38:void <init>() -> <init>
    54:54:int getColor(android.view.View,int) -> getColor
    65:65:int getColor(android.content.Context,int,java.lang.String) -> getColor
    75:75:int getColor(android.view.View,int,int) -> getColor
    85:89:int getColor(android.content.Context,int,int) -> getColor
    102:102:int layer(android.view.View,int,int) -> layer
    115:117:int layer(android.view.View,int,int,float) -> layer
    129:131:int layer(int,int,float) -> layer
    140:140:int layer(int,int) -> layer
com.google.android.material.datepicker.CalendarConstraints -> com.google.android.material.datepicker.CalendarConstraints:
    138:138:void <clinit>() -> <clinit>
    31:31:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator,com.google.android.material.datepicker.CalendarConstraints$1) -> <init>
    54:60:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator) -> <init>
    31:31:com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints) -> access$100
    31:31:com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints) -> access$200
    31:31:com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints) -> access$300
    31:31:com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints) -> access$400
    159:159:int describeContents() -> describeContents
    116:123:boolean equals(java.lang.Object) -> equals
    77:77:com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator() -> getDateValidator
    89:89:com.google.android.material.datepicker.Month getEnd() -> getEnd
    103:103:int getMonthSpan() -> getMonthSpan
    95:95:com.google.android.material.datepicker.Month getOpenAt() -> getOpenAt
    83:83:com.google.android.material.datepicker.Month getStart() -> getStart
    111:111:int getYearSpan() -> getYearSpan
    131:132:int hashCode() -> hashCode
    70:70:boolean isWithinBounds(long) -> isWithinBounds
    164:168:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.CalendarConstraints$1 -> com.google.android.material.datepicker.CalendarConstraints$1:
    139:139:void <init>() -> <init>
    139:139:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    143:147:com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel) -> createFromParcel
    139:139:java.lang.Object[] newArray(int) -> newArray
    153:153:com.google.android.material.datepicker.CalendarConstraints[] newArray(int) -> newArray
com.google.android.material.datepicker.CalendarConstraints$Builder -> com.google.android.material.datepicker.CalendarConstraints$Builder:
    177:183:void <clinit>() -> <clinit>
    193:193:void <init>() -> <init>
    195:200:void <init>(com.google.android.material.datepicker.CalendarConstraints) -> <init>
    296:302:com.google.android.material.datepicker.CalendarConstraints build() -> build
    252:253:com.google.android.material.datepicker.CalendarConstraints$Builder setEnd(long) -> setEnd
    279:280:com.google.android.material.datepicker.CalendarConstraints$Builder setOpenAt(long) -> setOpenAt
    225:226:com.google.android.material.datepicker.CalendarConstraints$Builder setStart(long) -> setStart
    289:290:com.google.android.material.datepicker.CalendarConstraints$Builder setValidator(com.google.android.material.datepicker.CalendarConstraints$DateValidator) -> setValidator
com.google.android.material.datepicker.CalendarItemStyle -> com.google.android.material.datepicker.CalendarItemStyle:
    66:78:void <init>(android.content.res.ColorStateList,android.content.res.ColorStateList,android.content.res.ColorStateList,int,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.Rect) -> <init>
    87:130:com.google.android.material.datepicker.CalendarItemStyle create(android.content.Context,int) -> create
    166:166:int getBottomInset() -> getBottomInset
    154:154:int getLeftInset() -> getLeftInset
    158:158:int getRightInset() -> getRightInset
    162:162:int getTopInset() -> getTopInset
    136:151:void styleItem(android.widget.TextView) -> styleItem
com.google.android.material.datepicker.CalendarStyle -> com.google.android.material.datepicker.CalendarStyle:
    74:116:void <init>(android.content.Context) -> <init>
com.google.android.material.datepicker.DateFormatTextWatcher -> com.google.android.material.datepicker.DateFormatTextWatcher:
    42:48:void <init>(java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    95:95:void afterTextChanged(android.text.Editable) -> afterTextChanged
    55:55:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    52:52:void onInvalidDate() -> onInvalidDate
    59:92:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.datepicker.DateStrings -> com.google.android.material.datepicker.DateStrings:
    31:31:void <init>() -> <init>
    127:127:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long) -> getDateRangeString
    148:176:androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat) -> getDateRangeString
    98:98:java.lang.String getDateString(long) -> getDateString
    113:123:java.lang.String getDateString(long,java.text.SimpleDateFormat) -> getDateString
    55:55:java.lang.String getMonthDay(long) -> getMonthDay
    69:72:java.lang.String getMonthDay(long,java.util.Locale) -> getMonthDay
    76:76:java.lang.String getMonthDayOfWeekDay(long) -> getMonthDayOfWeekDay
    80:83:java.lang.String getMonthDayOfWeekDay(long,java.util.Locale) -> getMonthDayOfWeekDay
    34:34:java.lang.String getYearMonthDay(long) -> getYearMonthDay
    48:51:java.lang.String getYearMonthDay(long,java.util.Locale) -> getYearMonthDay
    87:87:java.lang.String getYearMonthDayOfWeekDay(long) -> getYearMonthDayOfWeekDay
    91:94:java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale) -> getYearMonthDayOfWeekDay
com.google.android.material.datepicker.DateValidatorPointForward -> com.google.android.material.datepicker.DateValidatorPointForward:
    57:57:void <clinit>() -> <clinit>
    30:30:void <init>(long,com.google.android.material.datepicker.DateValidatorPointForward$1) -> <init>
    34:36:void <init>(long) -> <init>
    79:79:int describeContents() -> describeContents
    89:96:boolean equals(java.lang.Object) -> equals
    44:44:com.google.android.material.datepicker.DateValidatorPointForward from(long) -> from
    101:102:int hashCode() -> hashCode
    74:74:boolean isValid(long) -> isValid
    53:53:com.google.android.material.datepicker.DateValidatorPointForward now() -> now
    84:85:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.DateValidatorPointForward$1 -> com.google.android.material.datepicker.DateValidatorPointForward$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:com.google.android.material.datepicker.DateValidatorPointForward createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    68:68:com.google.android.material.datepicker.DateValidatorPointForward[] newArray(int) -> newArray
com.google.android.material.datepicker.DaysOfWeekAdapter -> com.google.android.material.datepicker.DaysOfWeekAdapter:
    49:49:void <clinit>() -> <clinit>
    52:56:void <init>() -> <init>
    75:75:int getCount() -> getCount
    41:41:java.lang.Object getItem(int) -> getItem
    61:64:java.lang.Integer getItem(int) -> getItem
    70:70:long getItemId(int) -> getItemId
    82:95:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    100:104:int positionToDayOfWeek(int) -> positionToDayOfWeek
com.google.android.material.datepicker.MaterialCalendar -> com.google.android.material.datepicker.MaterialCalendar:
    73:79:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    59:59:androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar) -> access$000
    59:59:com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar) -> access$100
    59:59:com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar) -> access$200
    59:59:androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar) -> access$300
    59:59:com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar) -> access$400
    59:59:android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar) -> access$500
    59:59:com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month) -> access$602
    365:446:void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter) -> addActionsToMonthNavigation
    231:231:androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration() -> createItemDecoration
    289:289:com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints() -> getCalendarConstraints
    323:323:com.google.android.material.datepicker.CalendarStyle getCalendarStyle() -> getCalendarStyle
    283:283:com.google.android.material.datepicker.Month getCurrentMonth() -> getCurrentMonth
    319:319:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    334:334:int getDayHeight(android.content.Context) -> getDayHeight
    460:460:androidx.recyclerview.widget.LinearLayoutManager getLayoutManager() -> getLayoutManager
    97:104:com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    118:124:void onCreate(android.os.Bundle) -> onCreate
    132:226:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    109:114:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    449:456:void postSmoothRecyclerViewScroll(int) -> postSmoothRecyclerViewScroll
    299:314:void setCurrentMonth(com.google.android.material.datepicker.Month) -> setCurrentMonth
    338:353:void setSelector(com.google.android.material.datepicker.MaterialCalendar$CalendarSelector) -> setSelector
    356:361:void toggleVisibleSelector() -> toggleVisibleSelector
com.google.android.material.datepicker.MaterialCalendar$1 -> com.google.android.material.datepicker.MaterialCalendar$1:
    152:152:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    156:159:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$10 -> com.google.android.material.datepicker.MaterialCalendar$10:
    450:450:void <init>(com.google.android.material.datepicker.MaterialCalendar,int) -> <init>
    453:454:void run() -> run
com.google.android.material.datepicker.MaterialCalendar$2 -> com.google.android.material.datepicker.MaterialCalendar$2:
    168:168:void <init>(com.google.android.material.datepicker.MaterialCalendar,android.content.Context,int,boolean,int) -> <init>
    171:178:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
com.google.android.material.datepicker.MaterialCalendar$3 -> com.google.android.material.datepicker.MaterialCalendar$3:
    188:188:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    192:203:void onDayClick(long) -> onDayClick
com.google.android.material.datepicker.MaterialCalendar$4 -> com.google.android.material.datepicker.MaterialCalendar$4:
    231:234:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    239:241:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
com.google.android.material.datepicker.MaterialCalendar$5 -> com.google.android.material.datepicker.MaterialCalendar$5:
    369:369:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    374:379:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialCalendar$6 -> com.google.android.material.datepicker.MaterialCalendar$6:
    392:392:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.button.MaterialButton) -> <init>
    407:415:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    396:403:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.google.android.material.datepicker.MaterialCalendar$7 -> com.google.android.material.datepicker.MaterialCalendar$7:
    419:419:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    422:423:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$8 -> com.google.android.material.datepicker.MaterialCalendar$8:
    427:427:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    430:434:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$9 -> com.google.android.material.datepicker.MaterialCalendar$9:
    437:437:void <init>(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.MonthsPagerAdapter) -> <init>
    440:444:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector -> com.google.android.material.datepicker.MaterialCalendar$CalendarSelector:
    63:62:void <clinit>() -> <clinit>
    62:62:void <init>(java.lang.String,int) -> <init>
    62:62:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String) -> valueOf
    62:62:com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values() -> values
com.google.android.material.datepicker.MaterialCalendarGridView -> com.google.android.material.datepicker.MaterialCalendarGridView:
    41:42:void <init>(android.content.Context) -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    190:197:void gainFocus(int,android.graphics.Rect) -> gainFocus
    36:36:android.widget.Adapter getAdapter() -> getAdapter
    36:36:android.widget.ListAdapter getAdapter() -> getAdapter
    102:102:com.google.android.material.datepicker.MonthAdapter getAdapter() -> getAdapter
    211:211:int horizontalMidPoint(android.view.View) -> horizontalMidPoint
    69:71:void onAttachedToWindow() -> onAttachedToWindow
    119:178:void onDraw(android.graphics.Canvas) -> onDraw
    182:187:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    84:90:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    36:36:void setAdapter(android.widget.Adapter) -> setAdapter
    107:109:void setAdapter(android.widget.ListAdapter) -> setAdapter
    75:80:void setSelection(int) -> setSelection
    204:205:boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long) -> skipMonth
com.google.android.material.datepicker.MaterialCalendarGridView$1 -> com.google.android.material.datepicker.MaterialCalendarGridView$1:
    56:56:void <init>(com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    60:63:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.datepicker.MaterialDatePicker -> com.google.android.material.datepicker.MaterialDatePicker:
    64:66:void <clinit>() -> <clinit>
    56:95:void <init>() -> <init>
    56:56:java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker) -> access$000
    56:56:java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker) -> access$100
    56:56:void access$200(com.google.android.material.datepicker.MaterialDatePicker) -> access$200
    56:56:com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker) -> access$300
    56:56:android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker) -> access$400
    56:56:com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker) -> access$500
    56:56:void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton) -> access$600
    56:56:void access$700(com.google.android.material.datepicker.MaterialDatePicker) -> access$700
    466:466:boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener) -> addOnCancelListener
    484:484:boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener) -> addOnDismissListener
    440:440:boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener) -> addOnNegativeButtonClickListener
    418:418:boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener) -> addOnPositiveButtonClickListener
    476:477:void clearOnCancelListeners() -> clearOnCancelListeners
    494:495:void clearOnDismissListeners() -> clearOnDismissListeners
    456:457:void clearOnNegativeButtonClickListeners() -> clearOnNegativeButtonClickListeners
    434:435:void clearOnPositiveButtonClickListeners() -> clearOnPositiveButtonClickListeners
    368:374:android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context) -> createHeaderToggleDrawable
    389:402:int getDialogPickerHeight(android.content.Context) -> getDialogPickerHeight
    86:86:java.lang.String getHeaderText() -> getHeaderText
    406:412:int getPaddedPickerWidth(android.content.Context) -> getPaddedPickerWidth
    301:301:java.lang.Object getSelection() -> getSelection
    153:156:int getThemeResId(android.content.Context) -> getThemeResId
    340:355:void initHeaderToggle(android.content.Context) -> initHeaderToggle
    378:385:boolean isFullscreen(android.content.Context) -> isFullscreen
    114:122:com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder) -> newInstance
    277:281:void onCancel(android.content.DialogInterface) -> onCancel
    143:150:void onCreate(android.os.Bundle) -> onCreate
    162:177:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    186:245:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    285:293:void onDismiss(android.content.DialogInterface) -> onDismiss
    127:139:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    250:267:void onStart() -> onStart
    271:273:void onStop() -> onStop
    471:471:boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener) -> removeOnCancelListener
    489:489:boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener) -> removeOnDismissListener
    449:449:boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener) -> removeOnNegativeButtonClickListener
    427:427:boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener) -> removeOnPositiveButtonClickListener
    312:337:void startPickerFragment() -> startPickerFragment
    77:77:long thisMonthInUtcMilliseconds() -> thisMonthInUtcMilliseconds
    70:70:long todayInUtcMilliseconds() -> todayInUtcMilliseconds
    305:309:void updateHeader() -> updateHeader
    358:363:void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton) -> updateToggleContentDescription
com.google.android.material.datepicker.MaterialDatePicker$1 -> com.google.android.material.datepicker.MaterialDatePicker$1:
    222:222:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    226:230:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$2 -> com.google.android.material.datepicker.MaterialDatePicker$2:
    236:236:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    239:243:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$3 -> com.google.android.material.datepicker.MaterialDatePicker$3:
    326:326:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    329:335:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.MaterialDatePicker$4 -> com.google.android.material.datepicker.MaterialDatePicker$4:
    347:347:void <init>(com.google.android.material.datepicker.MaterialDatePicker) -> <init>
    350:353:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.MaterialDatePicker$Builder -> com.google.android.material.datepicker.MaterialDatePicker$Builder:
    508:510:void <init>(com.google.android.material.datepicker.DateSelector) -> <init>
    581:590:com.google.android.material.datepicker.MaterialDatePicker build() -> build
    515:515:com.google.android.material.datepicker.MaterialDatePicker$Builder customDatePicker(com.google.android.material.datepicker.DateSelector) -> customDatePicker
    524:524:com.google.android.material.datepicker.MaterialDatePicker$Builder datePicker() -> datePicker
    533:533:com.google.android.material.datepicker.MaterialDatePicker$Builder dateRangePicker() -> dateRangePicker
    552:553:com.google.android.material.datepicker.MaterialDatePicker$Builder setCalendarConstraints(com.google.android.material.datepicker.CalendarConstraints) -> setCalendarConstraints
    538:539:com.google.android.material.datepicker.MaterialDatePicker$Builder setSelection(java.lang.Object) -> setSelection
    545:546:com.google.android.material.datepicker.MaterialDatePicker$Builder setTheme(int) -> setTheme
    562:564:com.google.android.material.datepicker.MaterialDatePicker$Builder setTitleText(int) -> setTitleText
    573:575:com.google.android.material.datepicker.MaterialDatePicker$Builder setTitleText(java.lang.CharSequence) -> setTitleText
com.google.android.material.datepicker.MaterialStyledDatePickerDialog -> com.google.android.material.datepicker.MaterialStyledDatePickerDialog:
    52:52:void <clinit>() -> <clinit>
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    72:73:void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int) -> <init>
    83:102:void <init>(android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int) -> <init>
    106:111:void onCreate(android.os.Bundle) -> onCreate
com.google.android.material.datepicker.MaterialTextInputPicker -> com.google.android.material.datepicker.MaterialTextInputPicker:
    33:33:void <init>() -> <init>
    91:92:com.google.android.material.datepicker.DateSelector getDateSelector() -> getDateSelector
    44:49:com.google.android.material.datepicker.MaterialTextInputPicker newInstance(com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints) -> newInstance
    61:65:void onCreate(android.os.Bundle) -> onCreate
    73:73:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    54:57:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.google.android.material.datepicker.MaterialTextInputPicker$1 -> com.google.android.material.datepicker.MaterialTextInputPicker$1:
    78:78:void <init>(com.google.android.material.datepicker.MaterialTextInputPicker) -> <init>
    81:84:void onSelectionChanged(java.lang.Object) -> onSelectionChanged
com.google.android.material.datepicker.Month -> com.google.android.material.datepicker.Month:
    191:191:void <clinit>() -> <clinit>
    57:66:void <init>(java.util.Calendar) -> <init>
    29:29:int compareTo(java.lang.Object) -> compareTo
    132:132:int compareTo(com.google.android.material.datepicker.Month) -> compareTo
    74:76:com.google.android.material.datepicker.Month create(long) -> create
    89:92:com.google.android.material.datepicker.Month create(int,int) -> create
    105:109:int daysFromStartOfWeekToFirstOfMonth() -> daysFromStartOfWeekToFirstOfMonth
    210:210:int describeContents() -> describeContents
    114:121:boolean equals(java.lang.Object) -> equals
    166:168:long getDay(int) -> getDay
    185:185:java.lang.String getLongName() -> getLongName
    153:153:long getStableId() -> getStableId
    126:127:int hashCode() -> hashCode
    177:179:com.google.android.material.datepicker.Month monthsLater(int) -> monthsLater
    145:148:int monthsUntil(com.google.android.material.datepicker.Month) -> monthsUntil
    101:101:com.google.android.material.datepicker.Month today() -> today
    215:217:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.Month$1 -> com.google.android.material.datepicker.Month$1:
    192:192:void <init>() -> <init>
    192:192:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    196:198:com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel) -> createFromParcel
    192:192:java.lang.Object[] newArray(int) -> newArray
    204:204:com.google.android.material.datepicker.Month[] newArray(int) -> newArray
com.google.android.material.datepicker.MonthAdapter -> com.google.android.material.datepicker.MonthAdapter:
    41:41:void <clinit>() -> <clinit>
    52:56:void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints) -> <init>
    194:195:int dayToPosition(int) -> dayToPosition
    167:167:int firstPositionInMonth() -> firstPositionInMonth
    95:95:int getCount() -> getCount
    36:36:java.lang.Object getItem(int) -> getItem
    74:75:java.lang.Long getItem(int) -> getItem
    82:82:long getItemId(int) -> getItemId
    36:36:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    101:149:android.widget.TextView getView(int,android.view.View,android.view.ViewGroup) -> getView
    60:60:boolean hasStableIds() -> hasStableIds
    154:157:void initializeStyles(android.content.Context) -> initializeStyles
    208:208:boolean isFirstInRow(int) -> isFirstInRow
    216:216:boolean isLastInRow(int) -> isLastInRow
    178:178:int lastPositionInMonth() -> lastPositionInMonth
    189:189:int positionToDay(int) -> positionToDay
    200:200:boolean withinMonth(int) -> withinMonth
com.google.android.material.datepicker.MonthsPagerAdapter -> com.google.android.material.datepicker.MonthsPagerAdapter:
    49:55:void <init>(android.content.Context,com.google.android.material.datepicker.DateSelector,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener) -> <init>
    38:38:com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter) -> access$000
    136:136:int getItemCount() -> getItemCount
    131:131:long getItemId(int) -> getItemId
    146:146:com.google.android.material.datepicker.Month getPageMonth(int) -> getPageMonth
    141:141:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    150:150:int getPosition(com.google.android.material.datepicker.Month) -> getPosition
    38:38:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    106:127:void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int) -> onBindViewHolder
    38:38:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    91:100:com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.MonthsPagerAdapter$1 -> com.google.android.material.datepicker.MonthsPagerAdapter$1:
    119:119:void <init>(com.google.android.material.datepicker.MonthsPagerAdapter,com.google.android.material.datepicker.MaterialCalendarGridView) -> <init>
    122:125:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder -> com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder:
    78:85:void <init>(android.widget.LinearLayout,boolean) -> <init>
com.google.android.material.datepicker.PickerFragment -> com.google.android.material.datepicker.PickerFragment:
    21:23:void <init>() -> <init>
    30:30:boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> addOnSelectionChangedListener
    40:41:void clearOnSelectionChangedListeners() -> clearOnSelectionChangedListeners
    35:35:boolean removeOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener) -> removeOnSelectionChangedListener
com.google.android.material.datepicker.RangeDateSelector -> com.google.android.material.datepicker.RangeDateSelector:
    277:277:void <clinit>() -> <clinit>
    52:60:void <init>() -> <init>
    52:52:java.lang.Long access$002(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$002
    52:52:void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> access$100
    52:52:java.lang.Long access$202(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$202
    52:52:java.lang.Long access$302(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$302
    52:52:java.lang.Long access$402(com.google.android.material.datepicker.RangeDateSelector,java.lang.Long) -> access$402
    261:267:void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> clearInvalidRange
    298:298:int describeContents() -> describeContents
    125:134:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    165:165:int getDefaultTitleResId() -> getDefaultTitleResId
    113:120:java.util.Collection getSelectedDays() -> getSelectedDays
    101:102:java.util.Collection getSelectedRanges() -> getSelectedRanges
    51:51:java.lang.Object getSelection() -> getSelection
    95:95:androidx.core.util.Pair getSelection() -> getSelection
    141:157:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    76:76:boolean isSelectionComplete() -> isSelectionComplete
    240:240:boolean isValidRange(long,long) -> isValidRange
    175:236:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    64:72:void select(long) -> select
    270:272:void setInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout) -> setInvalidRange
    51:51:void setSelection(java.lang.Object) -> setSelection
    83:90:void setSelection(androidx.core.util.Pair) -> setSelection
    247:249:void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> updateIfValidTextProposal
    303:305:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.RangeDateSelector$1 -> com.google.android.material.datepicker.RangeDateSelector$1:
    206:206:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    216:218:void onInvalidDate() -> onInvalidDate
    210:212:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$2 -> com.google.android.material.datepicker.RangeDateSelector$2:
    222:222:void <init>(com.google.android.material.datepicker.RangeDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    229:231:void onInvalidDate() -> onInvalidDate
    224:226:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.RangeDateSelector$3 -> com.google.android.material.datepicker.RangeDateSelector$3:
    278:278:void <init>() -> <init>
    278:278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    282:286:com.google.android.material.datepicker.RangeDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    278:278:java.lang.Object[] newArray(int) -> newArray
    292:292:com.google.android.material.datepicker.RangeDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SingleDateSelector -> com.google.android.material.datepicker.SingleDateSelector:
    161:161:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    49:49:void access$000(com.google.android.material.datepicker.SingleDateSelector) -> access$000
    49:49:java.lang.Long access$102(com.google.android.material.datepicker.SingleDateSelector,java.lang.Long) -> access$102
    59:60:void clearSelection() -> clearSelection
    180:180:int describeContents() -> describeContents
    138:138:int getDefaultThemeResId(android.content.Context) -> getDefaultThemeResId
    155:155:int getDefaultTitleResId() -> getDefaultTitleResId
    81:85:java.util.Collection getSelectedDays() -> getSelectedDays
    75:75:java.util.Collection getSelectedRanges() -> getSelectedRanges
    48:48:java.lang.Object getSelection() -> getSelection
    91:91:java.lang.Long getSelection() -> getSelection
    145:150:java.lang.String getSelectionDisplayString(android.content.Context) -> getSelectionDisplayString
    69:69:boolean isSelectionComplete() -> isSelectionComplete
    101:133:android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> onCreateTextInputView
    55:56:void select(long) -> select
    48:48:void setSelection(java.lang.Object) -> setSelection
    64:65:void setSelection(java.lang.Long) -> setSelection
    185:186:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.datepicker.SingleDateSelector$1 -> com.google.android.material.datepicker.SingleDateSelector$1:
    118:118:void <init>(com.google.android.material.datepicker.SingleDateSelector,java.lang.String,java.text.DateFormat,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener) -> <init>
    122:128:void onValidDate(java.lang.Long) -> onValidDate
com.google.android.material.datepicker.SingleDateSelector$2 -> com.google.android.material.datepicker.SingleDateSelector$2:
    162:162:void <init>() -> <init>
    162:162:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    166:168:com.google.android.material.datepicker.SingleDateSelector createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:java.lang.Object[] newArray(int) -> newArray
    174:174:com.google.android.material.datepicker.SingleDateSelector[] newArray(int) -> newArray
com.google.android.material.datepicker.SmoothCalendarLayoutManager -> com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    34:35:void <init>(android.content.Context,int,boolean) -> <init>
    40:50:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1 -> com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    41:41:void <init>(com.google.android.material.datepicker.SmoothCalendarLayoutManager,android.content.Context) -> <init>
    45:45:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
com.google.android.material.datepicker.UtcDates -> com.google.android.material.datepicker.UtcDates:
    39:39:void <init>() -> <init>
    109:112:long canonicalYearMonthDay(long) -> canonicalYearMonthDay
    245:262:int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int) -> findCharactersInDateFormatPattern
    166:166:android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale) -> getAbbrMonthDayFormat
    171:171:android.icu.text.DateFormat getAbbrMonthWeekdayDayFormat(java.util.Locale) -> getAbbrMonthWeekdayDayFormat
    117:120:android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale) -> getAndroidFormat
    92:98:java.util.Calendar getDayCopy(java.util.Calendar) -> getDayCopy
    124:126:java.text.DateFormat getFormat(int,java.util.Locale) -> getFormat
    198:198:java.text.DateFormat getFullFormat() -> getFullFormat
    202:202:java.text.DateFormat getFullFormat(java.util.Locale) -> getFullFormat
    180:180:java.text.DateFormat getMediumFormat() -> getMediumFormat
    184:184:java.text.DateFormat getMediumFormat(java.util.Locale) -> getMediumFormat
    188:188:java.text.DateFormat getMediumNoYear() -> getMediumNoYear
    192:194:java.text.DateFormat getMediumNoYear(java.util.Locale) -> getMediumNoYear
    150:150:java.text.SimpleDateFormat getSimpleFormat(java.lang.String) -> getSimpleFormat
    154:156:java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale) -> getSimpleFormat
    130:137:java.text.SimpleDateFormat getTextInputFormat() -> getTextInputFormat
    141:146:java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat) -> getTextInputHint
    42:42:java.util.TimeZone getTimeZone() -> getTimeZone
    51:51:java.util.Calendar getTodayCalendar() -> getTodayCalendar
    47:47:android.icu.util.TimeZone getUtcAndroidTimeZone() -> getUtcAndroidTimeZone
    62:62:java.util.Calendar getUtcCalendar() -> getUtcCalendar
    74:80:java.util.Calendar getUtcCalendarOf(java.util.Calendar) -> getUtcCalendarOf
    161:161:android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale) -> getYearAbbrMonthDayFormat
    176:176:android.icu.text.DateFormat getYearAbbrMonthWeekdayDayFormat(java.util.Locale) -> getYearAbbrMonthWeekdayDayFormat
    206:206:java.text.SimpleDateFormat getYearMonthFormat() -> getYearMonthFormat
    210:210:java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale) -> getYearMonthFormat
    215:237:java.lang.String removeYearFromDateFormatPattern(java.lang.String) -> removeYearFromDateFormatPattern
com.google.android.material.datepicker.YearGridAdapter -> com.google.android.material.datepicker.YearGridAdapter:
    45:47:void <init>(com.google.android.material.datepicker.MaterialCalendar) -> <init>
    31:31:com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter) -> access$000
    84:84:android.view.View$OnClickListener createYearClickListener(int) -> createYearClickListener
    96:96:int getItemCount() -> getItemCount
    100:100:int getPositionForYear(int) -> getPositionForYear
    104:104:int getYearForPosition(int) -> getYearForPosition
    31:31:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    61:80:void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int) -> onBindViewHolder
    31:31:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    52:56:com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.google.android.material.datepicker.YearGridAdapter$1 -> com.google.android.material.datepicker.YearGridAdapter$1:
    84:84:void <init>(com.google.android.material.datepicker.YearGridAdapter,int) -> <init>
    87:90:void onClick(android.view.View) -> onClick
com.google.android.material.datepicker.YearGridAdapter$ViewHolder -> com.google.android.material.datepicker.YearGridAdapter$ViewHolder:
    40:42:void <init>(android.widget.TextView) -> <init>
com.google.android.material.dialog.InsetDialogOnTouchListener -> com.google.android.material.dialog.InsetDialogOnTouchListener:
    45:50:void <init>(android.app.Dialog,android.graphics.Rect) -> <init>
    54:74:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.dialog.MaterialAlertDialogBuilder -> com.google.android.material.dialog.MaterialAlertDialogBuilder:
    69:73:void <clinit>() -> <clinit>
    103:104:void <init>(android.content.Context) -> <init>
    109:137:void <init>(android.content.Context,int) -> <init>
    141:153:androidx.appcompat.app.AlertDialog create() -> create
    88:93:android.content.Context createMaterialAlertDialogThemedContext(android.content.Context) -> createMaterialAlertDialogThemedContext
    158:158:android.graphics.drawable.Drawable getBackground() -> getBackground
    79:84:int getMaterialAlertDialogThemeOverlay(android.content.Context) -> getMaterialAlertDialogThemeOverlay
    97:97:int getOverridingThemeResId(android.content.Context,int) -> getOverridingThemeResId
    67:67:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    355:355:com.google.android.material.dialog.MaterialAlertDialogBuilder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    163:164:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackground(android.graphics.drawable.Drawable) -> setBackground
    199:200:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetBottom(int) -> setBackgroundInsetBottom
    187:194:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetEnd(int) -> setBackgroundInsetEnd
    169:176:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetStart(int) -> setBackgroundInsetStart
    181:182:com.google.android.material.dialog.MaterialAlertDialogBuilder setBackgroundInsetTop(int) -> setBackgroundInsetTop
    67:67:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    317:317:com.google.android.material.dialog.MaterialAlertDialogBuilder setCancelable(boolean) -> setCancelable
    67:67:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    362:362:com.google.android.material.dialog.MaterialAlertDialogBuilder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    67:67:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    221:221:com.google.android.material.dialog.MaterialAlertDialogBuilder setCustomTitle(android.view.View) -> setCustomTitle
    67:67:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    239:239:com.google.android.material.dialog.MaterialAlertDialogBuilder setIcon(int) -> setIcon
    245:245:com.google.android.material.dialog.MaterialAlertDialogBuilder setIcon(android.graphics.drawable.Drawable) -> setIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    251:251:com.google.android.material.dialog.MaterialAlertDialogBuilder setIconAttribute(int) -> setIconAttribute
    67:67:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    342:342:com.google.android.material.dialog.MaterialAlertDialogBuilder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    348:348:com.google.android.material.dialog.MaterialAlertDialogBuilder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    67:67:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    227:227:com.google.android.material.dialog.MaterialAlertDialogBuilder setMessage(int) -> setMessage
    233:233:com.google.android.material.dialog.MaterialAlertDialogBuilder setMessage(java.lang.CharSequence) -> setMessage
    67:67:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    369:369:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    376:376:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    386:386:com.google.android.material.dialog.MaterialAlertDialogBuilder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    278:278:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    285:285:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    291:291:com.google.android.material.dialog.MaterialAlertDialogBuilder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    298:298:com.google.android.material.dialog.MaterialAlertDialogBuilder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    305:305:com.google.android.material.dialog.MaterialAlertDialogBuilder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    311:311:com.google.android.material.dialog.MaterialAlertDialogBuilder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    323:323:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    329:329:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    423:423:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    335:335:com.google.android.material.dialog.MaterialAlertDialogBuilder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    67:67:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    258:258:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    265:265:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    67:67:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    271:271:com.google.android.material.dialog.MaterialAlertDialogBuilder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    394:394:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    401:401:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    409:409:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    416:416:com.google.android.material.dialog.MaterialAlertDialogBuilder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    67:67:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    67:67:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    209:209:com.google.android.material.dialog.MaterialAlertDialogBuilder setTitle(int) -> setTitle
    215:215:com.google.android.material.dialog.MaterialAlertDialogBuilder setTitle(java.lang.CharSequence) -> setTitle
    67:67:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    67:67:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    429:429:com.google.android.material.dialog.MaterialAlertDialogBuilder setView(int) -> setView
    435:435:com.google.android.material.dialog.MaterialAlertDialogBuilder setView(android.view.View) -> setView
com.google.android.material.dialog.MaterialDialogs -> com.google.android.material.dialog.MaterialDialogs:
    43:43:void <init>() -> <init>
    59:105:android.graphics.Rect getDialogBackgroundInsets(android.content.Context,int,int) -> getDialogBackgroundInsets
    48:48:android.graphics.drawable.InsetDrawable insetDrawable(android.graphics.drawable.Drawable,android.graphics.Rect) -> insetDrawable
com.google.android.material.drawable.DrawableUtils -> com.google.android.material.drawable.DrawableUtils:
    46:46:void <init>() -> <init>
    66:87:android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence) -> parseDrawableXml
    54:55:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.drawable.Drawable,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
com.google.android.material.elevation.ElevationOverlayProvider -> com.google.android.material.elevation.ElevationOverlayProvider:
    42:49:void <init>(android.content.Context) -> <init>
    130:130:int calculateOverlayAlpha(float) -> calculateOverlayAlpha
    138:139:float calculateOverlayAlphaFraction(float) -> calculateOverlayAlphaFraction
    105:106:int compositeOverlay(int,float,android.view.View) -> compositeOverlay
    117:122:int compositeOverlay(int,float) -> compositeOverlay
    82:83:int compositeOverlayIfNeeded(int,float,android.view.View) -> compositeOverlayIfNeeded
    94:97:int compositeOverlayIfNeeded(int,float) -> compositeOverlayIfNeeded
    60:61:int compositeOverlayWithThemeSurfaceColorIfNeeded(float,android.view.View) -> compositeOverlayWithThemeSurfaceColorIfNeeded
    70:70:int compositeOverlayWithThemeSurfaceColorIfNeeded(float) -> compositeOverlayWithThemeSurfaceColorIfNeeded
    169:169:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    155:155:int getThemeElevationOverlayColor() -> getThemeElevationOverlayColor
    161:161:int getThemeSurfaceColor() -> getThemeSurfaceColor
    149:149:boolean isThemeElevationOverlayEnabled() -> isThemeElevationOverlayEnabled
    173:173:boolean isThemeSurfaceColor(int) -> isThemeSurfaceColor
com.google.android.material.expandable.ExpandableWidgetHelper -> com.google.android.material.expandable.ExpandableWidgetHelper:
    40:42:void <init>(com.google.android.material.expandable.ExpandableWidget) -> <init>
    91:95:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    87:87:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    56:56:boolean isExpanded() -> isExpanded
    71:77:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    62:66:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    46:51:boolean setExpanded(boolean) -> setExpanded
    81:82:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
com.google.android.material.floatingactionbutton.AnimatorTracker -> com.google.android.material.floatingactionbutton.AnimatorTracker:
    23:23:void <init>() -> <init>
    33:36:void cancelCurrent() -> cancelCurrent
    39:40:void clear() -> clear
    28:30:void onNextAnimationStart(android.animation.Animator) -> onNextAnimationStart
com.google.android.material.floatingactionbutton.BaseMotionStrategy -> com.google.android.material.floatingactionbutton.BaseMotionStrategy:
    44:48:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    73:74:void addAnimationListener(android.animation.Animator$AnimatorListener) -> addAnimationListener
    113:113:android.animation.AnimatorSet createAnimator() -> createAnimator
    118:139:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec) -> createAnimator
    57:68:com.google.android.material.animation.MotionSpec getCurrentMotionSpec() -> getCurrentMotionSpec
    84:84:java.util.List getListeners() -> getListeners
    90:90:com.google.android.material.animation.MotionSpec getMotionSpec() -> getMotionSpec
    108:109:void onAnimationCancel() -> onAnimationCancel
    102:103:void onAnimationEnd() -> onAnimationEnd
    96:97:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    78:79:void removeAnimationListener(android.animation.Animator$AnimatorListener) -> removeAnimationListener
    52:53:void setMotionSpec(com.google.android.material.animation.MotionSpec) -> setMotionSpec
com.google.android.material.floatingactionbutton.BorderDrawable -> com.google.android.material.floatingactionbutton.BorderDrawable:
    81:85:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    223:248:android.graphics.Shader createGradientShader() -> createGradientShader
    124:142:void draw(android.graphics.Canvas) -> draw
    172:173:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    255:255:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    193:193:int getOpacity() -> getOpacity
    147:159:void getOutline(android.graphics.Outline) -> getOutline
    163:167:boolean getPadding(android.graphics.Rect) -> getPadding
    177:177:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    203:203:boolean isStateful() -> isStateful
    198:199:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    208:218:boolean onStateChange(int[]) -> onStateChange
    187:189:void setAlpha(int) -> setAlpha
    97:103:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    88:94:void setBorderWidth(float) -> setBorderWidth
    107:109:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    116:120:void setGradientColors(int,int,int,int) -> setGradientColors
    181:183:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState -> com.google.android.material.floatingactionbutton.BorderDrawable$BorderState:
    262:262:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable) -> <init>
    262:262:void <init>(com.google.android.material.floatingactionbutton.BorderDrawable,com.google.android.material.floatingactionbutton.BorderDrawable$1) -> <init>
    272:272:int getChangingConfigurations() -> getChangingConfigurations
    267:267:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    72:616:void <clinit>() -> <clinit>
    133:134:void <init>(android.content.Context) -> <init>
    137:138:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    143:204:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$000
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$100
    70:70:void access$200(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> access$200
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$300
    70:70:com.google.android.material.floatingactionbutton.MotionStrategy access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$400
    70:70:android.graphics.Rect access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$500
    70:70:boolean access$600(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$600
    70:70:boolean access$602(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean) -> access$602
    70:70:int access$702(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> access$702
    70:70:boolean access$800(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$800
    70:70:boolean access$900(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> access$900
    322:323:void addOnExtendAnimationListener(android.animation.Animator$AnimatorListener) -> addOnExtendAnimationListener
    276:277:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    253:254:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    299:300:void addOnShrinkAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShrinkAnimationListener
    384:385:void extend() -> extend
    396:397:void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> extend
    219:219:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    637:637:int getCollapsedSize() -> getCollapsedSize
    475:475:com.google.android.material.animation.MotionSpec getExtendMotionSpec() -> getExtendMotionSpec
    451:451:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    427:427:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    501:501:com.google.android.material.animation.MotionSpec getShrinkMotionSpec() -> getShrinkMotionSpec
    341:342:void hide() -> hide
    352:353:void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> hide
    240:240:boolean isExtended() -> isExtended
    580:585:boolean isOrWillBeHidden() -> isOrWillBeHidden
    570:575:boolean isOrWillBeShown() -> isOrWillBeShown
    208:214:void onAttachedToWindow() -> onAttachedToWindow
    524:567:void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> performMotion
    332:333:void removeOnExtendAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnExtendAnimationListener
    286:287:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    263:264:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    309:310:void removeOnShrinkAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShrinkAnimationListener
    484:485:void setExtendMotionSpec(com.google.android.material.animation.MotionSpec) -> setExtendMotionSpec
    493:494:void setExtendMotionSpecResource(int) -> setExtendMotionSpecResource
    227:237:void setExtended(boolean) -> setExtended
    460:461:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    469:470:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    436:437:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    445:446:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    510:511:void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec) -> setShrinkMotionSpec
    519:520:void setShrinkMotionSpecResource(int) -> setShrinkMotionSpecResource
    590:590:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    361:362:void show() -> show
    372:373:void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> show
    409:410:void shrink() -> shrink
    421:422:void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> shrink
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1:
    165:165:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> <init>
    173:173:int getHeight() -> getHeight
    168:168:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2:
    180:180:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> <init>
    188:188:int getHeight() -> getHeight
    183:183:int getWidth() -> getWidth
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    538:538:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> <init>
    549:551:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    555:559:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    543:545:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    598:598:void <init>(java.lang.Class,java.lang.String) -> <init>
    598:598:java.lang.Object get(java.lang.Object) -> get
    608:608:java.lang.Float get(android.view.View) -> get
    598:598:void set(java.lang.Object,java.lang.Object) -> set
    601:603:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5 -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    617:617:void <init>(java.lang.Class,java.lang.String) -> <init>
    617:617:java.lang.Object get(java.lang.Object) -> get
    627:627:java.lang.Float get(android.view.View) -> get
    617:617:void set(java.lang.Object,java.lang.Object) -> set
    620:622:void set(android.view.View,java.lang.Float) -> set
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy:
    971:975:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size,boolean) -> <init>
    1015:1028:android.animation.AnimatorSet createAnimator() -> createAnimator
    1009:1009:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1040:1042:void onAnimationEnd() -> onAnimationEnd
    1033:1036:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    996:1005:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    979:992:void performNow() -> performNow
    1046:1046:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    659:662:void <init>() -> <init>
    668:681:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    868:876:void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> extendOrShow
    646:646:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    911:917:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    707:707:boolean isAutoHideEnabled() -> isAutoHideEnabled
    732:732:boolean isAutoShrinkEnabled() -> isAutoShrinkEnabled
    758:762:boolean isBottomSheet(android.view.View) -> isBottomSheet
    927:958:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> offsetIfNeeded
    737:742:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    646:646:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    747:754:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View) -> onDependentViewChanged
    646:646:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    884:901:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int) -> onLayoutChild
    695:696:void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    720:721:void setAutoShrinkEnabled(boolean) -> setAutoShrinkEnabled
    767:768:void setInternalAutoHideCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> setInternalAutoHideCallback
    772:773:void setInternalAutoShrinkCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> setInternalAutoShrinkCallback
    777:789:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shouldUpdateVisibility
    845:853:void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> shrinkOrHide
    796:815:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForAppBarLayout
    820:829:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy:
    1099:1101:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    1122:1122:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1135:1137:void onAnimationCancel() -> onAnimationCancel
    1141:1146:void onAnimationEnd() -> onAnimationEnd
    1127:1131:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    1110:1113:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1105:1106:void performNow() -> performNow
    1117:1117:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
    96:96:void <init>() -> <init>
    121:121:void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onExtended
    112:112:void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onHidden
    104:104:void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onShown
    129:129:void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton) -> onShrunken
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy -> com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy:
    1052:1054:void <init>(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,com.google.android.material.floatingactionbutton.AnimatorTracker) -> <init>
    1073:1073:int getDefaultMotionSpecResource() -> getDefaultMotionSpecResource
    1085:1087:void onAnimationEnd() -> onAnimationEnd
    1078:1081:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    1066:1069:void onChange(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback) -> onChange
    1058:1062:void performNow() -> performNow
    1091:1091:boolean shouldCancel() -> shouldCancel
com.google.android.material.floatingactionbutton.FloatingActionButton -> com.google.android.material.floatingactionbutton.FloatingActionButton:
    110:110:void <clinit>() -> <clinit>
    197:198:void <init>(android.content.Context) -> <init>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    207:270:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    102:102:int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton) -> access$000
    102:102:void access$101(com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    620:621:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    588:589:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1349:1350:void addTransformationCallback(com.google.android.material.animation.TransformationCallback) -> addTransformationCallback
    773:774:void clearCustomSize() -> clearCustomSize
    1442:1445:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl() -> createImpl
    816:818:void drawableStateChanged() -> drawableStateChanged
    355:355:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    381:381:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1201:1201:float getCompatElevation() -> getCompatElevation
    1236:1236:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1271:1271:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    894:894:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    866:871:boolean getContentRect(android.graphics.Rect) -> getContentRect
    763:763:int getCustomSize() -> getCustomSize
    644:644:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1325:1325:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1434:1437:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl() -> getImpl
    880:882:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    301:301:int getRippleColor() -> getRippleColor
    312:312:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    530:530:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    1301:1301:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    704:704:int getSize() -> getSize
    777:777:int getSizeDimension() -> getSizeDimension
    781:791:int getSizeDimension(int) -> getSizeDimension
    415:415:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    434:434:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    448:448:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    462:462:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    672:672:boolean getUseCompatPadding() -> getUseCompatPadding
    601:602:void hide() -> hide
    612:613:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> hide
    616:617:void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    634:634:boolean isExpanded() -> isExpanded
    728:728:boolean isOrWillBeHidden() -> isOrWillBeHidden
    732:732:boolean isOrWillBeShown() -> isOrWillBeShown
    822:824:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    885:889:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    466:485:void onApplySupportImageTint() -> onApplySupportImageTint
    804:806:void onAttachedToWindow() -> onAttachedToWindow
    810:812:void onDetachedFromWindow() -> onDetachedFromWindow
    274:289:void onMeasure(int,int) -> onMeasure
    844:854:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    828:837:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    925:931:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    624:625:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    592:593:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    1358:1359:void removeTransformationCallback(com.google.android.material.animation.TransformationCallback) -> removeTransformationCallback
    898:920:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    499:500:void setBackgroundColor(int) -> setBackgroundColor
    489:490:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    494:495:void setBackgroundResource(int) -> setBackgroundResource
    366:370:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    393:397:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1213:1214:void setCompatElevation(float) -> setCompatElevation
    1225:1226:void setCompatElevationResource(int) -> setCompatElevationResource
    1248:1249:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1260:1261:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1283:1284:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1295:1296:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    746:747:void setCustomSize(int) -> setCustomSize
    1189:1191:void setElevation(float) -> setElevation
    551:555:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    629:629:boolean setExpanded(boolean) -> setExpanded
    639:640:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1334:1335:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    1343:1344:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    511:518:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    505:507:void setImageResource(int) -> setImageResource
    326:327:void setRippleColor(int) -> setRippleColor
    340:344:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1412:1414:void setScaleX(float) -> setScaleX
    1418:1420:void setScaleY(float) -> setScaleY
    1430:1431:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    523:524:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    1310:1311:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    1319:1320:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    689:694:void setSize(int) -> setSize
    405:406:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    424:425:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    439:443:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    453:457:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    1394:1396:void setTranslationX(float) -> setTranslationX
    1400:1402:void setTranslationY(float) -> setTranslationY
    1406:1408:void setTranslationZ(float) -> setTranslationZ
    657:661:void setUseCompatPadding(boolean) -> setUseCompatPadding
    560:561:void setVisibility(int) -> setVisibility
    541:541:boolean shouldEnsureMinTouchTargetSize() -> shouldEnsureMinTouchTargetSize
    569:570:void show() -> show
    580:581:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> show
    584:585:void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    710:714:com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
com.google.android.material.floatingactionbutton.FloatingActionButton$1 -> com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    714:714:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    722:723:void onHidden() -> onHidden
    717:718:void onShown() -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    966:968:void <init>() -> <init>
    971:979:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    957:957:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1136:1142:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    1002:1002:boolean isAutoHideEnabled() -> isAutoHideEnabled
    1028:1032:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1152:1183:void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> offsetIfNeeded
    1007:1012:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    957:957:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1017:1024:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    957:957:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1109:1126:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    990:991:void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    1037:1038:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
    1042:1060:boolean shouldUpdateVisibility(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> shouldUpdateVisibility
    1067:1086:boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1091:1100:boolean updateFabVisibilityForBottomSheet(android.view.View,com.google.android.material.floatingactionbutton.FloatingActionButton) -> updateFabVisibilityForBottomSheet
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior -> com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    943:944:void <init>() -> <init>
    947:948:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    940:940:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    940:940:boolean isAutoHideEnabled() -> isAutoHideEnabled
    940:940:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    940:940:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View) -> onDependentViewChanged
    940:940:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int) -> onLayoutChild
    940:940:void setAutoHideEnabled(boolean) -> setAutoHideEnabled
    940:940:void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener) -> setInternalAutoHideListener
com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener -> com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener:
    113:113:void <init>() -> <init>
    127:127:void onHidden(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onHidden
    119:119:void onShown(com.google.android.material.floatingactionbutton.FloatingActionButton) -> onShown
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl -> com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    1450:1450:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton) -> <init>
    1454:1454:float getRadius() -> getRadius
    1473:1473:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1466:1469:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1459:1462:void setShadowPadding(int,int,int,int) -> setShadowPadding
com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper -> com.google.android.material.floatingactionbutton.FloatingActionButton$TransformationCallbackWrapper:
    1366:1368:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.animation.TransformationCallback) -> <init>
    1382:1382:boolean equals(java.lang.Object) -> equals
    1388:1388:int hashCode() -> hashCode
    1377:1378:void onScaleChanged() -> onScaleChanged
    1372:1373:void onTranslationChanged() -> onTranslationChanged
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    68:141:void <clinit>() -> <clinit>
    155:182:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    66:66:int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int) -> access$002
    66:66:android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator) -> access$102
    66:66:float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float) -> access$202
    401:405:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    385:389:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    623:627:void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> addTransformationCallback
    293:307:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    563:600:android.animation.AnimatorSet createAnimator(com.google.android.material.animation.MotionSpec,float,float,float) -> createAnimator
    769:775:android.animation.ValueAnimator createElevationAnimator(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    743:744:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    656:656:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    552:557:com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    543:548:com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    246:246:float getElevation() -> getElevation
    352:352:boolean getEnsureMinTouchTargetSize() -> getEnsureMinTouchTargetSize
    340:340:com.google.android.material.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    250:250:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    728:739:android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener() -> getOrCreatePreDrawListener
    671:679:void getPadding(android.graphics.Rect) -> getPadding
    254:254:float getPressedTranslationZ() -> getPressedTranslationZ
    326:326:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance() -> getShapeAppearance
    331:331:com.google.android.material.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    417:477:void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    191:210:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    758:763:boolean isOrWillBeHidden() -> isOrWillBeHidden
    748:753:boolean isOrWillBeShown() -> isOrWillBeShown
    381:382:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    697:704:void onAttachedToWindow() -> onAttachedToWindow
    661:661:void onCompatShadowChanged() -> onCompatShadowChanged
    707:712:void onDetachedFromWindow() -> onDetachedFromWindow
    377:378:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    366:368:void onElevationsChanged(float,float,float) -> onElevationsChanged
    682:690:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    719:724:void onPreDraw() -> onPreDraw
    647:652:void onScaleChanged() -> onScaleChanged
    639:644:void onTranslationChanged() -> onTranslationChanged
    408:414:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    392:398:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    630:636:void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback) -> removeTransformationCallback
    715:715:boolean requirePreDrawListener() -> requirePreDrawListener
    213:219:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    222:225:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    239:243:void setElevation(float) -> setElevation
    356:357:void setEnsureMinTouchTargetSize(boolean) -> setEnsureMinTouchTargetSize
    344:345:void setHideMotionSpec(com.google.android.material.animation.MotionSpec) -> setHideMotionSpec
    258:262:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    285:290:void setImageMatrixScale(float) -> setImageMatrixScale
    272:276:void setMaxImageSize(int) -> setMaxImageSize
    228:229:void setMinTouchTargetSize(int) -> setMinTouchTargetSize
    265:269:void setPressedTranslationZ(float) -> setPressedTranslationZ
    232:236:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    360:362:void setShadowPaddingEnabled(boolean) -> setShadowPaddingEnabled
    310:322:void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearance
    335:336:void setShowMotionSpec(com.google.android.material.animation.MotionSpec) -> setShowMotionSpec
    693:693:boolean shouldAddPadding() -> shouldAddPadding
    846:846:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    348:348:boolean shouldExpandBoundsForA11y() -> shouldExpandBoundsForA11y
    480:540:void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    850:868:void updateFromViewRotation() -> updateFromViewRotation
    281:282:void updateImageMatrixScale() -> updateImageMatrixScale
    664:668:void updatePadding() -> updatePadding
    371:374:void updateShapeElevation(float) -> updateShapeElevation
    608:620:void workAroundOreoBug(android.animation.ObjectAnimator) -> workAroundOreoBug
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1:
    434:434:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    448:449:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    453:462:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    439:444:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$2:
    505:505:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,boolean,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    516:522:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    508:512:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    584:584:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    584:584:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    590:591:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    612:613:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    612:612:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    616:617:java.lang.Float evaluate(float,java.lang.Float,java.lang.Float) -> evaluate
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5 -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$5:
    730:730:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    733:734:boolean onPreDraw() -> onPreDraw
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    837:837:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    841:841:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    819:819:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    823:823:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    828:828:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    832:832:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ResetElevationAnimation:
    810:810:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    814:814:float getTargetShadowSize() -> getTargetShadowSize
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl -> com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl) -> <init>
    778:778:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$1) -> <init>
    801:803:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    787:797:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    53:54:void <init>(com.google.android.material.floatingactionbutton.FloatingActionButton,com.google.android.material.shadow.ShadowViewDelegate) -> <init>
    216:225:com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    156:162:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    231:232:com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable() -> createShapeDrawable
    167:167:float getElevation() -> getElevation
    237:245:void getPadding(android.graphics.Rect) -> getPadding
    63:85:void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> initializeBackgroundDrawable
    202:202:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    172:173:void onCompatShadowChanged() -> onCompatShadowChanged
    182:197:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    103:152:void onElevationsChanged(float,float,float) -> onElevationsChanged
    211:211:boolean requirePreDrawListener() -> requirePreDrawListener
    89:95:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    177:177:boolean shouldAddPadding() -> shouldAddPadding
    207:207:void updateFromViewRotation() -> updateFromViewRotation
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable -> com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable:
    256:257:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    261:261:boolean isStateful() -> isStateful
com.google.android.material.internal.BaselineLayout -> com.google.android.material.internal.BaselineLayout:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
com.google.android.material.internal.CheckableImageButton -> com.google.android.material.internal.CheckableImageButton:
    41:41:void <clinit>() -> <clinit>
    48:49:void <init>(android.content.Context) -> <init>
    52:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:75:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    144:144:boolean isCheckable() -> isCheckable
    88:88:boolean isChecked() -> isChecked
    154:154:boolean isPressable() -> isPressable
    105:110:int[] onCreateDrawableState(int) -> onCreateDrawableState
    125:132:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    117:120:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    136:140:void setCheckable(boolean) -> setCheckable
    79:84:void setChecked(boolean) -> setChecked
    149:150:void setPressable(boolean) -> setPressable
    98:101:void setPressed(boolean) -> setPressed
    93:94:void toggle() -> toggle
com.google.android.material.internal.CheckableImageButton$1 -> com.google.android.material.internal.CheckableImageButton$1:
    60:60:void <init>(com.google.android.material.internal.CheckableImageButton) -> <init>
    63:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:73:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.CheckableImageButton$SavedState -> com.google.android.material.internal.CheckableImageButton$SavedState:
    180:180:void <clinit>() -> <clinit>
    162:163:void <init>(android.os.Parcelable) -> <init>
    166:168:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    177:178:void readFromParcel(android.os.Parcel) -> readFromParcel
    172:174:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.CheckableImageButton$SavedState$1 -> com.google.android.material.internal.CheckableImageButton$SavedState$1:
    181:181:void <init>() -> <init>
    181:181:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    185:185:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    191:191:com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    181:181:java.lang.Object[] newArray(int) -> newArray
    197:197:com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int) -> newArray
com.google.android.material.internal.CollapsingTextHelper -> com.google.android.material.internal.CollapsingTextHelper:
    58:69:void <clinit>() -> <clinit>
    131:140:void <init>(android.view.View) -> <init>
    805:810:int blendColors(int,int,float) -> blendColors
    494:568:void calculateBaseOffsets() -> calculateBaseOffsets
    215:219:float calculateCollapsedTextWidth() -> calculateCollapsedTextWidth
    442:443:void calculateCurrentOffsets() -> calculateCurrentOffsets
    625:627:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    446:470:void calculateOffsets(float) -> calculateOffsets
    649:718:void calculateUsingTextSize(float) -> calculateUsingTextSize
    776:780:void clearTexture() -> clearTexture
    581:622:void draw(android.graphics.Canvas) -> draw
    721:722:void ensureExpandedTexture() -> ensureExpandedTexture
    205:212:void getCollapsedTextActualBounds(android.graphics.RectF) -> getCollapsedTextActualBounds
    795:795:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    271:271:int getCollapsedTextGravity() -> getCollapsedTextGravity
    229:231:float getCollapsedTextHeight() -> getCollapsedTextHeight
    434:434:float getCollapsedTextSize() -> getCollapsedTextSize
    390:390:android.graphics.Typeface getCollapsedTypeface() -> getCollapsedTypeface
    479:479:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    484:490:int getCurrentColor(android.content.res.ColorStateList) -> getCurrentColor
    474:474:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    791:791:android.content.res.ColorStateList getExpandedTextColor() -> getExpandedTextColor
    260:260:int getExpandedTextGravity() -> getExpandedTextGravity
    223:225:float getExpandedTextHeight() -> getExpandedTextHeight
    438:438:float getExpandedTextSize() -> getExpandedTextSize
    394:394:android.graphics.Typeface getExpandedTypeface() -> getExpandedTypeface
    430:430:float getExpansionFraction() -> getExpansionFraction
    772:772:java.lang.CharSequence getText() -> getText
    240:242:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    235:237:void getTextPaintExpanded(android.text.TextPaint) -> getTextPaintExpanded
    571:578:void interpolateBounds(float) -> interpolateBounds
    787:787:boolean isClose(float,float) -> isClose
    425:425:boolean isStateful() -> isStateful
    815:818:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    245:250:void onBoundsChanged() -> onBoundsChanged
    748:754:void recalculate() -> recalculate
    822:822:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    193:198:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    201:202:void setCollapsedBounds(android.graphics.Rect) -> setCollapsedBounds
    275:306:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    167:171:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    264:268:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    160:164:void setCollapsedTextSize(float) -> setCollapsedTextSize
    342:345:void setCollapsedTypeface(android.graphics.Typeface) -> setCollapsedTypeface
    365:372:boolean setCollapsedTypefaceInternal(android.graphics.Typeface) -> setCollapsedTypefaceInternal
    181:186:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    189:190:void setExpandedBounds(android.graphics.Rect) -> setExpandedBounds
    309:339:void setExpandedTextAppearance(int) -> setExpandedTextAppearance
    174:178:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    253:257:void setExpandedTextGravity(int) -> setExpandedTextGravity
    153:157:void setExpandedTextSize(float) -> setExpandedTextSize
    348:351:void setExpandedTypeface(android.graphics.Typeface) -> setExpandedTypeface
    379:386:boolean setExpandedTypefaceInternal(android.graphics.Typeface) -> setExpandedTypefaceInternal
    405:411:void setExpansionFraction(float) -> setExpansionFraction
    634:645:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    148:150:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    414:421:boolean setState(int[]) -> setState
    762:768:void setText(java.lang.CharSequence) -> setText
    143:145:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    354:359:void setTypefaces(android.graphics.Typeface) -> setTypefaces
com.google.android.material.internal.CollapsingTextHelper$1 -> com.google.android.material.internal.CollapsingTextHelper$1:
    296:296:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    299:300:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.CollapsingTextHelper$2 -> com.google.android.material.internal.CollapsingTextHelper$2:
    329:329:void <init>(com.google.android.material.internal.CollapsingTextHelper) -> <init>
    332:333:void apply(android.graphics.Typeface) -> apply
com.google.android.material.internal.ContextUtils -> com.google.android.material.internal.ContextUtils:
    33:33:void <init>() -> <init>
    41:47:android.app.Activity getActivity(android.content.Context) -> getActivity
com.google.android.material.internal.DescendantOffsetUtils -> com.google.android.material.internal.DescendantOffsetUtils:
    37:38:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    83:85:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    89:101:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    50:72:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.google.android.material.internal.FlowLayout -> com.google.android.material.internal.FlowLayout:
    49:50:void <init>(android.content.Context) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    65:68:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    87:87:int getItemSpacing() -> getItemSpacing
    79:79:int getLineSpacing() -> getLineSpacing
    177:181:int getMeasuredDimension(int,int,int) -> getMeasuredDimension
    96:96:boolean isSingleLine() -> isSingleLine
    71:76:void loadFromAttributes(android.content.Context,android.util.AttributeSet) -> loadFromAttributes
    189:239:void onLayout(boolean,int,int,int,int) -> onLayout
    106:174:void onMeasure(int,int) -> onMeasure
    91:92:void setItemSpacing(int) -> setItemSpacing
    83:84:void setLineSpacing(int) -> setLineSpacing
    101:102:void setSingleLine(boolean) -> setSingleLine
com.google.android.material.internal.ForegroundLinearLayout -> com.google.android.material.internal.ForegroundLinearLayout:
    54:55:void <init>(android.content.Context) -> <init>
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    205:236:void draw(android.graphics.Canvas) -> draw
    242:246:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    138:142:void drawableStateChanged() -> drawableStateChanged
    188:188:android.graphics.drawable.Drawable getForeground() -> getForeground
    91:91:int getForegroundGravity() -> getForegroundGravity
    130:134:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    193:195:void onLayout(boolean,int,int,int,int) -> onLayout
    199:201:void onSizeChanged(int,int,int,int) -> onSizeChanged
    153:177:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    102:120:void setForegroundGravity(int) -> setForegroundGravity
    124:124:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.google.android.material.internal.ManufacturerUtils -> com.google.android.material.internal.ManufacturerUtils:
    28:28:void <init>() -> <init>
    32:32:boolean isSamsungDevice() -> isSamsungDevice
com.google.android.material.internal.NavigationMenu -> com.google.android.material.internal.NavigationMenu:
    39:40:void <init>(android.content.Context) -> <init>
    45:48:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
com.google.android.material.internal.NavigationMenuItemView -> com.google.android.material.internal.NavigationMenuItemView:
    55:55:void <clinit>() -> <clinit>
    87:88:void <init>(android.content.Context) -> <init>
    91:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:103:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    133:149:void adjustAppearance() -> adjustAppearance
    172:181:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    186:186:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    107:124:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    252:256:int[] onCreateDrawableState(int) -> onCreateDrawableState
    242:242:boolean prefersCondensedTitle() -> prefersCondensedTitle
    152:156:void recycle() -> recycle
    159:168:void setActionView(android.view.View) -> setActionView
    196:202:void setCheckable(boolean) -> setCheckable
    206:208:void setChecked(boolean) -> setChecked
    281:282:void setHorizontalPadding(int) -> setHorizontalPadding
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    285:286:void setIconPadding(int) -> setIconPadding
    237:238:void setIconSize(int) -> setIconSize
    260:266:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    289:290:void setMaxLines(int) -> setMaxLines
    277:278:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    211:211:void setShortcut(boolean,char) -> setShortcut
    269:270:void setTextAppearance(int) -> setTextAppearance
    273:274:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    191:192:void setTitle(java.lang.CharSequence) -> setTitle
    127:127:boolean shouldExpandActionArea() -> shouldExpandActionArea
    247:247:boolean showsIcon() -> showsIcon
com.google.android.material.internal.NavigationMenuItemView$1 -> com.google.android.material.internal.NavigationMenuItemView$1:
    76:76:void <init>(com.google.android.material.internal.NavigationMenuItemView) -> <init>
    81:83:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter -> com.google.android.material.internal.NavigationMenuPresenter:
    57:408:void <init>() -> <init>
    57:57:int access$000(com.google.android.material.internal.NavigationMenuPresenter) -> access$000
    228:231:void addHeaderView(android.view.View) -> addHeaderView
    161:161:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    349:359:void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    156:156:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    151:151:boolean flagActionItems() -> flagActionItems
    218:218:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    241:241:int getHeaderCount() -> getHeaderCount
    245:245:android.view.View getHeaderView(int) -> getHeaderView
    166:166:int getId() -> getId
    276:276:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    285:285:int getItemHorizontalPadding() -> getItemHorizontalPadding
    294:294:int getItemIconPadding() -> getItemIconPadding
    308:308:int getItemMaxLines() -> getItemMaxLines
    260:260:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    250:250:android.content.res.ColorStateList getItemTintList() -> getItemTintList
    106:122:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    222:224:android.view.View inflateHeaderView(int) -> inflateHeaderView
    97:102:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    335:335:boolean isBehindStatusBar() -> isBehindStatusBar
    144:147:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    195:210:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    176:190:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    139:139:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    234:238:void removeHeaderView(android.view.View) -> removeHeaderView
    327:331:void setBehindStatusBar(boolean) -> setBehindStatusBar
    134:135:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    213:214:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    170:171:void setId(int) -> setId
    280:282:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    289:291:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    298:300:void setItemIconPadding(int) -> setItemIconPadding
    312:317:void setItemIconSize(int) -> setItemIconSize
    254:256:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    303:305:void setItemMaxLines(int) -> setItemMaxLines
    269:272:void setItemTextAppearance(int) -> setItemTextAppearance
    264:266:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    362:366:void setOverScrollMode(int) -> setOverScrollMode
    320:323:void setUpdateSuspended(boolean) -> setUpdateSuspended
    127:130:void updateMenuView(boolean) -> updateMenuView
    339:346:void updateTopPadding() -> updateTopPadding
com.google.android.material.internal.NavigationMenuPresenter$1 -> com.google.android.material.internal.NavigationMenuPresenter$1:
    409:409:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    413:426:void onClick(android.view.View) -> onClick
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder:
    401:402:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter:
    443:445:void <init>(com.google.android.material.internal.NavigationMenuPresenter) -> <init>
    624:628:void appendTransparentIconIfMissing(int,int) -> appendTransparentIconIfMissing
    647:666:android.os.Bundle createInstanceState() -> createInstanceState
    642:642:androidx.appcompat.view.menu.MenuItemImpl getCheckedItem() -> getCheckedItem
    454:454:int getItemCount() -> getItemCount
    449:449:long getItemId(int) -> getItemId
    459:472:int getItemViewType(int) -> getItemViewType
    718:724:int getRowCount() -> getRowCount
    429:429:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    493:536:void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int) -> onBindViewHolder
    429:429:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    478:480:com.google.android.material.internal.NavigationMenuPresenter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    429:429:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    540:543:void onViewRecycled(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder) -> onViewRecycled
    555:621:void prepareMenuItems() -> prepareMenuItems
    670:710:void restoreInstanceState(android.os.Bundle) -> restoreInstanceState
    631:632:void setCheckedItem(androidx.appcompat.view.menu.MenuItemImpl) -> setCheckedItem
    713:714:void setUpdateSuspended(boolean) -> setUpdateSuspended
    546:548:void update() -> update
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem:
    770:770:void <init>() -> <init>
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem:
    754:757:void <init>(int,int) -> <init>
    764:764:int getPaddingBottom() -> getPaddingBottom
    760:760:int getPaddingTop() -> getPaddingTop
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem:
    738:740:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    743:743:androidx.appcompat.view.menu.MenuItemImpl getMenuItem() -> getMenuItem
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate -> com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate:
    776:778:void <init>(com.google.android.material.internal.NavigationMenuPresenter,androidx.recyclerview.widget.RecyclerView) -> <init>
    783:785:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder:
    379:381:void <init>(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder:
    394:395:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder:
    387:388:void <init>(android.view.LayoutInflater,android.view.ViewGroup) -> <init>
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder -> com.google.android.material.internal.NavigationMenuPresenter$ViewHolder:
    371:372:void <init>(android.view.View) -> <init>
com.google.android.material.internal.NavigationMenuView -> com.google.android.material.internal.NavigationMenuView:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:int getWindowAnimations() -> getWindowAnimations
    47:47:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
com.google.android.material.internal.NavigationSubMenu -> com.google.android.material.internal.NavigationSubMenu:
    37:38:void <init>(android.content.Context,com.google.android.material.internal.NavigationMenu,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    42:44:void onItemsChanged(boolean) -> onItemsChanged
com.google.android.material.internal.ParcelableSparseArray -> com.google.android.material.internal.ParcelableSparseArray:
    66:66:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    37:45:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    49:49:int describeContents() -> describeContents
    54:64:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseArray$1 -> com.google.android.material.internal.ParcelableSparseArray$1:
    67:67:void <init>() -> <init>
    67:67:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    71:71:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    77:77:com.google.android.material.internal.ParcelableSparseArray createFromParcel(android.os.Parcel) -> createFromParcel
    67:67:java.lang.Object[] newArray(int) -> newArray
    83:83:com.google.android.material.internal.ParcelableSparseArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseBooleanArray -> com.google.android.material.internal.ParcelableSparseBooleanArray:
    70:70:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    40:41:void <init>(int) -> <init>
    44:48:void <init>(android.util.SparseBooleanArray) -> <init>
    52:52:int describeContents() -> describeContents
    57:68:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseBooleanArray$1 -> com.google.android.material.internal.ParcelableSparseBooleanArray$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:88:com.google.android.material.internal.ParcelableSparseBooleanArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseBooleanArray[] newArray(int) -> newArray
com.google.android.material.internal.ParcelableSparseIntArray -> com.google.android.material.internal.ParcelableSparseIntArray:
    70:70:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    40:41:void <init>(int) -> <init>
    44:48:void <init>(android.util.SparseIntArray) -> <init>
    52:52:int describeContents() -> describeContents
    57:68:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.internal.ParcelableSparseIntArray$1 -> com.google.android.material.internal.ParcelableSparseIntArray$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    75:88:com.google.android.material.internal.ParcelableSparseIntArray createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    94:94:com.google.android.material.internal.ParcelableSparseIntArray[] newArray(int) -> newArray
com.google.android.material.internal.ScrimInsetsFrameLayout -> com.google.android.material.internal.ScrimInsetsFrameLayout:
    50:51:void <init>(android.content.Context) -> <init>
    54:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:92:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:143:void draw(android.graphics.Canvas) -> draw
    147:151:void onAttachedToWindow() -> onAttachedToWindow
    155:159:void onDetachedFromWindow() -> onDetachedFromWindow
    161:161:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    104:105:void setDrawBottomInsetForeground(boolean) -> setDrawBottomInsetForeground
    100:101:void setDrawTopInsetForeground(boolean) -> setDrawTopInsetForeground
    96:97:void setScrimInsetForeground(android.graphics.drawable.Drawable) -> setScrimInsetForeground
com.google.android.material.internal.ScrimInsetsFrameLayout$1 -> com.google.android.material.internal.ScrimInsetsFrameLayout$1:
    74:74:void <init>(com.google.android.material.internal.ScrimInsetsFrameLayout) -> <init>
    78:89:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.StateListAnimator -> com.google.android.material.internal.StateListAnimator:
    37:44:void <init>() -> <init>
    62:65:void addState(int[],android.animation.ValueAnimator) -> addState
    98:102:void cancel() -> cancel
    110:114:void jumpToCurrentState() -> jumpToCurrentState
    69:90:void setState(int[]) -> setState
    93:95:void start(com.google.android.material.internal.StateListAnimator$Tuple) -> start
com.google.android.material.internal.StateListAnimator$1 -> com.google.android.material.internal.StateListAnimator$1:
    45:45:void <init>(com.google.android.material.internal.StateListAnimator) -> <init>
    48:51:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.internal.StateListAnimator$Tuple -> com.google.android.material.internal.StateListAnimator$Tuple:
    120:123:void <init>(int[],android.animation.ValueAnimator) -> <init>
com.google.android.material.internal.TextDrawableHelper -> com.google.android.material.internal.TextDrawableHelper:
    76:78:void <init>(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> <init>
    39:39:boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean) -> access$002
    39:39:java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper) -> access$100
    110:113:float calculateTextWidth(java.lang.CharSequence) -> calculateTextWidth
    123:123:com.google.android.material.resources.TextAppearance getTextAppearance() -> getTextAppearance
    87:87:android.text.TextPaint getTextPaint() -> getTextPaint
    100:106:float getTextWidth(java.lang.String) -> getTextWidth
    95:95:boolean isTextWidthDirty() -> isTextWidthDirty
    82:83:void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate) -> setDelegate
    134:153:void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context) -> setTextAppearance
    91:92:void setTextWidthDirty(boolean) -> setTextWidthDirty
    156:157:void updateTextPaintDrawState(android.content.Context) -> updateTextPaintDrawState
com.google.android.material.internal.TextDrawableHelper$1 -> com.google.android.material.internal.TextDrawableHelper$1:
    44:44:void <init>(com.google.android.material.internal.TextDrawableHelper) -> <init>
    59:65:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    47:55:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.internal.TextScale -> com.google.android.material.internal.TextScale:
    34:34:void <init>() -> <init>
    44:45:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    39:40:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    48:52:void captureValues(androidx.transition.TransitionValues) -> captureValues
    59:63:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
com.google.android.material.internal.TextScale$1 -> com.google.android.material.internal.TextScale$1:
    79:79:void <init>(com.google.android.material.internal.TextScale,android.widget.TextView) -> <init>
    82:85:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.internal.ThemeEnforcement -> com.google.android.material.internal.ThemeEnforcement:
    44:52:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    218:219:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    134:154:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    222:223:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    163:192:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    247:248:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    268:284:android.content.Context createThemedContext(android.content.Context,android.util.AttributeSet,int,int) -> createThemedContext
    226:226:boolean isAppCompatTheme(android.content.Context) -> isAppCompatTheme
    205:214:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    230:230:boolean isMaterialTheme(android.content.Context) -> isMaterialTheme
    234:242:boolean isTheme(android.content.Context,int[]) -> isTheme
    294:301:int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet) -> obtainAndroidThemeOverlayId
    315:320:int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int) -> obtainMaterialThemeOverlayId
    81:87:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    120:126:androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
com.google.android.material.internal.ViewUtils -> com.google.android.material.internal.ViewUtils:
    44:44:void <init>() -> <init>
    140:158:void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener) -> doOnApplyWindowInsets
    70:71:float dpToPx(android.content.Context,int) -> dpToPx
    186:192:float getParentAbsoluteElevation(android.view.View) -> getParentAbsoluteElevation
    66:66:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    47:49:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
    162:179:void requestApplyInsetsWhenAttached(android.view.View) -> requestApplyInsetsWhenAttached
    75:86:void requestFocusAndShowKeyboard(android.view.View) -> requestFocusAndShowKeyboard
com.google.android.material.internal.ViewUtils$1 -> com.google.android.material.internal.ViewUtils$1:
    77:77:void <init>(android.view.View) -> <init>
    80:84:void run() -> run
com.google.android.material.internal.ViewUtils$2 -> com.google.android.material.internal.ViewUtils$2:
    150:150:void <init>(com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener,com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    153:153:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.internal.ViewUtils$3 -> com.google.android.material.internal.ViewUtils$3:
    168:168:void <init>() -> <init>
    171:173:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    176:176:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.internal.ViewUtils$RelativePadding -> com.google.android.material.internal.ViewUtils$RelativePadding:
    113:118:void <init>(int,int,int,int) -> <init>
    120:125:void <init>(com.google.android.material.internal.ViewUtils$RelativePadding) -> <init>
    129:130:void applyToView(android.view.View) -> applyToView
com.google.android.material.internal.VisibilityAwareImageButton -> com.google.android.material.internal.VisibilityAwareImageButton:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:64:int getUserSetVisibility() -> getUserSetVisibility
    57:61:void internalSetVisibility(int,boolean) -> internalSetVisibility
    53:54:void setVisibility(int) -> setVisibility
com.google.android.material.math.MathUtils -> com.google.android.material.math.MathUtils:
    24:24:void <init>() -> <init>
    28:30:float dist(float,float,float,float) -> dist
    65:65:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
    49:49:boolean geq(float,float,float) -> geq
    37:37:float lerp(float,float,float) -> lerp
    74:74:float max(float,float,float,float) -> max
com.google.android.material.navigation.NavigationView -> com.google.android.material.navigation.NavigationView:
    98:99:void <clinit>() -> <clinit>
    115:116:void <init>(android.content.Context) -> <init>
    119:120:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    123:240:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    96:96:int[] access$000(com.google.android.material.navigation.NavigationView) -> access$000
    96:96:com.google.android.material.internal.NavigationMenuPresenter access$100(com.google.android.material.navigation.NavigationView) -> access$100
    389:390:void addHeaderView(android.view.View) -> addHeaderView
    636:648:android.content.res.ColorStateList createDefaultColorStateList(int) -> createDefaultColorStateList
    278:294:android.graphics.drawable.Drawable createDefaultItemBackground(androidx.appcompat.widget.TintTypedArray) -> createDefaultItemBackground
    587:587:android.view.MenuItem getCheckedItem() -> getCheckedItem
    407:407:int getHeaderCount() -> getHeaderCount
    418:418:android.view.View getHeaderView(int) -> getHeaderView
    471:471:android.graphics.drawable.Drawable getItemBackground() -> getItemBackground
    503:503:int getItemHorizontalPadding() -> getItemHorizontalPadding
    534:534:int getItemIconPadding() -> getItemIconPadding
    429:429:android.content.res.ColorStateList getItemIconTintList() -> getItemIconTintList
    624:624:int getItemMaxLines() -> getItemMaxLines
    450:450:android.content.res.ColorStateList getItemTextColor() -> getItemTextColor
    370:370:android.view.Menu getMenu() -> getMenu
    628:631:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    251:251:boolean hasShapeAppearance(androidx.appcompat.widget.TintTypedArray) -> hasShapeAppearance
    380:380:android.view.View inflateHeaderView(int) -> inflateHeaderView
    361:365:void inflateMenu(int) -> inflateMenu
    257:260:void onAttachedToWindow() -> onAttachedToWindow
    657:663:void onDetachedFromWindow() -> onDetachedFromWindow
    350:351:void onInsetsChanged(androidx.core.view.WindowInsetsCompat) -> onInsetsChanged
    329:344:void onMeasure(int,int) -> onMeasure
    308:315:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    299:303:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    398:399:void removeHeaderView(android.view.View) -> removeHeaderView
    563:567:void setCheckedItem(int) -> setCheckedItem
    575:579:void setCheckedItem(android.view.MenuItem) -> setCheckedItem
    264:268:void setElevation(float) -> setElevation
    492:493:void setItemBackground(android.graphics.drawable.Drawable) -> setItemBackground
    482:483:void setItemBackgroundResource(int) -> setItemBackgroundResource
    513:514:void setItemHorizontalPadding(int) -> setItemHorizontalPadding
    523:524:void setItemHorizontalPaddingResource(int) -> setItemHorizontalPaddingResource
    544:545:void setItemIconPadding(int) -> setItemIconPadding
    554:555:void setItemIconPaddingResource(int) -> setItemIconPaddingResource
    606:607:void setItemIconSize(int) -> setItemIconSize
    439:440:void setItemIconTintList(android.content.res.ColorStateList) -> setItemIconTintList
    615:616:void setItemMaxLines(int) -> setItemMaxLines
    596:597:void setItemTextAppearance(int) -> setItemTextAppearance
    460:461:void setItemTextColor(android.content.res.ColorStateList) -> setItemTextColor
    324:325:void setNavigationItemSelectedListener(com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener) -> setNavigationItemSelectedListener
    244:248:void setOverScrollMode(int) -> setOverScrollMode
    671:695:void setupInsetScrimsListener() -> setupInsetScrimsListener
com.google.android.material.navigation.NavigationView$1 -> com.google.android.material.navigation.NavigationView$1:
    207:207:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    210:210:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    214:214:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
com.google.android.material.navigation.NavigationView$2 -> com.google.android.material.navigation.NavigationView$2:
    671:671:void <init>(com.google.android.material.navigation.NavigationView) -> <init>
    674:689:void onGlobalLayout() -> onGlobalLayout
com.google.android.material.navigation.NavigationView$SavedState -> com.google.android.material.navigation.NavigationView$SavedState:
    730:730:void <clinit>() -> <clinit>
    716:718:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    721:722:void <init>(android.os.Parcelable) -> <init>
    726:728:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.navigation.NavigationView$SavedState$1 -> com.google.android.material.navigation.NavigationView$SavedState$1:
    731:731:void <init>() -> <init>
    731:731:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    731:731:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    735:735:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    741:741:com.google.android.material.navigation.NavigationView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    731:731:java.lang.Object[] newArray(int) -> newArray
    747:747:com.google.android.material.navigation.NavigationView$SavedState[] newArray(int) -> newArray
com.google.android.material.radiobutton.MaterialRadioButton -> com.google.android.material.radiobutton.MaterialRadioButton:
    44:46:void <clinit>() -> <clinit>
    57:58:void <init>(android.content.Context) -> <init>
    61:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:126:android.content.res.ColorStateList getMaterialThemeColorsTintList() -> getMaterialThemeColorsTintList
    105:105:boolean isUseMaterialThemeColors() -> isUseMaterialThemeColors
    82:87:void onAttachedToWindow() -> onAttachedToWindow
    95:101:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.resources.CancelableFontCallback -> com.google.android.material.resources.CancelableFontCallback:
    42:45:void <init>(com.google.android.material.resources.CancelableFontCallback$ApplyFont,android.graphics.Typeface) -> <init>
    64:65:void cancel() -> cancel
    54:55:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    49:50:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
    68:71:void updateIfNotCancelled(android.graphics.Typeface) -> updateIfNotCancelled
com.google.android.material.resources.MaterialAttributes -> com.google.android.material.resources.MaterialAttributes:
    38:38:void <init>() -> <init>
    46:50:android.util.TypedValue resolve(android.content.Context,int) -> resolve
    106:107:boolean resolveBoolean(android.content.Context,int,boolean) -> resolveBoolean
    97:97:boolean resolveBooleanOrThrow(android.content.Context,int,java.lang.String) -> resolveBooleanOrThrow
    126:128:int resolveDimension(android.content.Context,int,int) -> resolveDimension
    115:115:int resolveMinimumAccessibleTouchTarget(android.content.Context) -> resolveMinimumAccessibleTouchTarget
    62:69:int resolveOrThrow(android.content.Context,int,java.lang.String) -> resolveOrThrow
    84:84:int resolveOrThrow(android.view.View,int) -> resolveOrThrow
com.google.android.material.resources.MaterialResources -> com.google.android.material.resources.MaterialResources:
    43:43:void <init>() -> <init>
    52:71:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    81:100:android.content.res.ColorStateList getColorStateList(android.content.Context,androidx.appcompat.widget.TintTypedArray,int) -> getColorStateList
    163:165:int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int) -> getDimensionPixelSize
    112:121:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    181:184:int getIndexWithValue(android.content.res.TypedArray,int,int) -> getIndexWithValue
    132:138:com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int) -> getTextAppearance
com.google.android.material.resources.TextAppearance -> com.google.android.material.resources.TextAppearance:
    74:105:void <init>(android.content.Context,int) -> <init>
    46:46:android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance) -> access$000
    46:46:android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface) -> access$002
    46:46:boolean access$102(com.google.android.material.resources.TextAppearance,boolean) -> access$102
    252:274:void createFallbackFont() -> createFallbackFont
    246:247:android.graphics.Typeface getFallbackFont() -> getFallbackFont
    115:137:android.graphics.Typeface getFont(android.content.Context) -> getFont
    155:201:void getFontAsync(android.content.Context,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    218:235:void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> getFontAsync
    286:299:void updateDrawState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateDrawState
    311:316:void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> updateMeasureState
    325:332:void updateTextPaintMeasureState(android.text.TextPaint,android.graphics.Typeface) -> updateTextPaintMeasureState
com.google.android.material.resources.TextAppearance$1 -> com.google.android.material.resources.TextAppearance$1:
    177:177:void <init>(com.google.android.material.resources.TextAppearance,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    187:189:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    180:183:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
com.google.android.material.resources.TextAppearance$2 -> com.google.android.material.resources.TextAppearance$2:
    222:222:void <init>(com.google.android.material.resources.TextAppearance,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback) -> <init>
    232:233:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    226:228:void onFontRetrieved(android.graphics.Typeface,boolean) -> onFontRetrieved
com.google.android.material.resources.TextAppearanceConfig -> com.google.android.material.resources.TextAppearanceConfig:
    22:22:void <init>() -> <init>
    32:33:void setShouldLoadFontSynchronously(boolean) -> setShouldLoadFontSynchronously
    37:37:boolean shouldLoadFontSynchronously() -> shouldLoadFontSynchronously
com.google.android.material.resources.TextAppearanceFontCallback -> com.google.android.material.resources.TextAppearanceFontCallback:
    30:30:void <init>() -> <init>
com.google.android.material.ripple.RippleDrawableCompat -> com.google.android.material.ripple.RippleDrawableCompat:
    47:47:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState,com.google.android.material.ripple.RippleDrawableCompat$1) -> <init>
    58:59:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    62:64:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    126:129:void draw(android.graphics.Canvas) -> draw
    140:140:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    163:163:int getOpacity() -> getOpacity
    95:95:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    104:104:boolean isStateful() -> isStateful
    46:46:android.graphics.drawable.Drawable mutate() -> mutate
    146:148:com.google.android.material.ripple.RippleDrawableCompat mutate() -> mutate
    133:135:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:120:boolean onStateChange(int[]) -> onStateChange
    153:154:void setAlpha(int) -> setAlpha
    158:159:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    83:84:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    68:69:void setTint(int) -> setTint
    78:79:void setTintList(android.content.res.ColorStateList) -> setTintList
    73:74:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState -> com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState:
    175:178:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    180:183:void <init>(com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState) -> <init>
    193:193:int getChangingConfigurations() -> getChangingConfigurations
    170:170:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    188:188:com.google.android.material.ripple.RippleDrawableCompat newDrawable() -> newDrawable
com.google.android.material.ripple.RippleUtils -> com.google.android.material.ripple.RippleUtils:
    42:77:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    112:184:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    256:257:int doubleAlpha(int) -> doubleAlpha
    241:246:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
    203:213:android.content.res.ColorStateList sanitizeRippleDrawableColor(android.content.res.ColorStateList) -> sanitizeRippleDrawableColor
    221:235:boolean shouldDrawRippleCompat(int[]) -> shouldDrawRippleCompat
com.google.android.material.shadow.ShadowDrawableWrapper -> com.google.android.material.shadow.ShadowDrawableWrapper:
    45:45:void <clinit>() -> <clinit>
    87:100:void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float) -> <init>
    361:376:void buildComponents(android.graphics.Rect) -> buildComponents
    310:355:void buildShadowCorners() -> buildShadowCorners
    181:184:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    172:175:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    205:212:void draw(android.graphics.Canvas) -> draw
    222:307:void drawShadow(android.graphics.Canvas) -> drawShadow
    379:379:float getCornerRadius() -> getCornerRadius
    387:387:float getMaxShadowSize() -> getMaxShadowSize
    396:398:float getMinHeight() -> getMinHeight
    391:392:float getMinWidth() -> getMinWidth
    190:190:int getOpacity() -> getOpacity
    158:167:boolean getPadding(android.graphics.Rect) -> getPadding
    153:153:float getShadowSize() -> getShadowSize
    122:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    109:111:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    115:118:void setAlpha(int) -> setAlpha
    194:201:void setCornerRadius(float) -> setCornerRadius
    383:384:void setMaxShadowSize(float) -> setMaxShadowSize
    215:219:void setRotation(float) -> setRotation
    126:127:void setShadowSize(float,float) -> setShadowSize
    149:150:void setShadowSize(float) -> setShadowSize
    104:105:int toEven(float) -> toEven
com.google.android.material.shadow.ShadowRenderer -> com.google.android.material.shadow.ShadowRenderer:
    59:65:void <clinit>() -> <clinit>
    70:71:void <init>() -> <init>
    73:83:void <init>(int) -> <init>
    128:176:void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float) -> drawCornerShadow
    94:115:void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int) -> drawEdgeShadow
    180:180:android.graphics.Paint getShadowPaint() -> getShadowPaint
    86:89:void setShadowColor(int) -> setShadowColor
com.google.android.material.shape.AbsoluteCornerSize -> com.google.android.material.shape.AbsoluteCornerSize:
    28:30:void <init>(float) -> <init>
    46:53:boolean equals(java.lang.Object) -> equals
    34:34:float getCornerSize(android.graphics.RectF) -> getCornerSize
    41:41:float getCornerSize() -> getCornerSize
    58:59:int hashCode() -> hashCode
com.google.android.material.shape.AdjustedCornerSize -> com.google.android.material.shape.AdjustedCornerSize:
    37:46:void <init>(float,com.google.android.material.shape.CornerSize) -> <init>
    55:62:boolean equals(java.lang.Object) -> equals
    50:50:float getCornerSize(android.graphics.RectF) -> getCornerSize
    67:68:int hashCode() -> hashCode
com.google.android.material.shape.CornerTreatment -> com.google.android.material.shape.CornerTreatment:
    30:30:void <init>() -> <init>
    50:50:void getCornerPath(float,float,com.google.android.material.shape.ShapePath) -> getCornerPath
    70:71:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
    98:99:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize) -> getCornerPath
com.google.android.material.shape.CutCornerTreatment -> com.google.android.material.shape.CutCornerTreatment:
    26:26:void <init>() -> <init>
    40:42:void <init>(float) -> <init>
    47:53:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.EdgeTreatment -> com.google.android.material.shape.EdgeTreatment:
    29:29:void <init>() -> <init>
    38:40:void getEdgePath(float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
    64:65:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper -> com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper:
    52:56:void <init>(android.view.View,com.google.android.material.shape.MaterialShapeDrawable,android.widget.ScrollView) -> <init>
    73:74:void setContainingScrollView(android.widget.ScrollView) -> setContainingScrollView
    64:65:void setMaterialShapeDrawable(com.google.android.material.shape.MaterialShapeDrawable) -> setMaterialShapeDrawable
    83:84:void startListeningForScrollChanges(android.view.ViewTreeObserver) -> startListeningForScrollChanges
    93:94:void stopListeningForScrollChanges(android.view.ViewTreeObserver) -> stopListeningForScrollChanges
    101:107:void updateInterpolationForScreenPosition() -> updateInterpolationForScreenPosition
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1 -> com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1:
    34:34:void <init>(com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper) -> <init>
    37:38:void onScrollChanged() -> onScrollChanged
com.google.android.material.shape.MaterialShapeDrawable -> com.google.android.material.shape.MaterialShapeDrawable:
    103:103:void <clinit>() -> <clinit>
    71:71:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1) -> <init>
    167:168:void <init>() -> <init>
    175:176:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    180:181:void <init>(com.google.android.material.shape.ShapePathModel) -> <init>
    188:189:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    191:213:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    71:71:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$000(com.google.android.material.shape.MaterialShapeDrawable) -> access$000
    71:71:com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable) -> access$100
    71:71:boolean access$302(com.google.android.material.shape.MaterialShapeDrawable,boolean) -> access$302
    1200:1207:android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean) -> calculatePaintColorTintFilter
    1150:1161:void calculatePath(android.graphics.RectF,android.graphics.Path) -> calculatePath
    1094:1100:void calculatePathForSize(android.graphics.RectF,android.graphics.Path) -> calculatePathForSize
    1106:1127:void calculateStrokePath() -> calculateStrokePath
    1215:1219:android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean) -> calculateTintColorTintFilter
    1192:1192:android.graphics.PorterDuffColorFilter calculateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.graphics.Paint,boolean) -> calculateTintFilter
    591:592:int compositeElevationOverlayIfNeeded(int) -> compositeElevationOverlayIfNeeded
    144:144:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context) -> createWithElevationOverlay
    156:163:com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context,float) -> createWithElevationOverlay
    916:979:void draw(android.graphics.Canvas) -> draw
    1049:1065:void drawCompatShadow(android.graphics.Canvas) -> drawCompatShadow
    1011:1012:void drawFillShape(android.graphics.Canvas) -> drawFillShape
    992:993:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF) -> drawShape
    1002:1008:void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,com.google.android.material.shape.ShapeAppearanceModel,android.graphics.RectF) -> drawShape
    1015:1017:void drawStrokeShape(android.graphics.Canvas) -> drawStrokeShape
    1301:1301:float getBottomLeftCornerResolvedSize() -> getBottomLeftCornerResolvedSize
    1309:1309:float getBottomRightCornerResolvedSize() -> getBottomRightCornerResolvedSize
    457:459:android.graphics.RectF getBoundsAsRectF() -> getBoundsAsRectF
    1276:1280:android.graphics.RectF getBoundsInsetByStroke() -> getBoundsInsetByStroke
    218:218:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    642:642:float getElevation() -> getElevation
    301:301:android.content.res.ColorStateList getFillColor() -> getFillColor
    605:605:float getInterpolation() -> getInterpolation
    428:428:int getOpacity() -> getOpacity
    1132:1147:void getOutline(android.graphics.Outline) -> getOutline
    492:496:boolean getPadding(android.graphics.Rect) -> getPadding
    875:875:android.graphics.Paint$Style getPaintStyle() -> getPaintStyle
    625:625:float getParentAbsoluteElevation() -> getParentAbsoluteElevation
    1084:1085:void getPathForSize(int,int,android.graphics.Path) -> getPathForSize
    811:811:float getScale() -> getScale
    759:759:int getShadowCompatRotation() -> getShadowCompatRotation
    487:487:int getShadowCompatibilityMode() -> getShadowCompatibilityMode
    712:712:int getShadowElevation() -> getShadowElevation
    1069:1069:int getShadowOffsetX() -> getShadowOffsetX
    1076:1076:int getShadowOffsetY() -> getShadowOffsetY
    783:783:int getShadowRadius() -> getShadowRadius
    734:734:int getShadowVerticalOffset() -> getShadowVerticalOffset
    255:255:com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel() -> getShapeAppearanceModel
    278:279:com.google.android.material.shape.ShapePathModel getShapedViewModel() -> getShapedViewModel
    323:323:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    1268:1271:float getStrokeInsetLength() -> getStrokeInsetLength
    355:355:android.content.res.ColorStateList getStrokeTintList() -> getStrokeTintList
    411:411:float getStrokeWidth() -> getStrokeWidth
    345:345:android.content.res.ColorStateList getTintList() -> getTintList
    1285:1285:float getTopLeftCornerResolvedSize() -> getTopLeftCornerResolvedSize
    1293:1293:float getTopRightCornerResolvedSize() -> getTopRightCornerResolvedSize
    663:663:float getTranslationZ() -> getTranslationZ
    447:452:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    684:684:float getZ() -> getZ
    890:890:boolean hasCompatShadow() -> hasCompatShadow
    897:897:boolean hasFill() -> hasFill
    903:903:boolean hasStroke() -> hasStroke
    585:587:void initializeElevationOverlay(android.content.Context) -> initializeElevationOverlay
    828:830:void invalidateSelf() -> invalidateSelf
    837:838:void invalidateSelfIgnoreShape() -> invalidateSelfIgnoreShape
    569:569:boolean isElevationOverlayEnabled() -> isElevationOverlayEnabled
    575:575:boolean isElevationOverlayInitialized() -> isElevationOverlayInitialized
    482:482:boolean isPointInTransparentRegion(int,int) -> isPointInTransparentRegion
    1323:1323:boolean isRoundRect() -> isRoundRect
    543:543:boolean isShadowEnabled() -> isShadowEnabled
    1224:1224:boolean isStateful() -> isStateful
    230:231:int modulateAlpha(int,int) -> modulateAlpha
    224:226:android.graphics.drawable.Drawable mutate() -> mutate
    910:912:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1233:1239:boolean onStateChange(int[]) -> onStateChange
    1021:1039:void prepareCanvasForShadow(android.graphics.Canvas) -> prepareCanvasForShadow
    802:802:boolean requiresCompatShadow() -> requiresCompatShadow
    433:437:void setAlpha(int) -> setAlpha
    441:443:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    464:465:void setCornerSize(float) -> setCornerSize
    469:470:void setCornerSize(com.google.android.material.shape.CornerSize) -> setCornerSize
    651:655:void setElevation(float) -> setElevation
    288:292:void setFillColor(android.content.res.ColorStateList) -> setFillColor
    616:621:void setInterpolation(float) -> setInterpolation
    509:516:void setPadding(int,int,int,int) -> setPadding
    884:886:void setPaintStyle(android.graphics.Paint$Style) -> setPaintStyle
    630:634:void setParentAbsoluteElevation(float) -> setParentAbsoluteElevation
    820:824:void setScale(float) -> setScale
    864:867:void setShadowColor(int) -> setShadowColor
    771:775:void setShadowCompatRotation(int) -> setShadowCompatRotation
    529:533:void setShadowCompatibilityMode(int) -> setShadowCompatibilityMode
    723:724:void setShadowElevation(int) -> setShadowElevation
    560:562:void setShadowEnabled(boolean) -> setShadowEnabled
    794:795:void setShadowRadius(int) -> setShadowRadius
    748:752:void setShadowVerticalOffset(int) -> setShadowVerticalOffset
    242:244:void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel) -> setShapeAppearanceModel
    266:267:void setShapedViewModel(com.google.android.material.shape.ShapePathModel) -> setShapedViewModel
    390:392:void setStroke(float,int) -> setStroke
    401:403:void setStroke(float,android.content.res.ColorStateList) -> setStroke
    310:314:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    369:372:void setStrokeTint(android.content.res.ColorStateList) -> setStrokeTint
    380:381:void setStrokeTint(int) -> setStrokeTint
    420:422:void setStrokeWidth(float) -> setStrokeWidth
    360:361:void setTint(int) -> setTint
    337:340:void setTintList(android.content.res.ColorStateList) -> setTintList
    328:333:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    672:676:void setTranslationZ(float) -> setTranslationZ
    848:852:void setUseTintColorForShadow(boolean) -> setUseTintColorForShadow
    693:694:void setZ(float) -> setZ
    1243:1264:boolean updateColorsForState(int[]) -> updateColorsForState
    1164:1182:boolean updateTintFilter() -> updateTintFilter
    697:703:void updateZ() -> updateZ
com.google.android.material.shape.MaterialShapeDrawable$1 -> com.google.android.material.shape.MaterialShapeDrawable$1:
    201:201:void <init>(com.google.android.material.shape.MaterialShapeDrawable) -> <init>
    205:206:void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onCornerPathCreated
    210:211:void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int) -> onEdgePathCreated
com.google.android.material.shape.MaterialShapeDrawable$2 -> com.google.android.material.shape.MaterialShapeDrawable$2:
    1110:1110:void <init>(com.google.android.material.shape.MaterialShapeDrawable,float) -> <init>
    1116:1116:com.google.android.material.shape.CornerSize apply(com.google.android.material.shape.CornerSize) -> apply
com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState -> com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState:
    1358:1361:void <init>(com.google.android.material.shape.ShapeAppearanceModel,com.google.android.material.elevation.ElevationOverlayProvider) -> <init>
    1363:1388:void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState) -> <init>
    1401:1401:int getChangingConfigurations() -> getChangingConfigurations
    1393:1396:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.google.android.material.shape.MaterialShapeUtils -> com.google.android.material.shape.MaterialShapeUtils:
    27:27:void <init>() -> <init>
    31:33:com.google.android.material.shape.CornerTreatment createCornerTreatment(int) -> createCornerTreatment
    43:43:com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment() -> createDefaultCornerTreatment
    48:48:com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment() -> createDefaultEdgeTreatment
    57:61:void setElevation(android.view.View,float) -> setElevation
    70:74:void setParentAbsoluteElevation(android.view.View) -> setParentAbsoluteElevation
    83:86:void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable) -> setParentAbsoluteElevation
com.google.android.material.shape.RelativeCornerSize -> com.google.android.material.shape.RelativeCornerSize:
    31:33:void <init>(float) -> <init>
    47:54:boolean equals(java.lang.Object) -> equals
    42:42:float getCornerSize(android.graphics.RectF) -> getCornerSize
    37:37:float getRelativePercent() -> getRelativePercent
    59:60:int hashCode() -> hashCode
com.google.android.material.shape.RoundedCornerTreatment -> com.google.android.material.shape.RoundedCornerTreatment:
    26:26:void <init>() -> <init>
    36:38:void <init>(float) -> <init>
    43:45:void getCornerPath(com.google.android.material.shape.ShapePath,float,float,float) -> getCornerPath
com.google.android.material.shape.ShapeAppearanceModel -> com.google.android.material.shape.ShapeAppearanceModel:
    565:565:void <clinit>() -> <clinit>
    41:41:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder,com.google.android.material.shape.ShapeAppearanceModel$1) -> <init>
    580:595:void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> <init>
    598:613:void <init>() -> <init>
    435:435:com.google.android.material.shape.ShapeAppearanceModel$Builder builder() -> builder
    444:444:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int) -> builder
    454:454:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int) -> builder
    465:472:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize) -> builder
    480:480:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int) -> builder
    489:489:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int) -> builder
    503:541:com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,com.google.android.material.shape.CornerSize) -> builder
    732:732:com.google.android.material.shape.EdgeTreatment getBottomEdge() -> getBottomEdge
    652:652:com.google.android.material.shape.CornerTreatment getBottomLeftCorner() -> getBottomLeftCorner
    692:692:com.google.android.material.shape.CornerSize getBottomLeftCornerSize() -> getBottomLeftCornerSize
    642:642:com.google.android.material.shape.CornerTreatment getBottomRightCorner() -> getBottomRightCorner
    682:682:com.google.android.material.shape.CornerSize getBottomRightCornerSize() -> getBottomRightCornerSize
    547:560:com.google.android.material.shape.CornerSize getCornerSize(android.content.res.TypedArray,int,com.google.android.material.shape.CornerSize) -> getCornerSize
    702:702:com.google.android.material.shape.EdgeTreatment getLeftEdge() -> getLeftEdge
    722:722:com.google.android.material.shape.EdgeTreatment getRightEdge() -> getRightEdge
    712:712:com.google.android.material.shape.EdgeTreatment getTopEdge() -> getTopEdge
    622:622:com.google.android.material.shape.CornerTreatment getTopLeftCorner() -> getTopLeftCorner
    662:662:com.google.android.material.shape.CornerSize getTopLeftCornerSize() -> getTopLeftCornerSize
    632:632:com.google.android.material.shape.CornerTreatment getTopRightCorner() -> getTopRightCorner
    672:672:com.google.android.material.shape.CornerSize getTopRightCornerSize() -> getTopRightCornerSize
    791:810:boolean isRoundRect(android.graphics.RectF) -> isRoundRect
    738:738:com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder() -> toBuilder
    747:747:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(float) -> withCornerSize
    752:752:com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize) -> withCornerSize
    775:775:com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator) -> withTransformedCornerSizes
com.google.android.material.shape.ShapeAppearanceModel$Builder -> com.google.android.material.shape.ShapeAppearanceModel$Builder:
    68:68:void <init>() -> <init>
    70:85:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    44:44:com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$100
    44:44:com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1000
    44:44:com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1100
    44:44:com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$1200
    44:44:com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$200
    44:44:com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$300
    44:44:com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$400
    44:44:com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$500
    44:44:com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$600
    44:44:com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$700
    44:44:com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$800
    44:44:com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder) -> access$900
    429:429:com.google.android.material.shape.ShapeAppearanceModel build() -> build
    418:423:float compatCornerTreatmentSize(com.google.android.material.shape.CornerTreatment) -> compatCornerTreatmentSize
    122:122:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize) -> setAllCornerSizes
    131:131:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float) -> setAllCornerSizes
    98:98:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float) -> setAllCorners
    109:109:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment) -> setAllCorners
    366:366:com.google.android.material.shape.ShapeAppearanceModel$Builder setAllEdges(com.google.android.material.shape.EdgeTreatment) -> setAllEdges
    412:413:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment) -> setBottomEdge
    326:326:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,float) -> setBottomLeftCorner
    339:339:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize) -> setBottomLeftCorner
    350:356:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    182:183:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(float) -> setBottomLeftCornerSize
    189:190:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize) -> setBottomLeftCornerSize
    284:284:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,float) -> setBottomRightCorner
    297:297:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize) -> setBottomRightCorner
    308:314:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    168:169:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(float) -> setBottomRightCornerSize
    175:176:com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize) -> setBottomRightCornerSize
    379:380:com.google.android.material.shape.ShapeAppearanceModel$Builder setLeftEdge(com.google.android.material.shape.EdgeTreatment) -> setLeftEdge
    401:402:com.google.android.material.shape.ShapeAppearanceModel$Builder setRightEdge(com.google.android.material.shape.EdgeTreatment) -> setRightEdge
    390:391:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment) -> setTopEdge
    201:201:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,float) -> setTopLeftCorner
    214:214:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize) -> setTopLeftCorner
    225:231:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    140:141:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(float) -> setTopLeftCornerSize
    147:148:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize) -> setTopLeftCornerSize
    242:242:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,float) -> setTopRightCorner
    255:255:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize) -> setTopRightCorner
    266:272:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
    154:155:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(float) -> setTopRightCornerSize
    161:162:com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize) -> setTopRightCornerSize
com.google.android.material.shape.ShapeAppearancePathProvider -> com.google.android.material.shape.ShapeAppearancePathProvider:
    52:58:void <init>() -> <init>
    255:255:float angleOfEdge(int) -> angleOfEdge
    139:151:void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendCornerPath
    154:174:void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> appendEdgePath
    73:74:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path) -> calculatePath
    92:114:void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> calculatePath
    237:252:void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF) -> getCoordinatesOfCorner
    208:210:com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerSizeForIndex
    193:195:com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getCornerTreatmentForIndex
    177:183:float getEdgeCenterForIndex(android.graphics.RectF,int) -> getEdgeCenterForIndex
    223:225:com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel) -> getEdgeTreatmentForIndex
    117:126:void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int) -> setCornerPathAndTransform
    129:136:void setEdgePathAndTransform(int) -> setEdgePathAndTransform
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec -> com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec:
    274:280:void <init>(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,com.google.android.material.shape.ShapeAppearancePathProvider$PathListener,android.graphics.Path) -> <init>
com.google.android.material.shape.ShapePath -> com.google.android.material.shape.ShapePath:
    91:93:void <init>() -> <init>
    95:97:void <init>(float,float) -> <init>
    175:197:void addArc(float,float,float,float,float,float) -> addArc
    248:263:void addConnectingShadowIfNecessary(float) -> addConnectingShadowIfNecessary
    238:241:void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float) -> addShadowCompatOperation
    206:210:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    219:221:com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix) -> createShadowCompatOperation
    282:282:float getCurrentShadowAngle() -> getCurrentShadowAngle
    286:286:float getEndShadowAngle() -> getEndShadowAngle
    274:274:float getEndX() -> getEndX
    278:278:float getEndY() -> getEndY
    266:266:float getStartX() -> getStartX
    270:270:float getStartY() -> getStartY
    126:141:void lineTo(float,float) -> lineTo
    152:161:void quadToPoint(float,float,float,float) -> quadToPoint
    104:105:void reset(float,float) -> reset
    109:117:void reset(float,float,float,float) -> reset
    306:307:void setCurrentShadowAngle(float) -> setCurrentShadowAngle
    310:311:void setEndShadowAngle(float) -> setEndShadowAngle
    298:299:void setEndX(float) -> setEndX
    302:303:void setEndY(float) -> setEndY
    290:291:void setStartX(float) -> setStartX
    294:295:void setStartY(float) -> setStartY
com.google.android.material.shape.ShapePath$1 -> com.google.android.material.shape.ShapePath$1:
    221:221:void <init>(com.google.android.material.shape.ShapePath,java.util.List,android.graphics.Matrix) -> <init>
    225:228:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$ArcShadowOperation -> com.google.android.material.shape.ShapePath$ArcShadowOperation:
    370:372:void <init>(com.google.android.material.shape.ShapePath$PathArcOperation) -> <init>
    380:387:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePath$LineShadowOperation -> com.google.android.material.shape.ShapePath$LineShadowOperation:
    338:342:void <init>(com.google.android.material.shape.ShapePath$PathLineOperation,float,float) -> <init>
    350:358:void draw(android.graphics.Matrix,com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
    361:361:float getAngle() -> getAngle
com.google.android.material.shape.ShapePath$PathArcOperation -> com.google.android.material.shape.ShapePath$PathArcOperation:
    482:482:void <clinit>() -> <clinit>
    515:520:void <init>(float,float,float,float) -> <init>
    481:481:float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1000
    481:481:float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1100
    481:481:float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1200
    481:481:float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$1300
    481:481:void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$600
    481:481:void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float) -> access$700
    481:481:float access$800(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$800
    481:481:float access$900(com.google.android.material.shape.ShapePath$PathArcOperation) -> access$900
    524:530:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    545:545:float getBottom() -> getBottom
    533:533:float getLeft() -> getLeft
    541:541:float getRight() -> getRight
    565:565:float getStartAngle() -> getStartAngle
    569:569:float getSweepAngle() -> getSweepAngle
    537:537:float getTop() -> getTop
    561:562:void setBottom(float) -> setBottom
    549:550:void setLeft(float) -> setLeft
    557:558:void setRight(float) -> setRight
    573:574:void setStartAngle(float) -> setStartAngle
    577:578:void setSweepAngle(float) -> setSweepAngle
    553:554:void setTop(float) -> setTop
com.google.android.material.shape.ShapePath$PathLineOperation -> com.google.android.material.shape.ShapePath$PathLineOperation:
    401:401:void <init>() -> <init>
    401:401:float access$000(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$000
    401:401:float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$002
    401:401:float access$100(com.google.android.material.shape.ShapePath$PathLineOperation) -> access$100
    401:401:float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float) -> access$102
    407:412:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
com.google.android.material.shape.ShapePath$PathOperation -> com.google.android.material.shape.ShapePath$PathOperation:
    391:394:void <init>() -> <init>
com.google.android.material.shape.ShapePath$PathQuadOperation -> com.google.android.material.shape.ShapePath$PathQuadOperation:
    416:416:void <init>() -> <init>
    416:416:void access$200(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$200
    416:416:void access$300(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$300
    416:416:void access$400(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$400
    416:416:void access$500(com.google.android.material.shape.ShapePath$PathQuadOperation,float) -> access$500
    440:445:void applyToPath(android.graphics.Matrix,android.graphics.Path) -> applyToPath
    472:472:float getControlX() -> getControlX
    456:456:float getControlY() -> getControlY
    448:448:float getEndX() -> getEndX
    464:464:float getEndY() -> getEndY
    476:477:void setControlX(float) -> setControlX
    460:461:void setControlY(float) -> setControlY
    452:453:void setEndX(float) -> setEndX
    468:469:void setEndY(float) -> setEndY
com.google.android.material.shape.ShapePath$ShadowCompatOperation -> com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    319:319:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
    323:324:void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas) -> draw
com.google.android.material.shape.ShapePathModel -> com.google.android.material.shape.ShapePathModel:
    26:26:void <init>() -> <init>
    36:40:void setAllCorners(com.google.android.material.shape.CornerTreatment) -> setAllCorners
    50:54:void setAllEdges(com.google.android.material.shape.EdgeTreatment) -> setAllEdges
    172:173:void setBottomEdge(com.google.android.material.shape.EdgeTreatment) -> setBottomEdge
    139:140:void setBottomLeftCorner(com.google.android.material.shape.CornerTreatment) -> setBottomLeftCorner
    128:129:void setBottomRightCorner(com.google.android.material.shape.CornerTreatment) -> setBottomRightCorner
    71:75:void setCornerTreatments(com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment) -> setCornerTreatments
    92:96:void setEdgeTreatments(com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment) -> setEdgeTreatments
    183:184:void setLeftEdge(com.google.android.material.shape.EdgeTreatment) -> setLeftEdge
    161:162:void setRightEdge(com.google.android.material.shape.EdgeTreatment) -> setRightEdge
    150:151:void setTopEdge(com.google.android.material.shape.EdgeTreatment) -> setTopEdge
    106:107:void setTopLeftCorner(com.google.android.material.shape.CornerTreatment) -> setTopLeftCorner
    117:118:void setTopRightCorner(com.google.android.material.shape.CornerTreatment) -> setTopRightCorner
com.google.android.material.shape.TriangleEdgeTreatment -> com.google.android.material.shape.TriangleEdgeTreatment:
    39:42:void <init>(float,boolean) -> <init>
    47:51:void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath) -> getEdgePath
com.google.android.material.snackbar.BaseTransientBottomBar -> com.google.android.material.snackbar.BaseTransientBottomBar:
    221:248:void <clinit>() -> <clinit>
    332:334:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    89:89:android.content.Context access$000(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$000
    89:89:int access$100(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$100
    89:89:void access$1100(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1100
    89:89:void access$1200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1200
    89:89:com.google.android.material.snackbar.ContentViewCallback access$1300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1300
    89:89:boolean access$1400() -> access$1400
    89:89:int access$200(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$200
    89:89:int access$300(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$300
    89:89:int access$302(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$302
    89:89:java.lang.String access$400() -> access$400
    89:89:int access$502(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$502
    89:89:int access$602(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$602
    89:89:int access$702(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> access$702
    89:89:void access$800(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$800
    89:89:void access$900(com.google.android.material.snackbar.BaseTransientBottomBar) -> access$900
    633:640:com.google.android.material.snackbar.BaseTransientBottomBar addCallback(com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback) -> addCallback
    847:863:void animateViewIn() -> animateViewIn
    866:871:void animateViewOut(int) -> animateViewOut
    830:842:int calculateBottomMarginForAnchorView() -> calculateBottomMarginForAnchorView
    423:436:android.graphics.drawable.Drawable createThemedBackground() -> createThemedBackground
    617:618:void dismiss() -> dismiss
    621:622:void dispatchDismiss(int) -> dispatchDismiss
    904:913:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    553:553:android.view.View getAnchorView() -> getAnchorView
    536:536:int getAnimationMode() -> getAnimationMode
    595:595:com.google.android.material.snackbar.BaseTransientBottomBar$Behavior getBehavior() -> getBehavior
    601:601:android.content.Context getContext() -> getContext
    508:508:int getDuration() -> getDuration
    693:693:com.google.android.material.behavior.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    917:928:android.animation.ValueAnimator getScaleAnimator(float[]) -> getScaleAnimator
    779:782:int getScreenHeight() -> getScreenHeight
    474:474:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    1016:1021:int getTranslationYBottom() -> getTranslationYBottom
    607:607:android.view.View getView() -> getView
    772:774:int getViewAbsoluteBottom() -> getViewAbsoluteBottom
    483:486:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    1025:1031:void hideView(int) -> hideView
    530:530:boolean isGestureInsetBottomIgnored() -> isGestureInsetBottomIgnored
    665:665:boolean isShown() -> isShown
    673:673:boolean isShownOrQueued() -> isShownOrQueued
    466:467:boolean isSwipeDismissable() -> isSwipeDismissable
    1047:1061:void onViewHidden(int) -> onViewHidden
    1034:1043:void onViewShown() -> onViewShown
    652:660:com.google.android.material.snackbar.BaseTransientBottomBar removeCallback(com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback) -> removeCallback
    559:560:com.google.android.material.snackbar.BaseTransientBottomBar setAnchorView(android.view.View) -> setAnchorView
    570:572:com.google.android.material.snackbar.BaseTransientBottomBar setAnchorView(int) -> setAnchorView
    542:543:com.google.android.material.snackbar.BaseTransientBottomBar setAnimationMode(int) -> setAnimationMode
    585:586:com.google.android.material.snackbar.BaseTransientBottomBar setBehavior(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior) -> setBehavior
    497:498:com.google.android.material.snackbar.BaseTransientBottomBar setDuration(int) -> setDuration
    521:522:com.google.android.material.snackbar.BaseTransientBottomBar setGestureInsetBottomIgnored(boolean) -> setGestureInsetBottomIgnored
    787:827:void setUpBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> setUpBehavior
    1065:1068:boolean shouldAnimate() -> shouldAnimate
    462:462:boolean shouldUpdateGestureInset() -> shouldUpdateGestureInset
    612:613:void show() -> show
    697:758:void showView() -> showView
    761:769:void showViewImpl() -> showViewImpl
    874:888:void startFadeInAnimation() -> startFadeInAnimation
    891:901:void startFadeOutAnimation(int) -> startFadeOutAnimation
    932:975:void startSlideInAnimation() -> startSlideInAnimation
    978:1013:void startSlideOutAnimation(int) -> startSlideOutAnimation
    440:443:void updateMargins() -> updateMargins
com.google.android.material.snackbar.BaseTransientBottomBar$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$1:
    233:233:void <init>() -> <init>
    236:239:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.BaseTransientBottomBar$10 -> com.google.android.material.snackbar.BaseTransientBottomBar$10:
    881:881:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    884:885:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$11 -> com.google.android.material.snackbar.BaseTransientBottomBar$11:
    894:894:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    897:898:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.snackbar.BaseTransientBottomBar$12 -> com.google.android.material.snackbar.BaseTransientBottomBar$12:
    907:907:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    910:911:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$13 -> com.google.android.material.snackbar.BaseTransientBottomBar$13:
    920:920:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    923:926:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$14 -> com.google.android.material.snackbar.BaseTransientBottomBar$14:
    944:944:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    953:954:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    947:949:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$15 -> com.google.android.material.snackbar.BaseTransientBottomBar$15:
    957:958:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    962:972:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$16 -> com.google.android.material.snackbar.BaseTransientBottomBar$16:
    983:983:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar,int) -> <init>
    991:992:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    986:987:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.snackbar.BaseTransientBottomBar$17 -> com.google.android.material.snackbar.BaseTransientBottomBar$17:
    995:996:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    1000:1010:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.snackbar.BaseTransientBottomBar$2 -> com.google.android.material.snackbar.BaseTransientBottomBar$2:
    263:263:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    266:267:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$3 -> com.google.android.material.snackbar.BaseTransientBottomBar$3:
    381:381:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    387:391:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
com.google.android.material.snackbar.BaseTransientBottomBar$4 -> com.google.android.material.snackbar.BaseTransientBottomBar$4:
    398:398:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    402:405:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    409:413:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.google.android.material.snackbar.BaseTransientBottomBar$5 -> com.google.android.material.snackbar.BaseTransientBottomBar$5:
    678:678:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    686:688:void dismiss(int) -> dismiss
    681:682:void show() -> show
com.google.android.material.snackbar.BaseTransientBottomBar$6 -> com.google.android.material.snackbar.BaseTransientBottomBar$6:
    698:698:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    701:708:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    712:725:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.google.android.material.snackbar.BaseTransientBottomBar$6$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$6$1:
    718:718:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar$6) -> <init>
    721:722:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$7 -> com.google.android.material.snackbar.BaseTransientBottomBar$7:
    751:751:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    754:756:void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
com.google.android.material.snackbar.BaseTransientBottomBar$8 -> com.google.android.material.snackbar.BaseTransientBottomBar$8:
    797:797:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    800:802:void onDismiss(android.view.View) -> onDismiss
    806:819:void onDragStateChanged(int) -> onDragStateChanged
com.google.android.material.snackbar.BaseTransientBottomBar$9 -> com.google.android.material.snackbar.BaseTransientBottomBar$9:
    848:848:void <init>(com.google.android.material.snackbar.BaseTransientBottomBar) -> <init>
    851:861:void run() -> run
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback -> com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback:
    113:113:void <init>() -> <init>
    153:153:void onDismissed(java.lang.Object,int) -> onDismissed
    163:163:void onShown(java.lang.Object) -> onShown
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior -> com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    1180:1182:void <init>() -> <init>
    1177:1177:void access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar) -> access$1000
    1191:1191:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1197:1198:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1186:1187:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate -> com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    1208:1212:void <init>(com.google.android.material.behavior.SwipeDismissBehavior) -> <init>
    1220:1220:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    1225:1240:void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    1216:1217:void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar) -> setBaseTransientBottomBar
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    1075:1075:void <clinit>() -> <clinit>
    1092:1093:void <init>(android.content.Context) -> <init>
    1096:1113:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1172:1172:float getActionTextColorAlpha() -> getActionTextColorAlpha
    1160:1160:int getAnimationMode() -> getAnimationMode
    1168:1168:float getBackgroundOverlayColorAlpha() -> getBackgroundOverlayColorAlpha
    1132:1138:void onAttachedToWindow() -> onAttachedToWindow
    1142:1146:void onDetachedFromWindow() -> onDetachedFromWindow
    1124:1128:void onLayout(boolean,int,int,int,int) -> onLayout
    1164:1165:void setAnimationMode(int) -> setAnimationMode
    1155:1156:void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    1118:1120:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1150:1151:void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1 -> com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout$1:
    1076:1076:void <init>() -> <init>
    1081:1081:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.snackbar.Snackbar -> com.google.android.material.snackbar.Snackbar:
    71:71:void <clinit>() -> <clinit>
    110:113:void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback) -> <init>
    126:127:void dismiss() -> dismiss
    212:233:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    308:320:int getDuration() -> getDuration
    183:186:boolean hasSnackbarButtonStyleAttr(android.content.Context) -> hasSnackbarButtonStyleAttr
    133:133:boolean isShown() -> isShown
    156:158:com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    207:207:com.google.android.material.snackbar.Snackbar make(android.view.View,int,int) -> make
    270:270:com.google.android.material.snackbar.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    282:302:com.google.android.material.snackbar.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    355:358:com.google.android.material.snackbar.Snackbar setActionTextColor(android.content.res.ColorStateList) -> setActionTextColor
    367:370:com.google.android.material.snackbar.Snackbar setActionTextColor(int) -> setActionTextColor
    376:387:com.google.android.material.snackbar.Snackbar setBackgroundTint(int) -> setBackgroundTint
    393:394:com.google.android.material.snackbar.Snackbar setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    413:422:com.google.android.material.snackbar.Snackbar setCallback(com.google.android.material.snackbar.Snackbar$Callback) -> setCallback
    246:249:com.google.android.material.snackbar.Snackbar setText(java.lang.CharSequence) -> setText
    259:259:com.google.android.material.snackbar.Snackbar setText(int) -> setText
    331:334:com.google.android.material.snackbar.Snackbar setTextColor(android.content.res.ColorStateList) -> setTextColor
    343:346:com.google.android.material.snackbar.Snackbar setTextColor(int) -> setTextColor
    119:120:void show() -> show
com.google.android.material.snackbar.Snackbar$1 -> com.google.android.material.snackbar.Snackbar$1:
    293:293:void <init>(com.google.android.material.snackbar.Snackbar,android.view.View$OnClickListener) -> <init>
    296:299:void onClick(android.view.View) -> onClick
com.google.android.material.snackbar.Snackbar$Callback -> com.google.android.material.snackbar.Snackbar$Callback:
    81:81:void <init>() -> <init>
    81:81:void onDismissed(java.lang.Object,int) -> onDismissed
    101:101:void onDismissed(com.google.android.material.snackbar.Snackbar,int) -> onDismissed
    81:81:void onShown(java.lang.Object) -> onShown
    96:96:void onShown(com.google.android.material.snackbar.Snackbar) -> onShown
com.google.android.material.snackbar.Snackbar$SnackbarLayout -> com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    432:433:void <init>(android.content.Context) -> <init>
    436:437:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    441:456:void onMeasure(int,int) -> onMeasure
    429:429:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
com.google.android.material.snackbar.SnackbarContentLayout -> com.google.android.material.snackbar.SnackbarContentLayout:
    45:46:void <init>(android.content.Context) -> <init>
    49:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:155:void animateContentIn(int,int) -> animateContentIn
    159:166:void animateContentOut(int,int) -> animateContentOut
    69:69:android.widget.Button getActionView() -> getActionView
    65:65:android.widget.TextView getMessageView() -> getMessageView
    59:62:void onFinishInflate() -> onFinishInflate
    84:115:void onMeasure(int,int) -> onMeasure
    73:80:void updateActionTextColorAlphaIfNeeded(float) -> updateActionTextColorAlphaIfNeeded
    134:144:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    119:129:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
com.google.android.material.snackbar.SnackbarManager -> com.google.android.material.snackbar.SnackbarManager:
    49:66:void <init>() -> <init>
    205:212:boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    107:113:void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int) -> dismiss
    37:40:com.google.android.material.snackbar.SnackbarManager getInstance() -> getInstance
    240:244:void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> handleTimeout
    163:165:boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrent
    169:171:boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentOrNext
    216:216:boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    220:220:boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback) -> isNextSnackbarLocked
    121:129:void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback) -> onDismissed
    137:141:void onShown(com.google.android.material.snackbar.SnackbarManager$Callback) -> onShown
    145:150:void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback) -> pauseTimeout
    154:159:void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    224:237:void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    75:103:void show(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> show
    190:202:void showNextSnackbarLocked() -> showNextSnackbarLocked
com.google.android.material.snackbar.SnackbarManager$1 -> com.google.android.material.snackbar.SnackbarManager$1:
    54:54:void <init>(com.google.android.material.snackbar.SnackbarManager) -> <init>
    57:60:boolean handleMessage(android.os.Message) -> handleMessage
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord -> com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    179:182:void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback) -> <init>
    185:185:boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback) -> isSnackbar
com.google.android.material.stateful.ExtendableSavedState -> com.google.android.material.stateful.ExtendableSavedState:
    91:91:void <clinit>() -> <clinit>
    36:36:void <init>(android.os.Parcel,java.lang.ClassLoader,com.google.android.material.stateful.ExtendableSavedState$1) -> <init>
    41:43:void <init>(android.os.Parcelable) -> <init>
    46:60:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    84:84:java.lang.String toString() -> toString
    64:79:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.stateful.ExtendableSavedState$1 -> com.google.android.material.stateful.ExtendableSavedState$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    97:97:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    103:103:com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    92:92:java.lang.Object[] newArray(int) -> newArray
    109:109:com.google.android.material.stateful.ExtendableSavedState[] newArray(int) -> newArray
com.google.android.material.switchmaterial.SwitchMaterial -> com.google.android.material.switchmaterial.SwitchMaterial:
    46:47:void <clinit>() -> <clinit>
    62:63:void <init>(android.content.Context) -> <init>
    66:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    121:141:android.content.res.ColorStateList getMaterialThemeColorsThumbTintList() -> getMaterialThemeColorsThumbTintList
    145:162:android.content.res.ColorStateList getMaterialThemeColorsTrackTintList() -> getMaterialThemeColorsTrackTintList
    117:117:boolean isUseMaterialThemeColors() -> isUseMaterialThemeColors
    88:96:void onAttachedToWindow() -> onAttachedToWindow
    105:113:void setUseMaterialThemeColors(boolean) -> setUseMaterialThemeColors
com.google.android.material.tabs.TabItem -> com.google.android.material.tabs.TabItem:
    48:49:void <init>(android.content.Context) -> <init>
    52:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.tabs.TabLayout -> com.google.android.material.tabs.TabLayout:
    198:198:void <clinit>() -> <clinit>
    431:432:void <init>(android.content.Context) -> <init>
    435:436:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    439:509:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:174:android.graphics.RectF access$1100(com.google.android.material.tabs.TabLayout) -> access$1100
    739:740:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> addOnTabSelectedListener
    754:757:void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> addOnTabSelectedListener
    642:643:void addTab(com.google.android.material.tabs.TabLayout$Tab) -> addTab
    653:654:void addTab(com.google.android.material.tabs.TabLayout$Tab,int) -> addTab
    663:664:void addTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> addTab
    674:675:void addTab(com.google.android.material.tabs.TabLayout$Tab,int,boolean) -> addTab
    686:700:void addTabFromItemView(com.google.android.material.tabs.TabItem) -> addTabFromItemView
    1466:1470:void addTabView(com.google.android.material.tabs.TabLayout$Tab) -> addTabView
    1474:1475:void addView(android.view.View) -> addView
    1479:1480:void addView(android.view.View,int) -> addView
    1484:1485:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1489:1490:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1493:1496:void addViewInternal(android.view.View) -> addViewInternal
    1617:1627:void animateToTab(int) -> animateToTab
    1773:1791:void applyModeAndGravity() -> applyModeAndGravity
    1751:1765:int calculateScrollXForTab(int,float) -> calculateScrollXForTab
    783:784:void clearOnTabSelectedListeners() -> clearOnTabSelectedListeners
    1456:1463:void configureTab(com.google.android.material.tabs.TabLayout$Tab,int) -> configureTab
    3095:3108:android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    1502:1505:android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> createLayoutParamsForTabs
    803:807:com.google.android.material.tabs.TabLayout$Tab createTabFromPool() -> createTabFromPool
    1440:1452:com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab) -> createTabView
    1745:1748:void dispatchTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabReselected
    1733:1736:void dispatchTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabSelected
    1739:1742:void dispatchTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> dispatchTabUnselected
    1645:1657:void ensureScrollAnimator() -> ensureScrollAnimator
    173:173:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3139:3139:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    3113:3121:int getDefaultHeight() -> getDefaultHeight
    836:836:int getSelectedTabPosition() -> getSelectedTabPosition
    827:827:com.google.android.material.tabs.TabLayout$Tab getTabAt(int) -> getTabAt
    821:821:int getTabCount() -> getTabCount
    948:948:int getTabGravity() -> getTabGravity
    1156:1156:android.content.res.ColorStateList getTabIconTint() -> getTabIconTint
    981:981:int getTabIndicatorGravity() -> getTabIndicatorGravity
    3143:3143:int getTabMaxWidth() -> getTabMaxWidth
    3125:3130:int getTabMinWidth() -> getTabMinWidth
    925:925:int getTabMode() -> getTabMode
    1167:1167:android.content.res.ColorStateList getTabRippleColor() -> getTabRippleColor
    1389:1389:int getTabScrollRange() -> getTabScrollRange
    1214:1214:android.graphics.drawable.Drawable getTabSelectedIndicator() -> getTabSelectedIndicator
    1118:1118:android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    1100:1100:boolean hasUnboundedRipple() -> hasUnboundedRipple
    1056:1056:boolean isInlineLabel() -> isInlineLabel
    1013:1013:boolean isTabIndicatorFullWidth() -> isTabIndicatorFullWidth
    795:798:com.google.android.material.tabs.TabLayout$Tab newTab() -> newTab
    1361:1375:void onAttachedToWindow() -> onAttachedToWindow
    1379:1386:void onDetachedFromWindow() -> onDetachedFromWindow
    1529:1537:void onDraw(android.graphics.Canvas) -> onDraw
    1543:1604:void onMeasure(int,int) -> onMeasure
    1414:1430:void populateFromPagerAdapter() -> populateFromPagerAdapter
    812:812:boolean releaseFromTabPool(com.google.android.material.tabs.TabLayout$Tab) -> releaseFromTabPool
    882:894:void removeAllTabs() -> removeAllTabs
    766:767:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> removeOnTabSelectedListener
    778:779:void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> removeOnTabSelectedListener
    846:847:void removeTab(com.google.android.material.tabs.TabLayout$Tab) -> removeTab
    860:877:void removeTabAt(int) -> removeTabAt
    1607:1614:void removeTabViewAt(int) -> removeTabViewAt
    1687:1688:void selectTab(com.google.android.material.tabs.TabLayout$Tab) -> selectTab
    1699:1730:void selectTab(com.google.android.material.tabs.TabLayout$Tab,boolean) -> selectTab
    1521:1524:void setElevation(float) -> setElevation
    1024:1034:void setInlineLabel(boolean) -> setInlineLabel
    1045:1046:void setInlineLabelResource(int) -> setInlineLabelResource
    708:709:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener) -> setOnTabSelectedListener
    719:728:void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener) -> setOnTabSelectedListener
    1394:1411:void setPagerAdapter(androidx.viewpager.widget.PagerAdapter,boolean) -> setPagerAdapter
    1660:1662:void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    593:594:void setScrollPosition(int,float,boolean) -> setScrollPosition
    613:615:void setScrollPosition(int,float,boolean,boolean) -> setScrollPosition
    1228:1232:void setSelectedTabIndicator(android.graphics.drawable.Drawable) -> setSelectedTabIndicator
    1245:1251:void setSelectedTabIndicator(int) -> setSelectedTabIndicator
    565:566:void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    966:970:void setSelectedTabIndicatorGravity(int) -> setSelectedTabIndicatorGravity
    578:579:void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    1670:1678:void setSelectedTabView(int) -> setSelectedTabView
    935:939:void setTabGravity(int) -> setTabGravity
    1137:1141:void setTabIconTint(android.content.res.ColorStateList) -> setTabIconTint
    1150:1151:void setTabIconTintResource(int) -> setTabIconTintResource
    1000:1002:void setTabIndicatorFullWidth(boolean) -> setTabIndicatorFullWidth
    912:916:void setTabMode(int) -> setTabMode
    1181:1190:void setTabRippleColor(android.content.res.ColorStateList) -> setTabRippleColor
    1202:1203:void setTabRippleColorResource(int) -> setTabRippleColorResource
    1109:1113:void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    1128:1129:void setTabTextColors(int,int) -> setTabTextColors
    1350:1351:void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter) -> setTabsFromPagerAdapter
    1069:1078:void setUnboundedRipple(boolean) -> setUnboundedRipple
    1089:1090:void setUnboundedRippleResource(int) -> setUnboundedRippleResource
    1262:1263:void setupWithViewPager(androidx.viewpager.widget.ViewPager) -> setupWithViewPager
    1282:1283:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean) -> setupWithViewPager
    1287:1341:void setupWithViewPager(androidx.viewpager.widget.ViewPager,boolean,boolean) -> setupWithViewPager
    1356:1356:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1433:1436:void updateAllTabs() -> updateAllTabs
    1509:1516:void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> updateTabViewLayoutParams
    1794:1802:void updateTabViews(boolean) -> updateTabViews
com.google.android.material.tabs.TabLayout$1 -> com.google.android.material.tabs.TabLayout$1:
    1650:1650:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    1653:1654:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$AdapterChangeListener -> com.google.android.material.tabs.TabLayout$AdapterChangeListener:
    3253:3253:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3260:3263:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    3266:3267:void setAutoRefresh(boolean) -> setAutoRefresh
com.google.android.material.tabs.TabLayout$PagerAdapterObserver -> com.google.android.material.tabs.TabLayout$PagerAdapterObserver:
    3237:3237:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3241:3242:void onChanged() -> onChanged
    3246:3247:void onInvalidated() -> onInvalidated
com.google.android.material.tabs.TabLayout$SlidingTabIndicator -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator:
    2769:2774:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2954:3005:void animateIndicatorToPosition(int,int) -> animateIndicatorToPosition
    3021:3033:void calculateTabViewContentBounds(com.google.android.material.tabs.TabLayout$TabView,android.graphics.RectF) -> calculateTabViewContentBounds
    2791:2797:boolean childrenNeedLayout() -> childrenNeedLayout
    3037:3090:void draw(android.graphics.Canvas) -> draw
    2811:2811:float getIndicatorPosition() -> getIndicatorPosition
    2890:2904:void onLayout(boolean,int,int,int,int) -> onLayout
    2830:2886:void onMeasure(int,int) -> onMeasure
    2816:2826:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2945:2951:void setIndicatorPosition(int,int) -> setIndicatorPosition
    2801:2808:void setIndicatorPositionFromTabPosition(int,float) -> setIndicatorPositionFromTabPosition
    2777:2781:void setSelectedIndicatorColor(int) -> setSelectedIndicatorColor
    2784:2788:void setSelectedIndicatorHeight(int) -> setSelectedIndicatorHeight
    2907:2942:void updateIndicatorPosition() -> updateIndicatorPosition
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1:
    2986:2986:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int,int,int,int) -> <init>
    2989:2993:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2 -> com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2:
    2996:2996:void <init>(com.google.android.material.tabs.TabLayout$SlidingTabIndicator,int) -> <init>
    2999:3001:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.tabs.TabLayout$Tab -> com.google.android.material.tabs.TabLayout$Tab:
    1832:1834:void <init>() -> <init>
    1806:1806:java.lang.CharSequence access$100(com.google.android.material.tabs.TabLayout$Tab) -> access$100
    1806:1806:int access$1000(com.google.android.material.tabs.TabLayout$Tab) -> access$1000
    1806:1806:java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab) -> access$200
    2031:2031:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    2135:2135:java.lang.CharSequence getContentDescription() -> getContentDescription
    1862:1862:android.view.View getCustomView() -> getCustomView
    1908:1908:android.graphics.drawable.Drawable getIcon() -> getIcon
    2014:2014:com.google.android.material.badge.BadgeDrawable getOrCreateBadge() -> getOrCreateBadge
    1918:1918:int getPosition() -> getPosition
    2072:2072:int getTabLabelVisibility() -> getTabLabelVisibility
    1839:1839:java.lang.Object getTag() -> getTag
    1932:1932:java.lang.CharSequence getText() -> getText
    2085:2086:boolean isSelected() -> isSelected
    2022:2023:void removeBadge() -> removeBadge
    2145:2153:void reset() -> reset
    2077:2078:void select() -> select
    2102:2103:com.google.android.material.tabs.TabLayout$Tab setContentDescription(int) -> setContentDescription
    2119:2121:com.google.android.material.tabs.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1878:1880:com.google.android.material.tabs.TabLayout$Tab setCustomView(android.view.View) -> setCustomView
    1897:1898:com.google.android.material.tabs.TabLayout$Tab setCustomView(int) -> setCustomView
    1943:1954:com.google.android.material.tabs.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1965:1966:com.google.android.material.tabs.TabLayout$Tab setIcon(int) -> setIcon
    1922:1923:void setPosition(int) -> setPosition
    2049:2060:com.google.android.material.tabs.TabLayout$Tab setTabLabelVisibility(int) -> setTabLabelVisibility
    1850:1851:com.google.android.material.tabs.TabLayout$Tab setTag(java.lang.Object) -> setTag
    1980:1988:com.google.android.material.tabs.TabLayout$Tab setText(java.lang.CharSequence) -> setText
    2000:2001:com.google.android.material.tabs.TabLayout$Tab setText(int) -> setText
    2139:2142:void updateView() -> updateView
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener -> com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener:
    3160:3162:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    3166:3168:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    3173:3186:void onPageScrolled(int,float,int) -> onPageScrolled
    3190:3202:void onPageSelected(int) -> onPageSelected
    3205:3206:void reset() -> reset
com.google.android.material.tabs.TabLayout$TabView -> com.google.android.material.tabs.TabLayout$TabView:
    2171:2182:void <init>(com.google.android.material.tabs.TabLayout,android.content.Context) -> <init>
    2157:2157:void access$000(com.google.android.material.tabs.TabLayout$TabView,android.content.Context) -> access$000
    2157:2157:int access$1200(com.google.android.material.tabs.TabLayout$TabView) -> access$1200
    2157:2157:void access$300(com.google.android.material.tabs.TabLayout$TabView,android.graphics.Canvas) -> access$300
    2157:2157:boolean access$400(com.google.android.material.tabs.TabLayout$TabView) -> access$400
    2157:2157:com.google.android.material.badge.BadgeDrawable access$500(com.google.android.material.tabs.TabLayout$TabView) -> access$500
    2157:2157:com.google.android.material.badge.BadgeDrawable access$600(com.google.android.material.tabs.TabLayout$TabView) -> access$600
    2157:2157:void access$700(com.google.android.material.tabs.TabLayout$TabView) -> access$700
    2157:2157:com.google.android.material.badge.BadgeDrawable access$800(com.google.android.material.tabs.TabLayout$TabView) -> access$800
    2157:2157:void access$900(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> access$900
    2545:2566:void addOnLayoutChangeListener(android.view.View) -> addOnLayoutChangeListener
    2750:2750:float approximateLineWidth(android.text.Layout,int,float) -> approximateLineWidth
    2505:2510:android.widget.FrameLayout createPreApi18BadgeAnchorRoot() -> createPreApi18BadgeAnchorRoot
    2240:2244:void drawBackground(android.graphics.Canvas) -> drawBackground
    2248:2259:void drawableStateChanged() -> drawableStateChanged
    2534:2534:com.google.android.material.badge.BadgeDrawable getBadge() -> getBadge
    2728:2740:int getContentWidth() -> getContentWidth
    2715:2718:android.widget.FrameLayout getCustomParentForBadge(android.view.View) -> getCustomParentForBadge
    2522:2527:com.google.android.material.badge.BadgeDrawable getOrCreateBadge() -> getOrCreateBadge
    2745:2745:com.google.android.material.tabs.TabLayout$Tab getTab() -> getTab
    2710:2710:boolean hasBadgeDrawable() -> hasBadgeDrawable
    2478:2488:void inflateAndAddDefaultIconView() -> inflateAndAddDefaultIconView
    2491:2501:void inflateAndAddDefaultTextView() -> inflateAndAddDefaultTextView
    2302:2305:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2310:2318:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    2322:2383:void onMeasure(int,int) -> onMeasure
    2263:2272:boolean performClick() -> performClick
    2538:2542:void removeBadge() -> removeBadge
    2393:2395:void reset() -> reset
    2278:2298:void setSelected(boolean) -> setSelected
    2386:2390:void setTab(com.google.android.material.tabs.TabLayout$Tab) -> setTab
    2601:2612:void tryAttachBadgeToAnchor(android.view.View) -> tryAttachBadgeToAnchor
    2615:2626:void tryRemoveBadgeFromAnchor() -> tryRemoveBadgeFromAnchor
    2569:2598:void tryUpdateBadgeAnchor() -> tryUpdateBadgeAnchor
    2704:2707:void tryUpdateBadgeDrawableBounds(android.view.View) -> tryUpdateBadgeDrawableBounds
    2398:2475:void update() -> update
    2185:2227:void updateBackgroundDrawable(android.content.Context) -> updateBackgroundDrawable
    2629:2635:void updateOrientation() -> updateOrientation
    2639:2700:void updateTextAndIcon(android.widget.TextView,android.widget.ImageView) -> updateTextAndIcon
com.google.android.material.tabs.TabLayout$TabView$1 -> com.google.android.material.tabs.TabLayout$TabView$1:
    2549:2549:void <init>(com.google.android.material.tabs.TabLayout$TabView,android.view.View) -> <init>
    2561:2564:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener:
    3216:3218:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3233:3233:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    3222:3223:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    3228:3228:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
com.google.android.material.tabs.TabLayoutMediator -> com.google.android.material.tabs.TabLayoutMediator:
    78:79:void <init>(com.google.android.material.tabs.TabLayout,androidx.viewpager2.widget.ViewPager2,com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy) -> <init>
    85:90:void <init>(com.google.android.material.tabs.TabLayout,androidx.viewpager2.widget.ViewPager2,boolean,com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy) -> <init>
    101:102:void attach() -> attach
    139:149:void detach() -> detach
    153:171:void populateTabsFromPagerAdapter() -> populateTabsFromPagerAdapter
com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver -> com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver:
    263:263:void <init>(com.google.android.material.tabs.TabLayoutMediator) -> <init>
    267:268:void onChanged() -> onChanged
    272:273:void onItemRangeChanged(int,int) -> onItemRangeChanged
    277:278:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    282:283:void onItemRangeInserted(int,int) -> onItemRangeInserted
    292:293:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    287:288:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback -> com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback:
    186:189:void <init>(com.google.android.material.tabs.TabLayout) -> <init>
    193:195:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    199:212:void onPageScrolled(int,float,int) -> onPageScrolled
    216:228:void onPageSelected(int) -> onPageSelected
    231:232:void reset() -> reset
com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener -> com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener:
    242:244:void <init>(androidx.viewpager2.widget.ViewPager2) -> <init>
    259:259:void onTabReselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabReselected
    248:249:void onTabSelected(com.google.android.material.tabs.TabLayout$Tab) -> onTabSelected
    254:254:void onTabUnselected(com.google.android.material.tabs.TabLayout$Tab) -> onTabUnselected
com.google.android.material.textfield.ClearTextEndIconDelegate -> com.google.android.material.textfield.ClearTextEndIconDelegate:
    81:82:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    37:37:boolean access$000(android.text.Editable) -> access$000
    37:37:android.animation.ValueAnimator access$100(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$100
    37:37:android.animation.AnimatorSet access$200(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$200
    37:37:android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate) -> access$300
    124:136:android.animation.ValueAnimator getAlphaAnimator(float[]) -> getAlphaAnimator
    140:152:android.animation.ValueAnimator getScaleAnimator() -> getScaleAnimator
    156:156:boolean hasText(android.text.Editable) -> hasText
    102:121:void initAnimators() -> initAnimators
    86:99:void initialize() -> initialize
com.google.android.material.textfield.ClearTextEndIconDelegate$1 -> com.google.android.material.textfield.ClearTextEndIconDelegate$1:
    44:44:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    53:62:void afterTextChanged(android.text.Editable) -> afterTextChanged
    46:46:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    49:49:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.ClearTextEndIconDelegate$2 -> com.google.android.material.textfield.ClearTextEndIconDelegate$2:
    65:65:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    68:74:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.ClearTextEndIconDelegate$3 -> com.google.android.material.textfield.ClearTextEndIconDelegate$3:
    91:91:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    94:95:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.ClearTextEndIconDelegate$4 -> com.google.android.material.textfield.ClearTextEndIconDelegate$4:
    107:107:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    110:111:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.ClearTextEndIconDelegate$5 -> com.google.android.material.textfield.ClearTextEndIconDelegate$5:
    115:115:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    118:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.ClearTextEndIconDelegate$6 -> com.google.android.material.textfield.ClearTextEndIconDelegate$6:
    128:128:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    131:133:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.ClearTextEndIconDelegate$7 -> com.google.android.material.textfield.ClearTextEndIconDelegate$7:
    144:144:void <init>(com.google.android.material.textfield.ClearTextEndIconDelegate) -> <init>
    147:150:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.CustomEndIconDelegate -> com.google.android.material.textfield.CustomEndIconDelegate:
    27:28:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    32:34:void initialize() -> initialize
com.google.android.material.textfield.CutoutDrawable -> com.google.android.material.textfield.CutoutDrawable:
    44:45:void <init>() -> <init>
    48:52:void <init>(com.google.android.material.shape.ShapeAppearanceModel) -> <init>
    87:94:void draw(android.graphics.Canvas) -> draw
    61:61:boolean hasCutout() -> hasCutout
    121:124:void postDraw(android.graphics.Canvas) -> postDraw
    97:109:void preDraw(android.graphics.Canvas) -> preDraw
    82:83:void removeCutout() -> removeCutout
    112:118:void saveCanvasLayer(android.graphics.Canvas) -> saveCanvasLayer
    67:74:void setCutout(float,float,float,float) -> setCutout
    77:78:void setCutout(android.graphics.RectF) -> setCutout
    55:58:void setPaintStyles() -> setPaintStyles
    127:127:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> useHardwareLayer
com.google.android.material.textfield.DropdownMenuEndIconDelegate -> com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    66:66:void <clinit>() -> <clinit>
    150:151:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    64:64:android.widget.AutoCompleteTextView access$000(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.EditText) -> access$000
    64:64:void access$100(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$100
    64:64:boolean access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1000
    64:64:long access$1102(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long) -> access$1102
    64:64:boolean access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1200
    64:64:android.animation.ValueAnimator access$1300(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$1300
    64:64:boolean access$202(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean) -> access$202
    64:64:android.view.accessibility.AccessibilityManager access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$300
    64:64:void access$400(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$400
    64:64:void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$500
    64:64:void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$600
    64:64:void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> access$700
    64:64:android.text.TextWatcher access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$800
    64:64:com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> access$900
    259:276:void addRippleEffect(android.widget.AutoCompleteTextView) -> addRippleEffect
    314:336:void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnFilledLayout
    284:307:void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable) -> addRippleEffectOnOutlinedLayout
    403:404:android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText) -> castAutoCompleteTextViewOrThrow
    434:446:android.animation.ValueAnimator getAlphaAnimator(int,float[]) -> getAlphaAnimator
    383:393:com.google.android.material.shape.MaterialShapeDrawable getPopUpMaterialShapeDrawable(float,float,float,int) -> getPopUpMaterialShapeDrawable
    421:431:void initAnimators() -> initAnimators
    155:209:void initialize() -> initialize
    218:218:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    397:398:boolean isDropdownPopupActive() -> isDropdownPopupActive
    413:418:void setEndIconChecked(boolean) -> setEndIconChecked
    247:255:void setPopupBackground(android.widget.AutoCompleteTextView) -> setPopupBackground
    340:378:void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView) -> setUpDropdownShowHideBehavior
    213:213:boolean shouldTintIconOnError() -> shouldTintIconOnError
    222:244:void showHideDropdown(android.widget.AutoCompleteTextView) -> showHideDropdown
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1:
    71:71:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    80:91:void afterTextChanged(android.text.Editable) -> afterTextChanged
    73:73:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    76:76:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$1$1:
    83:83:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate$1,android.widget.AutoCompleteTextView) -> <init>
    86:89:void run() -> run
com.google.android.material.textfield.DropdownMenuEndIconDelegate$2 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$2:
    94:94:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,com.google.android.material.textfield.TextInputLayout) -> <init>
    98:106:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    110:118:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
com.google.android.material.textfield.DropdownMenuEndIconDelegate$3 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$3:
    121:121:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    124:137:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.DropdownMenuEndIconDelegate$4 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$4:
    197:197:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    200:202:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.DropdownMenuEndIconDelegate$5 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$5:
    341:341:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView) -> <init>
    344:351:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.material.textfield.DropdownMenuEndIconDelegate$6 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$6:
    356:356:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    359:364:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.google.android.material.textfield.DropdownMenuEndIconDelegate$7 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$7:
    369:369:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    372:375:void onDismiss() -> onDismiss
com.google.android.material.textfield.DropdownMenuEndIconDelegate$8 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$8:
    424:424:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    427:429:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.textfield.DropdownMenuEndIconDelegate$9 -> com.google.android.material.textfield.DropdownMenuEndIconDelegate$9:
    438:438:void <init>(com.google.android.material.textfield.DropdownMenuEndIconDelegate) -> <init>
    441:443:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.EndIconDelegate -> com.google.android.material.textfield.EndIconDelegate:
    36:40:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    61:61:boolean isBoxBackgroundModeSupported(int) -> isBoxBackgroundModeSupported
    52:52:boolean shouldTintIconOnError() -> shouldTintIconOnError
com.google.android.material.textfield.IndicatorViewController -> com.google.android.material.textfield.IndicatorViewController:
    117:122:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    58:58:int access$002(com.google.android.material.textfield.IndicatorViewController,int) -> access$002
    58:58:android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator) -> access$102
    58:58:android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController) -> access$200
    363:392:void addIndicator(android.widget.TextView,int) -> addIndicator
    347:356:void adjustIndicatorPadding() -> adjustIndicatorPadding
    359:359:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    325:328:void cancelCaptionAnimator() -> cancelCaptionAnimator
    295:296:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    309:313:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    317:321:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    486:486:boolean errorIsDisplayed() -> errorIsDisplayed
    490:490:boolean errorShouldBeShown() -> errorShouldBeShown
    336:338:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    515:515:java.lang.CharSequence getErrorText() -> getErrorText
    539:539:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    544:544:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    519:519:java.lang.CharSequence getHelperText() -> getHelperText
    567:567:android.content.res.ColorStateList getHelperTextViewColors() -> getHelperTextViewColors
    562:562:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    500:500:boolean helperTextIsDisplayed() -> helperTextIsDisplayed
    504:504:boolean helperTextShouldBeShown() -> helperTextShouldBeShown
    162:176:void hideError() -> hideError
    138:146:void hideHelperText() -> hideHelperText
    494:494:boolean isCaptionStateError(int) -> isCaptionStateError
    508:508:boolean isCaptionStateHelperText(int) -> isCaptionStateHelperText
    331:331:boolean isCaptionView(int) -> isCaptionView
    447:447:boolean isErrorEnabled() -> isErrorEnabled
    451:451:boolean isHelperTextEnabled() -> isHelperTextEnabled
    395:408:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    262:285:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    418:444:void setErrorEnabled(boolean) -> setErrorEnabled
    555:559:void setErrorTextAppearance(int) -> setErrorTextAppearance
    548:552:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    578:582:void setHelperTextAppearance(int) -> setHelperTextAppearance
    456:483:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    571:575:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    532:535:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    524:529:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    411:414:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    188:188:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    149:159:void showError(java.lang.CharSequence) -> showError
    125:135:void showHelper(java.lang.CharSequence) -> showHelper
    200:258:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
com.google.android.material.textfield.IndicatorViewController$1 -> com.google.android.material.textfield.IndicatorViewController$1:
    226:226:void <init>(com.google.android.material.textfield.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    229:242:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    246:249:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.textfield.NoEndIconDelegate -> com.google.android.material.textfield.NoEndIconDelegate:
    26:27:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    31:34:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate -> com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    77:78:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    33:33:boolean access$000(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$000
    33:33:android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> access$100
    112:113:boolean hasPasswordTransformation() -> hasPasswordTransformation
    82:109:void initialize() -> initialize
com.google.android.material.textfield.PasswordToggleEndIconDelegate$1 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$1:
    36:36:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    48:48:void afterTextChanged(android.text.Editable) -> afterTextChanged
    41:42:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    45:45:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$2 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$2:
    52:52:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    55:61:void onEditTextAttached(com.google.android.material.textfield.TextInputLayout) -> onEditTextAttached
com.google.android.material.textfield.PasswordToggleEndIconDelegate$3 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$3:
    64:64:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    67:73:void onEndIconChanged(com.google.android.material.textfield.TextInputLayout,int) -> onEndIconChanged
com.google.android.material.textfield.PasswordToggleEndIconDelegate$4 -> com.google.android.material.textfield.PasswordToggleEndIconDelegate$4:
    87:87:void <init>(com.google.android.material.textfield.PasswordToggleEndIconDelegate) -> <init>
    90:105:void onClick(android.view.View) -> onClick
com.google.android.material.textfield.TextInputEditText -> com.google.android.material.textfield.TextInputEditText:
    42:43:void <init>(android.content.Context) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:78:java.lang.CharSequence getHint() -> getHint
    107:108:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    95:102:com.google.android.material.textfield.TextInputLayout getTextInputLayout() -> getTextInputLayout
    55:67:void onAttachedToWindow() -> onAttachedToWindow
    84:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.google.android.material.textfield.TextInputLayout -> com.google.android.material.textfield.TextInputLayout:
    174:174:void <clinit>() -> <clinit>
    392:393:void <init>(android.content.Context) -> <init>
    396:397:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    400:717:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    172:172:boolean access$000(com.google.android.material.textfield.TextInputLayout) -> access$000
    172:172:com.google.android.material.internal.CheckableImageButton access$100(com.google.android.material.textfield.TextInputLayout) -> access$100
    2630:2634:void addOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> addOnEditTextAttachedListener
    2602:2603:void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> addOnEndIconChangedListener
    722:739:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    3243:3260:void animateToExpansionFraction(float) -> animateToExpansionFraction
    1928:1946:void applyBoxAttributes() -> applyBoxAttributes
    1950:1958:void applyBoxUnderlineAttributes() -> applyBoxUnderlineAttributes
    3123:3127:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    2894:2896:void applyEndIconTint() -> applyEndIconTint
    2985:3000:void applyIconTint(com.google.android.material.internal.CheckableImageButton,boolean,android.content.res.ColorStateList,boolean,android.graphics.PorterDuff$Mode) -> applyIconTint
    2862:2868:void applyStartIconTint() -> applyStartIconTint
    795:816:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    1919:1924:int calculateBoxBackgroundColor() -> calculateBoxBackgroundColor
    1846:1847:android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect) -> calculateCollapsedTextBounds
    1898:1904:int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float) -> calculateExpandedLabelBottom
    1890:1893:int calculateExpandedLabelTop(android.graphics.Rect,float) -> calculateExpandedLabelTop
    1873:1874:android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect) -> calculateExpandedTextBounds
    1829:1838:int calculateLabelMarginTop() -> calculateLabelMarginTop
    1961:1961:boolean canDrawOutlineStroke() -> canDrawOutlineStroke
    1965:1965:boolean canDrawStroke() -> canDrawStroke
    2648:2649:void clearOnEditTextAttachedListeners() -> clearOnEditTextAttachedListeners
    2617:2618:void clearOnEndIconChangedListeners() -> clearOnEndIconChangedListeners
    3117:3120:void closeCutout() -> closeCutout
    3085:3097:void collapseHint(boolean) -> collapseHint
    3100:3100:boolean cutoutEnabled() -> cutoutEnabled
    3131:3131:boolean cutoutIsOpen() -> cutoutIsOpen
    2852:2855:void dispatchOnEditTextAttached() -> dispatchOnEditTextAttached
    2875:2878:void dispatchOnEndIconChanged(int) -> dispatchOnEndIconChanged
    1022:1024:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    2091:2094:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    3064:3067:void draw(android.graphics.Canvas) -> draw
    3076:3082:void drawBoxUnderline(android.graphics.Canvas) -> drawBoxUnderline
    3070:3073:void drawHint(android.graphics.Canvas) -> drawHint
    3136:3164:void drawableStateChanged() -> drawableStateChanged
    3227:3239:void expandHint(boolean) -> expandHint
    1135:1138:int getBaseline() -> getBaseline
    743:744:com.google.android.material.shape.MaterialShapeDrawable getBoxBackground() -> getBoxBackground
    897:897:int getBoxBackgroundColor() -> getBoxBackgroundColor
    782:782:int getBoxBackgroundMode() -> getBoxBackgroundMode
    980:980:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    990:990:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    970:970:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    960:960:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    856:856:int getBoxStrokeColor() -> getBoxStrokeColor
    1774:1774:int getCounterMaxLength() -> getCounterMaxLength
    1783:1786:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    1659:1659:android.content.res.ColorStateList getCounterOverflowTextColor() -> getCounterOverflowTextColor
    1616:1616:android.content.res.ColorStateList getCounterTextColor() -> getCounterTextColor
    1346:1346:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    1186:1186:android.widget.EditText getEditText() -> getEditText
    2554:2554:java.lang.CharSequence getEndIconContentDescription() -> getEndIconContentDescription
    2847:2848:com.google.android.material.textfield.EndIconDelegate getEndIconDelegate() -> getEndIconDelegate
    2514:2514:android.graphics.drawable.Drawable getEndIconDrawable() -> getEndIconDrawable
    2400:2400:int getEndIconMode() -> getEndIconMode
    2970:2975:com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable() -> getEndIconToUpdateDummyDrawable
    2843:2843:com.google.android.material.internal.CheckableImageButton getEndIconView() -> getEndIconView
    2104:2104:java.lang.CharSequence getError() -> getError
    1377:1377:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    1513:1513:android.graphics.drawable.Drawable getErrorIconDrawable() -> getErrorIconDrawable
    3284:3284:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    2116:2116:java.lang.CharSequence getHelperText() -> getHelperText
    1454:1454:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    1221:1221:java.lang.CharSequence getHint() -> getHint
    3279:3279:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    3274:3274:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1327:1327:android.content.res.ColorStateList getHintTextColor() -> getHintTextColor
    2737:2737:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    2723:2723:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    2328:2328:java.lang.CharSequence getStartIconContentDescription() -> getStartIconContentDescription
    2220:2220:android.graphics.drawable.Drawable getStartIconDrawable() -> getStartIconDrawable
    1017:1017:android.graphics.Typeface getTypeface() -> getTypeface
    2871:2871:boolean hasEndIcon() -> hasEndIcon
    2858:2858:boolean hasStartIcon() -> hasStartIcon
    1669:1669:boolean isCounterEnabled() -> isCounterEnabled
    2477:2477:boolean isEndIconCheckable() -> isEndIconCheckable
    2445:2445:boolean isEndIconVisible() -> isEndIconVisible
    1401:1401:boolean isErrorEnabled() -> isErrorEnabled
    3269:3269:boolean isHelperTextDisplayed() -> isHelperTextDisplayed
    1448:1448:boolean isHelperTextEnabled() -> isHelperTextEnabled
    2128:2128:boolean isHintAnimationEnabled() -> isHintAnimationEnabled
    1274:1274:boolean isHintEnabled() -> isHintEnabled
    3264:3264:boolean isHintExpanded() -> isHintExpanded
    2748:2748:boolean isPasswordVisibilityToggleEnabled() -> isPasswordVisibilityToggleEnabled
    1283:1283:boolean isProvidingHint() -> isProvidingHint
    1908:1908:boolean isSingleLineFilledTextField() -> isSingleLineFilledTextField
    2288:2288:boolean isStartIconCheckable() -> isStartIconCheckable
    2265:2265:boolean isStartIconVisible() -> isStartIconVisible
    786:792:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    3034:3053:void onLayout(boolean,int,int,int,int) -> onLayout
    2143:2156:void onMeasure(int,int) -> onMeasure
    2068:2087:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2057:2063:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    3104:3114:void openCutout() -> openCutout
    2820:2826:void passwordVisibilityToggleRequested(boolean) -> passwordVisibilityToggleRequested
    1759:1766:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    2643:2644:void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener) -> removeOnEditTextAttachedListener
    2612:2613:void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener) -> removeOnEndIconChangedListener
    883:888:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    869:870:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    765:772:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    938:951:void setBoxCornerRadii(float,float,float,float) -> setBoxCornerRadii
    914:919:void setBoxCornerRadiiResources(int,int,int,int) -> setBoxCornerRadiiResources
    843:847:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1559:1576:void setCounterEnabled(boolean) -> setCounterEnabled
    1679:1689:void setCounterMaxLength(int) -> setCounterMaxLength
    1627:1631:void setCounterOverflowTextAppearance(int) -> setCounterOverflowTextAppearance
    1643:1647:void setCounterOverflowTextColor(android.content.res.ColorStateList) -> setCounterOverflowTextColor
    1586:1590:void setCounterTextAppearance(int) -> setCounterTextAppearance
    1601:1605:void setCounterTextColor(android.content.res.ColorStateList) -> setCounterTextColor
    1332:1338:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    1044:1045:void setEditText(android.widget.EditText) -> setEditText
    820:823:void setEditTextBoxBackground() -> setEditTextBoxBackground
    1754:1756:void setEnabled(boolean) -> setEnabled
    2454:2455:void setEndIconActivated(boolean) -> setEndIconActivated
    2468:2469:void setEndIconCheckable(boolean) -> setEndIconCheckable
    2527:2528:void setEndIconContentDescription(int) -> setEndIconContentDescription
    2541:2544:void setEndIconContentDescription(java.lang.CharSequence) -> setEndIconContentDescription
    2490:2491:void setEndIconDrawable(int) -> setEndIconDrawable
    2503:2504:void setEndIconDrawable(android.graphics.drawable.Drawable) -> setEndIconDrawable
    2375:2381:void setEndIconMode(int) -> setEndIconMode
    2411:2412:void setEndIconOnClickListener(android.view.View$OnClickListener) -> setEndIconOnClickListener
    2423:2425:void setEndIconOnLongClickListener(android.view.View$OnLongClickListener) -> setEndIconOnLongClickListener
    2569:2574:void setEndIconTintList(android.content.res.ColorStateList) -> setEndIconTintList
    2585:2590:void setEndIconTintMode(android.graphics.PorterDuff$Mode) -> setEndIconTintMode
    2433:2437:void setEndIconVisible(boolean) -> setEndIconVisible
    1468:1482:void setError(java.lang.CharSequence) -> setError
    1357:1358:void setErrorEnabled(boolean) -> setErrorEnabled
    1491:1492:void setErrorIconDrawable(int) -> setErrorIconDrawable
    1501:1503:void setErrorIconDrawable(android.graphics.drawable.Drawable) -> setErrorIconDrawable
    1523:1532:void setErrorIconTintList(android.content.res.ColorStateList) -> setErrorIconTintList
    1542:1551:void setErrorIconTintMode(android.graphics.PorterDuff$Mode) -> setErrorIconTintMode
    3219:3224:void setErrorIconVisible(boolean) -> setErrorIconVisible
    1366:1367:void setErrorTextAppearance(int) -> setErrorTextAppearance
    1371:1372:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    1429:1439:void setHelperText(java.lang.CharSequence) -> setHelperText
    1391:1392:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    1412:1413:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    1386:1387:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    1196:1200:void setHint(java.lang.CharSequence) -> setHint
    2138:2139:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    1236:1265:void setHintEnabled(boolean) -> setHintEnabled
    1203:1211:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    1292:1300:void setHintTextAppearance(int) -> setHintTextAppearance
    1307:1318:void setHintTextColor(android.content.res.ColorStateList) -> setHintTextColor
    3018:3030:void setIconClickable(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconClickable
    3006:3008:void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> setIconOnClickListener
    3012:3014:void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener) -> setIconOnLongClickListener
    2694:2696:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    2710:2711:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    2663:2665:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    2679:2680:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    2763:2770:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    2786:2789:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    2802:2805:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    2279:2280:void setStartIconCheckable(boolean) -> setStartIconCheckable
    2301:2302:void setStartIconContentDescription(int) -> setStartIconContentDescription
    2315:2318:void setStartIconContentDescription(java.lang.CharSequence) -> setStartIconContentDescription
    2186:2187:void setStartIconDrawable(int) -> setStartIconDrawable
    2199:2209:void setStartIconDrawable(android.graphics.drawable.Drawable) -> setStartIconDrawable
    2231:2232:void setStartIconOnClickListener(android.view.View$OnClickListener) -> setStartIconOnClickListener
    2243:2245:void setStartIconOnLongClickListener(android.view.View$OnLongClickListener) -> setStartIconOnLongClickListener
    2343:2348:void setStartIconTintList(android.content.res.ColorStateList) -> setStartIconTintList
    2359:2364:void setStartIconTintMode(android.graphics.PorterDuff$Mode) -> setStartIconTintMode
    2253:2257:void setStartIconVisible(boolean) -> setStartIconVisible
    1804:1826:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    2836:2839:void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    1000:1010:void setTypeface(android.graphics.Typeface) -> setTypeface
    828:828:boolean shouldUseEditTextBackgroundForBoxBackground() -> shouldUseEditTextBackgroundForBoxBackground
    2881:2891:void tintEndIconOnError(boolean) -> tintEndIconOnError
    3056:3060:void updateBoxUnderlineBounds(android.graphics.Rect) -> updateBoxUnderlineBounds
    1692:1695:void updateCounter() -> updateCounter
    1698:1732:void updateCounter(int) -> updateCounter
    1740:1747:void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean) -> updateCounterContentDescription
    1790:1800:void updateCounterTextAppearanceAndColor() -> updateCounterTextAppearanceAndColor
    1971:1972:void updateEditTextBackground() -> updateEditTextBackground
    2159:2173:boolean updateEditTextHeightBasedOnIcon() -> updateEditTextHeightBasedOnIcon
    2903:2965:boolean updateIconDummyDrawables() -> updateIconDummyDrawables
    1122:1131:void updateInputLayoutMargins() -> updateInputLayoutMargins
    1143:1144:void updateLabelState(boolean) -> updateLabelState
    1147:1181:void updateLabelState(boolean,boolean) -> updateLabelState
    3167:3168:void updateTextInputBoxState() -> updateTextInputBoxState
com.google.android.material.textfield.TextInputLayout$1 -> com.google.android.material.textfield.TextInputLayout$1:
    1070:1070:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    1073:1077:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1080:1080:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1083:1083:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.google.android.material.textfield.TextInputLayout$2 -> com.google.android.material.textfield.TextInputLayout$2:
    2077:2077:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2080:2083:void run() -> run
com.google.android.material.textfield.TextInputLayout$3 -> com.google.android.material.textfield.TextInputLayout$3:
    2149:2149:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    2152:2153:void run() -> run
com.google.android.material.textfield.TextInputLayout$4 -> com.google.android.material.textfield.TextInputLayout$4:
    3251:3251:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3254:3255:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate -> com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate:
    3296:3298:void <init>(com.google.android.material.textfield.TextInputLayout) -> <init>
    3303:3329:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.google.android.material.textfield.TextInputLayout$SavedState -> com.google.android.material.textfield.TextInputLayout$SavedState:
    2033:2033:void <clinit>() -> <clinit>
    2007:2008:void <init>(android.os.Parcelable) -> <init>
    2011:2014:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2026:2026:java.lang.String toString() -> toString
    2018:2021:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.material.textfield.TextInputLayout$SavedState$1 -> com.google.android.material.textfield.TextInputLayout$SavedState$1:
    2034:2034:void <init>() -> <init>
    2034:2034:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2034:2034:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2038:2038:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2044:2044:com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2034:2034:java.lang.Object[] newArray(int) -> newArray
    2050:2050:com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int) -> newArray
com.google.android.material.textview.MaterialTextView -> com.google.android.material.textview.MaterialTextView:
    77:78:void <init>(android.content.Context) -> <init>
    81:82:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    86:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    91:103:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    115:127:void applyLineHeightFromViewAppearance(android.content.res.Resources$Theme,int) -> applyLineHeightFromViewAppearance
    130:130:boolean canApplyTextAppearanceLineHeight(android.content.Context) -> canApplyTextAppearanceLineHeight
    168:174:int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> findViewAppearanceResourceId
    137:143:int readFirstAvailableDimension(android.content.Context,android.content.res.TypedArray,int[]) -> readFirstAvailableDimension
    107:112:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    152:163:boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int) -> viewAttrsHasLineHeight
com.google.android.material.theme.MaterialComponentsViewInflater -> com.google.android.material.theme.MaterialComponentsViewInflater:
    48:48:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    53:57:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    97:97:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    103:103:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    109:109:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    67:91:boolean shouldInflateAppCompatButton(android.content.Context,android.util.AttributeSet) -> shouldInflateAppCompatButton
com.google.android.material.transformation.ExpandableBehavior -> com.google.android.material.transformation.ExpandableBehavior:
    62:62:void <init>() -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:39:int access$000(com.google.android.material.transformation.ExpandableBehavior) -> access$000
    142:147:boolean didStateChange(boolean) -> didStateChange
    131:138:com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    160:162:com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class) -> from
    118:125:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    90:112:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
com.google.android.material.transformation.ExpandableBehavior$1 -> com.google.android.material.transformation.ExpandableBehavior$1:
    98:98:void <init>(com.google.android.material.transformation.ExpandableBehavior,android.view.View,int,com.google.android.material.expandable.ExpandableWidget) -> <init>
    101:106:boolean onPreDraw() -> onPreDraw
com.google.android.material.transformation.ExpandableTransformationBehavior -> com.google.android.material.transformation.ExpandableTransformationBehavior:
    42:42:void <init>() -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    70:92:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
com.google.android.material.transformation.ExpandableTransformationBehavior$1 -> com.google.android.material.transformation.ExpandableTransformationBehavior$1:
    78:78:void <init>(com.google.android.material.transformation.ExpandableTransformationBehavior) -> <init>
    81:82:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior -> com.google.android.material.transformation.FabTransformationBehavior:
    85:85:void <init>() -> <init>
    88:89:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    706:714:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    664:682:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    622:624:void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF) -> calculateDependencyWindowBounds
    538:552:android.util.Pair calculateMotionTiming(float,float,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec) -> calculateMotionTiming
    628:637:float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterX
    642:651:float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateRevealCenterY
    557:578:float calculateTranslationX(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationX
    583:604:float calculateTranslationY(android.view.View,android.view.View,com.google.android.material.animation.Positioning) -> calculateTranslationY
    686:699:float calculateValueOfAnimationAtEndOfExpansion(com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    608:619:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    498:528:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    458:488:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    226:252:void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List) -> createDependencyTranslationAnimation
    203:218:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    373:448:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    311:312:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    770:781:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    747:758:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    263:301:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    731:735:int getBackgroundTint(android.view.View) -> getBackgroundTint
    95:96:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    111:116:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    125:189:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    723:726:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
com.google.android.material.transformation.FabTransformationBehavior$1 -> com.google.android.material.transformation.FabTransformationBehavior$1:
    165:165:void <init>(com.google.android.material.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    178:184:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    168:174:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$2 -> com.google.android.material.transformation.FabTransformationBehavior$2:
    338:338:void <init>(com.google.android.material.transformation.FabTransformationBehavior,android.view.View) -> <init>
    341:342:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.android.material.transformation.FabTransformationBehavior$3 -> com.google.android.material.transformation.FabTransformationBehavior$3:
    349:349:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    358:359:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    353:354:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationBehavior$4 -> com.google.android.material.transformation.FabTransformationBehavior$4:
    401:401:void <init>(com.google.android.material.transformation.FabTransformationBehavior,com.google.android.material.circularreveal.CircularRevealWidget) -> <init>
    406:409:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec -> com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec:
    784:784:void <init>() -> <init>
com.google.android.material.transformation.FabTransformationScrimBehavior -> com.google.android.material.transformation.FabTransformationScrimBehavior:
    51:51:void <init>() -> <init>
    54:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    108:122:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    59:59:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    76:99:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    66:66:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
com.google.android.material.transformation.FabTransformationScrimBehavior$1 -> com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    84:84:void <init>(com.google.android.material.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    94:97:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    87:90:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.google.android.material.transformation.FabTransformationSheetBehavior -> com.google.android.material.transformation.FabTransformationSheetBehavior:
    49:49:void <init>() -> <init>
    52:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:68:com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    75:76:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    80:123:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
com.google.android.material.transformation.TransformationChildCard -> com.google.android.material.transformation.TransformationChildCard:
    35:36:void <init>(android.content.Context) -> <init>
    39:40:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.google.android.material.transformation.TransformationChildLayout -> com.google.android.material.transformation.TransformationChildLayout:
    38:39:void <init>(android.content.Context) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.intuit.sdp.BuildConfig -> b.b.a.a:
    java.lang.String VERSION_NAME -> f
    int VERSION_CODE -> e
    boolean DEBUG -> a
    java.lang.String BUILD_TYPE -> c
    java.lang.String APPLICATION_ID -> b
    java.lang.String FLAVOR -> d
    6:6:void <init>() -> <init>
com.intuit.sdp.R -> b.b.a.b:
    668:668:void <init>() -> <init>
com.intuit.sdp.R$dimen -> b.b.a.b$a:
    455:455:void <init>() -> <init>
com.intuit.sdp.R$id -> b.b.a.b$b:
    740:740:void <init>() -> <init>
com.intuit.sdp.R$layout -> b.b.a.b$c:
    626:626:void <init>() -> <init>
